{{- if not .Values.workspaceWww.existingConfigMap }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "carto.workspaceWww.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
    app.kubernetes.io/component: workspace-www
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  CARTO_DATA_WAREHOUSE_ENABLED: {{ .Values.cartoConfigValues.cartoDataWarehouseEnabled | quote }}
  {{- if $.Values.appConfigValues.bigqueryOauth2ClientId }}
  REACT_APP_BIGQUERY_OAUTH: "true"
  {{- else }}
  REACT_APP_BIGQUERY_OAUTH: "false"
  {{- end }}
  CARTO_SELFHOSTED_VERSION: {{ .Chart.AppVersion | quote }}
  LOG_LEVEL: "debug"
  REACT_APP_ACCOUNTS_API_URL: "https://{{ .Values.cartoConfigValues.cartoAccApiDomain }}"
  REACT_APP_ACCOUNTS_URL: "https://{{ .Values.appConfigValues.selfHostedDomain }}/acc/"
  REACT_APP_API_BASE_URL: "https://{{ .Values.appConfigValues.selfHostedDomain }}/api"
  REACT_APP_AUTH0_DOMAIN: {{ .Values.cartoConfigValues.cartoAuth0CustomDomain | quote }}
  REACT_APP_CLIENT_ID: {{ .Values.cartoConfigValues.cartoAuth0ClientId | quote }}
  REACT_APP_HUBSPOT_ID: "474999"
  REACT_APP_HUBSPOT_LIMIT_FORM_ID: "cd9486fa-5766-4bac-81b9-d8c6cd029b3b"
  REACT_APP_HUBSPOT_REQUEST_SUBSCRIPTION_FORM_ID: "49d53632-80f9-4720-b4be-bf623a527af4"
  REACT_APP_LAUNCH_DARKLY_CLIENT_SIDE_ID: {{ .Values.cartoConfigValues.launchDarklyClientSideId | quote }}
  REACT_APP_PUBLIC_MAP_URL: "https://{{ .Values.appConfigValues.selfHostedDomain }}/api/v3/maps/public"
  REACT_APP_WORKSPACE_API_URL: "https://{{ .Values.appConfigValues.selfHostedDomain }}/workspace-api"
  REACT_APP_NOTIFIER_API_URL: "https://{{ .Values.appConfigValues.selfHostedDomain }}/notifier"
  REACT_APP_WORKSPACE_URL_TEMPLATE: "https://{tenantDomain}"
  THUMBNAILS_BUCKET_EXTERNAL_URL: {{ .Values.appConfigValues.thumbnailsBucketExternalURL | quote }}
  REACT_APP_WORKSPACE_WWW_ENABLE_TRACKJS: {{ .Values.appConfigValues.enableTrackJS | quote }}
  REACT_APP_WORKSPACE_WWW_ENABLE_EXPORTS: "false"
  REACT_APP_WORKSPACE_WWW_ENABLE_GENAI: "false"
  REACT_APP_ASKNICELY_MIN_HOURS_ACCOUNT_OLD_ENOUGH: "1920"
  {{- if .Values.appConfigValues.ssoOrganizationId }}
  REACT_APP_ORGANIZATION_ID: {{ .Values.appConfigValues.ssoOrganizationId }}
  {{- end }}
  config.yaml: |
    # Template config file
    cartoVersion:
      selfHosted: {{ .Chart.AppVersion | quote }}

    auth0:
      domain: {{ .Values.cartoConfigValues.cartoAuth0CustomDomain | quote }}
      audience: "carto-cloud-native-api"
      clientId: {{ .Values.cartoConfigValues.cartoAuth0ClientId | quote }}
      organizationId: {{ .Values.appConfigValues.ssoOrganizationId }}
      studentClientId: ""

    apis:
      accountsUrl: "https://{{ .Values.cartoConfigValues.cartoAccApiDomain }}"
      workspaceUrl: "https://{{ .Values.appConfigValues.selfHostedDomain }}/workspace-api"
      notifierUrl: "https://{{ .Values.appConfigValues.selfHostedDomain }}/notifier"
      baseUrl: "https://{{ .Values.appConfigValues.selfHostedDomain }}/api"
      recurlyUrl: ""
      doUrl: "https://public.carto.com/api/v4/data/observatory"

    hubspot:
      id: "474999"
      limitFormId: "cd9486fa-5766-4bac-81b9-d8c6cd029b3b"
      requestSubscriptionFormId: "49d53632-80f9-4720-b4be-bf623a527af4"

    launchDarkly:
      clientSideId: {{ .Values.cartoConfigValues.launchDarklyClientSideId | quote }}

    accountsUrl: "https://{{ .Values.appConfigValues.selfHostedDomain }}/acc/"
    doBundleUrl: "/vendors/do-catalog.umd.min.js"
    googleMapsApiKey: "${GOOGLE_MAPS_API_KEY}"
    publicMapUrl: "https://{{ .Values.appConfigValues.selfHostedDomain }}/api/v3/maps/public"
    publicCatalogUrl: "https://carto.com/spatial-data-catalog/browser"
    bigqueryOAuthEnabled: ${REACT_APP_BIGQUERY_OAUTH}
    enableFeaturedApplications: true
    enableTrackJs: {{ .Values.appConfigValues.enableTrackJS | quote }}
    enableExports: ${REACT_APP_WORKSPACE_WWW_ENABLE_EXPORTS}
    enableGenAI: ${REACT_APP_WORKSPACE_WWW_ENABLE_GENAI}
    cartoDwEnabled: {{ .Values.cartoConfigValues.cartoDataWarehouseEnabled | quote }}
    commitHash: "" # If is empty not would be included in TrackJS metadata

    askNicely:
      minHoursAccountOldEnough: ${REACT_APP_ASKNICELY_MIN_HOURS_ACCOUNT_OLD_ENOUGH}
{{- end }}
