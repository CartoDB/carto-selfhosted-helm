{{- if (include "carto.baseUrl" .) }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "carto.accountsWww.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: accounts-www
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.accountsWww.replicaCount }}
  {{- if .Values.accountsWww.updateStrategy }}
  strategy: {{- toYaml .Values.accountsWww.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: accounts-www
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/accounts-www/configmap.yaml") . | sha256sum }}
        {{- if .Values.accountsWww.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.accountsWww.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: accounts-www
        {{- if .Values.accountsWww.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.accountsWww.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "carto.accountsWww.serviceAccountName" . }}
      {{- include "carto.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.accountsWww.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.accountsWww.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.accountsWww.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.accountsWww.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.accountsWww.podAffinityPreset "component" "accounts-www" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.accountsWww.podAntiAffinityPreset "component" "accounts-www" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.accountsWww.nodeAffinityPreset.type "key" .Values.accountsWww.nodeAffinityPreset.key "values" .Values.accountsWww.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.accountsWww.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.accountsWww.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.accountsWww.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.accountsWww.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.accountsWww.priorityClassName }}
      priorityClassName: {{ .Values.accountsWww.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.accountsWww.schedulerName }}
      schedulerName: {{ .Values.accountsWww.schedulerName | quote }}
      {{- end }}
      {{- if .Values.accountsWww.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.accountsWww.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if not .Values.diagnosticMode.enabled }}
      initContainers:
        {{- if .Values.accountsWww.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" .Values.accountsWww.initContainers "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: accounts-www
          image: {{ template "carto.accountsWww.image" . }}
          imagePullPolicy: {{ .Values.accountsWww.image.pullPolicy }}
          {{- if .Values.accountsWww.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.accountsWww.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.accountsWww.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.accountsWww.command "context" $) | nindent 12 }}
          {{- else }}
          command:
            - /bin/sh
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.accountsWww.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.accountsWww.args "context" $) | nindent 12 }}
          {{ else }}
          args:
            - -ec
            - |
              /docker-entrypoint.sh nginx -g "daemon off;"
          {{- end }}
          env:
            {{- if .Values.accountsWww.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.accountsWww.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if not .Values.accountsWww.existingConfigMap }}
            - configMapRef:
                name: {{ template "carto.accountsWww.fullname" . }}
            {{- end }}
            {{- if .Values.accountsWww.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.accountsWww.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.accountsWww.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.accountsWww.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.accountsWww.resources }}
          resources: {{- toYaml .Values.accountsWww.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.accountsWww.containerPorts.http }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.accountsWww.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.accountsWww.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /acc/
              port: http
          {{- else if .Values.accountsWww.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.accountsWww.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.accountsWww.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.accountsWww.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /acc/config.yaml
              port: http
          {{- else if .Values.accountsWww.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.accountsWww.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.accountsWww.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.accountsWww.startupProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /acc/config.yaml
              port: http
          {{- else if .Values.accountsWww.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.accountsWww.customStartupProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.accountsWww.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.accountsWww.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if .Values.accountsWww.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.accountsWww.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.accountsWww.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.accountsWww.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        {{- if .Values.accountsWww.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.accountsWww.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}
