{{- $minVersion  := .Chart.Annotations.minVersion -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-pre-install"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:

    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-fail
spec:
  backoffLimit: 0
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      volumes:
        - name: scripts
          configMap:
            name: "{{ .Release.Name }}-pre-install-scripts"
      containers:
      - name: pre-upgrade-version-check
        terminationMessagePolicy: FallbackToLogsOnError
        image: {{ template "carto.router.image" . }}
        volumeMounts: 
          - name: scripts
            mountPath: /opt/scripts
        env:
          - name: PACKAGE_VERSION
            value: {{ .Values.cartoConfigValues.cartoVersion }}
          - name: MINIMAL_VERSION
            value: {{ $minVersion }}
        command: ["sh"]
        args: ["/opt/scripts/check-version.sh"]
