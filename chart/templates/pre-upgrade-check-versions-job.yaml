{{- if (.Values.upgradeCheck.enabled) }}
{{- $minVersion  := .Chart.Annotations.minVersion -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-pre-install"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:

    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-fail
spec:
  backoffLimit: 0
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      volumes:
        - name: scripts
          configMap:
            name: "{{ .Release.Name }}-pre-install-scripts"
      {{- if .Values.upgradeCheck.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.upgradeCheck.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
      - name: pre-upgrade-version-check
        terminationMessagePolicy: FallbackToLogsOnError
        image: {{ template "carto.upgradeCheck.image" . }}
        imagePullPolicy: {{ .Values.upgradeCheck.image.pullPolicy }}
        {{- if .Values.upgradeCheck.containerSecurityContext.enabled }}
        securityContext: {{- omit .Values.upgradeCheck.containerSecurityContext "enabled" | toYaml | nindent 12 }}
        {{- end }}
        volumeMounts: 
          - name: scripts
            mountPath: /opt/scripts
        env:
          - name: PACKAGE_VERSION
            value: {{ .Values.cartoConfigValues.customerPackageVersion }}
          - name: MINIMAL_VERSION
            value: {{ $minVersion }}
        command: ["sh"]
        args: ["/opt/scripts/check-version.sh"]
{{- end}}
