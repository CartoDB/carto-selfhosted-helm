{{- if .Values.replicated.enabled }}
apiVersion: v1
kind: Secret
metadata:
  labels:
    troubleshoot.sh/kind: support-bundle
  name: {{ .Release.Name }}-support-bundle
  namespace: {{ .Release.Namespace | quote }}
stringData:
    # To use it: kubectl support-bundle --load-cluster-specs --selector=carto.com/kind=support-bundle
  support-bundle-spec: |
    apiVersion: troubleshoot.sh/v1beta2
    kind: SupportBundle
    metadata:
      name: {{ .Release.Name }}-support-bundle
      namespace: {{ .Release.Namespace | quote }}
    spec:
      collectors:
    {{- include "carto.replicated.commonChecks.collectors" . | indent 6 }}
        - clusterInfo: {}
        - clusterResources:
            namespaces:
                - {{ .Release.Namespace }}
        - logs:
            collectorName: namespace-{{ .Release.Namespace }}-logs
            name: namespace-{{ .Release.Namespace }}-logs
            namespace: {{ .Release.Namespace }}
            limits:
              maxAge: 720h # 30*24
              maxLines: 10000
              maxBytes: 5000000
      analyzers:
    {{- include "carto.replicated.commonChecks.analyzers" . | indent 6 }}
        - textAnalyze:
            checkName: Required check maps-api
            fileName: support-run-health-on-maps-api/support-run-health-on-maps-api.log
            regex: "overall_status: 'up'"
            outcomes:
              - pass:
                  when: "true"
                  message: "No error found"
              - fail:
                  when: "false"
                  message: "We found some kind of error during the execution"
        - yamlCompare:
            annotations:
              kots.io/installer: "true"
            checkName: Kubernetes Installer
            outcomes:
              - fail:
                  message: The Kubernetes installer for this version differs from what you have installed. It is recommended that you run the updated Kubernetes installer before deploying this version.
                  uri: https://kurl.sh/carto
              - pass:
                  message: The Kubernetes installer for this version matches what is currently installed.
        - clusterPodStatuses:
            name: unhealthy
            namespaces:
                - {{ .Release.Namespace }}
            outcomes:
            - fail:
                when: "== CrashLoopBackOff"
                message: Pod {{ printf "{{ .Namespace }}" }}/{{ printf "{{ .Name }}" }} is in a CrashLoopBackOff state.
            - fail:
                when: "== ImagePullBackOff"
                message: Pod {{ printf "{{ .Namespace }}" }}/{{ printf "{{ .Name }}" }} is in a ImagePullBackOff state.
            - fail:
                when: "== Pending"
                message: Pod {{ printf "{{ .Namespace }}" }}/{{ printf "{{ .Name }}" }} is in a Pending state.
            - fail:
                when: "== Evicted"
                message: Pod {{ printf "{{ .Namespace }}" }}/{{ printf "{{ .Name }}" }} is in a Evicted state.
            - fail:
                when: "== Terminating"
                message: Pod {{ printf "{{ .Namespace }}" }}/{{ printf "{{ .Name }}" }} is in a Terminating state.
            - fail:
                when: "== Init:Error"
                message: Pod {{ printf "{{ .Namespace }}" }}/{{ printf "{{ .Name }}" }} is in an Init:Error state.
            - fail:
                when: "== Init:CrashLoopBackOff"
                message: Pod {{ printf "{{ .Namespace }}" }}/{{ printf "{{ .Name }}" }} is in an Init:CrashLoopBackOff state.
            - fail:
                when: "!= Healthy" # Catch all unhealthy pods. A pod is considered healthy if it has a status of Completed, or Running and all of its containers are ready.
                # {{ printf "{{ .Status.Reason }}" }} displays the current status of the pod, while {{ printf "{{ .Status.Message }}" }} provides a detailed explanation of why the pod is unhealthy, based on logged events.
                message: Pod {{ printf "{{ .Namespace }}" }}/{{ printf "{{ .Name }}" }} is unhealthy with a status of {{ printf "{{ .Status.Reason }}" }}. Message is {{ printf "{{ .Status.Message }}" }} 
{{- end }}