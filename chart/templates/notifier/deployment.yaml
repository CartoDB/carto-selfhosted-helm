{{- if and (include "carto.baseUrl" .) (not .Values.cartoConfigValues.onlyRunRouter) }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "carto.notifier.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: notifier
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.notifier.replicaCount }}
  {{- if .Values.notifier.updateStrategy }}
  strategy: {{- toYaml .Values.notifier.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: notifier
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/notifier/configmap.yaml") . | sha256sum }}
        {{- if .Values.notifier.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.notifier.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: notifier
        {{- if .Values.notifier.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.notifier.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "carto.notifier.serviceAccountName" . }}
      {{- include "carto.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.notifier.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.notifier.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.notifier.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.notifier.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.notifier.podAffinityPreset "component" "notifier" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.notifier.podAntiAffinityPreset "component" "notifier" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.notifier.nodeAffinityPreset.type "key" .Values.notifier.nodeAffinityPreset.key "values" .Values.notifier.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.notifier.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.notifier.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.notifier.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.notifier.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.notifier.priorityClassName }}
      priorityClassName: {{ .Values.notifier.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.notifier.schedulerName }}
      schedulerName: {{ .Values.notifier.schedulerName | quote }}
      {{- end }}
      {{- if .Values.notifier.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.notifier.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if not .Values.diagnosticMode.enabled }}
      initContainers:
        {{- if .Values.notifier.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" .Values.notifier.initContainers "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.notifier.terminationGracePeriodSeconds }}
      containers:
        - name: notifier
          image: {{ template "carto.notifier.image" . }}
          imagePullPolicy: {{ .Values.notifier.image.pullPolicy }}
          {{- if .Values.notifier.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.notifier.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.notifier.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.notifier.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.notifier.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.notifier.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.notifier.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.notifier.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ template "carto.notifier.configmapName" . }}
            {{- if .Values.notifier.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.notifier.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.notifier.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.notifier.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.notifier.resources }}
          resources: {{- toYaml .Values.notifier.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.notifier.containerPorts.http }}
            - name: internal
              containerPort: {{ .Values.notifier.containerPorts.internal }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.notifier.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.notifier.livenessProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: http
          {{- else if .Values.notifier.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.notifier.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.notifier.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.notifier.readinessProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: http
          {{- else if .Values.notifier.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.notifier.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.notifier.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.notifier.startupProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: http
          {{- else if .Values.notifier.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.notifier.customStartupProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.notifier.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.notifier.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: pushpin-routes
              mountPath: /etc/pushpin/routes_autogenerated
          {{- if .Values.notifier.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.notifier.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.notifier.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.notifier.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: pushpin-routes
          emptyDir:
            medium: Memory
        {{- if .Values.notifier.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.notifier.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}
