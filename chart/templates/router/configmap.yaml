{{- if not .Values.router.existingConfigMap }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "carto.router.fullname" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
    app.kubernetes.io/component: router
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  {{- if not .Values.commonBackendServiceAccount.enableGCPWorkloadIdentity }}
  GOOGLE_APPLICATION_CREDENTIALS: {{ include "carto.google.secretMountAbsolutePath" . }}
  {{- end }}
  HTTP_CACHE_ENABLED: {{ .Values.appConfigValues.httpCacheEnabled | quote }}
  LS_JAVA_OPTS: {{ template "carto.routerMetrics.jvmOptions" . }}
  NGINX_CLIENT_MAX_BODY_SIZE: {{ .Values.router.nginxConfig.client_max_body_size | quote }}
  NGINX_GZIP_MIN_LENGTH: {{ .Values.router.nginxConfig.gzip_min_length | quote }}
  NGINX_GZIP_BUFFERS: {{ .Values.router.nginxConfig.gzip_buffers | quote }}
  NGINX_PROXY_BUFFERS: {{ .Values.router.nginxConfig.proxy_buffers | quote }}
  NGINX_PROXY_BUFFER_SIZE: {{ .Values.router.nginxConfig.proxy_buffer_size | quote }}
  NGINX_PROXY_BUSY_BUFFERS_SIZE: {{ .Values.router.nginxConfig.proxy_busy_buffers_size | quote }}
  ROUTER_ACCOUNTS_WWW_INTERNAL_URL: {{ include "carto.accountsWww.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
  ROUTER_HTTP_CACHE_INTERNAL_URL: {{ include "carto.httpCache.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
  ROUTER_NOTIFIER_INTERNAL_URL: {{ include "carto.notifier.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
  ROUTER_IMPORT_API_INTERNAL_URL: {{ include "carto.importApi.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
  ROUTER_LDS_API_INTERNAL_URL: {{ include "carto.ldsApi.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
  ROUTER_MAPS_API_INTERNAL_URL: {{ include "carto.mapsApi.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
  # If required, is going to be generated by Helm and inyected as secret
  ROUTER_SSL_AUTOGENERATE: "0"
  ROUTER_SSL_CERTIFICATE_KEY_PATH: /usr/src/certs/{{ template "carto.tlsCerts.secretKeyKey" . }}
  ROUTER_SSL_CERTIFICATE_PATH: /usr/src/certs/{{ template "carto.tlsCerts.secretCertKey" . }}
  ROUTER_WORKSPACE_API_INTERNAL_URL: {{ include "carto.workspaceApi.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
  ROUTER_WORKSPACE_WWW_INTERNAL_URL: {{ include "carto.workspaceWww.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
  ROUTER_ENABLE_HTTPS: {{ .Values.tlsCerts.httpsEnabled | quote }}
  ROUTER_METRICS_PUBSUB_PROJECT_ID: {{ .Values.cartoConfigValues.selfHostedGcpProjectId | quote }}
  ROUTER_METRICS_PUBSUB_TOPIC: "data-updates"
  ROUTER_METRICS_HOST: "localhost"
  ROUTER_METRICS_PUBSUB_SUBSCRIPTION_FILTER: "aggregated-selfhosted-metrics"
  {{- if .Values.externalProxy.enabled }}
  HTTP_PROXY: {{ include "carto.proxy.computedConnectionString" . | quote }}
  http_proxy: {{ include "carto.proxy.computedConnectionString" . | quote }}
  HTTPS_PROXY: {{ include "carto.proxy.computedConnectionString" . | quote }}
  https_proxy: {{ include "carto.proxy.computedConnectionString" . | quote }}
  GRPC_PROXY: {{ include "carto.proxy.computedConnectionString" . | quote }}
  grpc_proxy: {{ include "carto.proxy.computedConnectionString" . | quote }}
  NODE_TLS_REJECT_UNAUTHORIZED: {{ ternary "1" "0" .Values.externalProxy.sslRejectUnauthorized | quote }}
  {{- if gt (len .Values.externalProxy.excludedDomains) 0 }}
  NO_PROXY: {{ join "," .Values.externalProxy.excludedDomains | quote }}
  no_proxy: {{ join "," .Values.externalProxy.excludedDomains | quote }}
  {{- end }}
  {{- if .Values.externalProxy.sslCA }}
  NODE_EXTRA_CA_CERTS: {{ include "carto.proxy.configMapMountAbsolutePath" . | quote }}
  {{- end }}
  {{- end }}
  nginx.conf: |
    worker_processes  auto;

    error_log  /var/log/nginx/error.log {{ .Values.router.nginxConfig.log_mode }};
    pid        /tmp/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        proxy_temp_path /tmp/proxy_temp;
        client_body_temp_path /tmp/client_temp;
        fastcgi_temp_path /tmp/fastcgi_temp;
        uwsgi_temp_path /tmp/uwsgi_temp;
        scgi_temp_path /tmp/scgi_temp;

        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        # Set empty value for $service_name / will be filled later by upstreams conf files
        map $host $service_name {
            default '';
        }

        ######################################################################
        # nginx access log in json format
        # Logs will be written to syslog (UDP:514), where logstash sidecar will be listening to
        # + http://nginx.org/en/docs/syslog.html
        ######################################################################
        log_format main escape=json '{"time": "$time_iso8601", '
        '"remote_addr": "$remote_addr", '
        '"host": "$host", '
        '"scheme": "$scheme", ' 
        '"request": "$request", '
        '"status": "$status", '
        '"bytes_sent": "$bytes_sent", '
        '"body_bytes_sent":"$body_bytes_sent", '
        '"request_time": "$request_time", '
        '"http_referer": "$http_referer", '
        '"http_user_agent": "$http_user_agent", '
        '"request_length": "$request_length", '
        '"sent_http_x_cache": "$sent_http_x_cache", '
        '"http_x_forwarded_for": "$http_x_forwarded_for", '
        '"sent_http_x_served_by_host": "$sent_http_x_served_by_host", '
        '"upstream_addr": "$upstream_addr", '
        '"upstream_response_time": "$upstream_response_time", '
        '"service_name": "$service_name", '

        ## Response Headers
        '"sent_http_cm": "$sent_http_cm", '
        '"sent_http_carto_client": "$sent_http_carto_client", '
        '"sent_http_carto_user": "$sent_http_carto_user",'
        '"sent_http_carto_account": "$sent_http_carto_account", '
        '"sent_http_carto_connector": "$sent_http_carto_connector"}';

        access_log syslog:server={{ .Values.router.nginxConfig.router_metrics_host }}:{{ .Values.router.nginxConfig.router_metrics_port }},severity=info main;
        access_log /dev/stdout main;

        # By default:  [error,crit,alert,emerg]
        error_log stderr {{ .Values.router.nginxConfig.log_mode }};

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf.d/*.conf;
    }
{{- end }}
