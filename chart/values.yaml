## @section Custom config parameters
## Global configuration to be edited by the client
appConfigValues:
  ## @param appConfigValues.selfHostedDomain Domain that is going to be used to access to the CARTO self-hosted.
  selfHostedDomain: "carto-selfhosted.lan"
  ## @param appConfigValues.storageProvider Indicate the storage provider for the bucket. Valid values are: `gcp`, `s3` & `azure-blob`
  storageProvider: "gcp"
  ## @param appConfigValues.httpCacheEnabled Enable the internal httpCache
  httpCacheEnabled: true
  ## @param appConfigValues.importAwsRoleArn ARN Role to be used to import files from the bucket
  importAwsRoleArn: ""
  ## @param appConfigValues.exportAwsRoleArn ARN Role to be used to export files from the app
  exportAwsRoleArn: ""
  ## @param appConfigValues.workspaceImportsBucket Bucket to be used to store metadata of the workspace
  workspaceImportsBucket: ""
  ## @param appConfigValues.workspaceImportsPublic Indicate if the imports could be accessed publicly
  workspaceImportsPublic: true
  ## @param appConfigValues.workspaceThumbnailsBucket Bucket to be used to store the thumbnails generated in the app
  workspaceThumbnailsBucket: ""
  ## @param appConfigValues.azureStorageAccount Azure storage account to be used in the app if Azure Blob is the storage provider
  azureStorageAccount: ""
  ## @param appConfigValues.awsExportBucket Bucket to be used to store the exports generated in the app
  awsExportBucket: ""
  ## @param appConfigValues.awsExportBucketRegion Region of the bucket to be used to store the exports generated in the app
  awsExportBucketRegion: ""
  ## @param appConfigValues.thumbnailsBucketExternalURL Bucket URL to be used to store the thumbnails generated in the app
  thumbnailsBucketExternalURL: ""
  ## @param appConfigValues.workspaceThumbnailsPublic Indicate if the thumbnails could be accessed publicly
  workspaceThumbnailsPublic: true
  ## @param appConfigValues.googleCloudStorageProjectId If the bucket is GCP, the ProjectId to be used
  googleCloudStorageProjectId: ""
  ## @param appConfigValues.awsS3Region If the bucket is S3, the region to be used
  awsS3Region: ""
  ## @param appConfigValues.bigqueryOauth2ClientId The Client ID used in BigQuery OAuth connections using Sign in with Google instead of providing a service account key.
  bigqueryOauth2ClientId: ""
  ## @param appConfigValues.enableTrackJS By default, TrackJS will gather information about end-user browser, you can disable it setting this parameter to false
  enableTrackJS: true
  ## @param appConfigValues.ssoOrganizationId SSO organization ID provided by CARTO used to configure the SSO in the app.
  ssoOrganizationId: ""
  defaultAtLocation:
    ## @param appConfigValues.defaultAtLocation.bigquery The default AT location for BigQuery connections
    bigquery: ""
    ## @param appConfigValues.defaultAtLocation.snowflake The default AT location for Snowflake connections
    snowflake: ""
    ## @param appConfigValues.defaultAtLocation.redshift The default AT location for Redshift connections
    redshift: ""
    ## @param appConfigValues.defaultAtLocation.postgres The default AT location for PostgreSQL connections
    postgres: ""
  defaultDoLocation:
    ## @param appConfigValues.defaultDoLocation.bigquery The default DO location for BigQuery connections
    bigquery: ""
    ## @param appConfigValues.defaultDoLocation.snowflake The default DO location for Snowflake connections
    snowflake: ""
    ## @param appConfigValues.defaultDoLocation.redshift The default DO location for Redshift connections
    redshift: ""
    ## @param appConfigValues.defaultDoLocation.postgres The default DO location for PostgreSQL connections
    postgres: ""
  ## @param appConfigValues.workspaceExportsBucket Bucket to be used to store the exports generated in the app
  workspaceExportsBucket: ""
  workloadIdentityConnection:
    ## @param appConfigValues.workloadIdentityConnection.enabled Enable the creation of a default connection using Workload Identity
    enabled: false
    ## @param appConfigValues.workloadIdentityConnection.workflowsTempLocation Workflows temp location to be used in the connection
    workflowsTempLocation: ""
    ## @param appConfigValues.workloadIdentityConnection.billingProject Billing project to be used in the connection
    billingProject: ""
    ## @param appConfigValues.workloadIdentityConnection.serviceAccountEmail Service account email to be used in the connection
    serviceAccountEmail: ""
    ## @param appConfigValues.workloadIdentityConnection.connectionOwner User ID of the owner of the connection
    connectionOwner: ""
  ## @param appConfigValues.ldsGeocodingProvider The default LDS provider for geocoding
  ldsGeocodingProvider: ""
  ## @param appConfigValues.ldsRoutingProvider The default LDS provider for routing
  ldsRoutingProvider: ""
  ## @param appConfigValues.ldsIsolineProvider The default LDS provider for isolines
  ldsIsolineProvider: ""

## @section CARTO Replicated parameters
## Global configuration for installations using Replicated. If you change something from this section probably your self-hosted is going to stop working.
replicated:
  ## @param replicated.enabled Enable Carto replicated
  ## @param replicated.platformDistribution Platform distribution to deploy Carto Selfhosted with Replicated
  enabled: false
  platformDistribution: ""

## @section CARTO config parameters
## Global configuration provided by CARTO. If you changed something from this section probably your self-hosted is going to stop working.
cartoConfigValues:
  ## @param cartoConfigValues.enableErrorResponseStackTrace Enable stack traces in the container responses
  enableErrorResponseStackTrace: false
  ## @param cartoConfigValues.cartoAccApiDomain Domain of the Account API of Carto.
  cartoAccApiDomain: ""
  ## @param cartoConfigValues.cartoAccGcpProjectId GCP project ID of the Carto Accounts.
  cartoAccGcpProjectId: ""
  ## @param cartoConfigValues.cartoAccGcpProjectRegion GCP project region of the Carto Accounts.
  cartoAccGcpProjectRegion: ""
  ## @param cartoConfigValues.cartoAuth0ClientId Client ID of Auth0.
  cartoAuth0ClientId: ""
  ## @param cartoConfigValues.cartoAuth0CustomDomain Custom Domain of Auth0.
  cartoAuth0CustomDomain: ""
  ## @param cartoConfigValues.cartoSelfhostedDwLocation Location of the Carto Data Warehouse.
  cartoSelfhostedDwLocation: ""
  ## @param cartoConfigValues.selfHostedGcpProjectId GCP project ID used in the installation.
  selfHostedGcpProjectId: ""
  ## @param cartoConfigValues.selfHostedTenantId Carto internal tenantId used in the installation.
  selfHostedTenantId: ""
  ## @param cartoConfigValues.launchDarklyClientSideId LaunchDarkly ClientSideId (by www) used to enable/disable features.
  launchDarklyClientSideId: ""
  ## @param cartoConfigValues.cartoDataWarehouseEnabled Enable the Carto Data Warehouse for the self-hosted.
  cartoDataWarehouseEnabled: false
  ## @param cartoConfigValues.dataObservatoryProjectId GCP project ID of the Carto Data Observatory.
  dataObservatoryProjectId: ""
  ## @param cartoConfigValues.ingressTestingMode Enable router testing mode for the application. This will deploy the router in testing mode serving a simple page to check that it works without routing traffic to other components.
  ingressTestingMode: false
  ## @param cartoConfigValues.onlyRunRouter Enable only the router component in the installation. This will just deploy the router component. Useful to check the ingress layer together with the option `cartoConfigValues.ingressTestingMode`.
  onlyRunRouter: false
  ## @param cartoConfigValues.featureFlagsOverrides YAML configuration for overriding feature flags.
  featureFlagsOverrides: []

## @section App secret
## Global secrets to be edited by the client
appSecrets:
  ## @extra appSecrets.bigqueryOauth2ClientSecret The secret used in BigQuery OAuth connections using Sign in with Google instead of providing a service account key.
  bigqueryOauth2ClientSecret:
    ## @param appSecrets.bigqueryOauth2ClientSecret.value Value of the secret used in BigQuery OAuth connections. One of `appSecrets.bigqueryOauth2ClientSecret.value` or `appSecrets.bigqueryOauth2ClientSecret.existingSecret` could be defined.
    value: ""
    ## @param appSecrets.bigqueryOauth2ClientSecret.existingSecret.name Name of the pre-existent secret containing the `appSecrets.bigqueryOauth2ClientSecret.existingSecret.key`. If `appSecrets.bigqueryOauth2ClientSecret.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.bigqueryOauth2ClientSecret.existingSecret.key Key to find in `appSecrets.bigqueryOauth2ClientSecret.existingSecret.name` where the value of `appSecrets.bigqueryOauth2ClientSecret` is found. If `appSecrets.bigqueryOauth2ClientSecret.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.googleMapsApiKey Google maps api-key value.
  googleMapsApiKey:
    ## @param appSecrets.googleMapsApiKey.value Value of the secret `Google maps api-key`. One of `appSecrets.googleMapsApiKey.value` or `appSecrets.googleMapsApiKey.existingSecret` could be defined.
    value: ""
    ## @param appSecrets.googleMapsApiKey.existingSecret.name Name of the pre-existent secret containing the `appSecrets.googleMapsApiKey.existingSecret.key`. If `appSecrets.googleMapsApiKey.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.googleMapsApiKey.existingSecret.key Key to find in `appSecrets.googleMapsApiKey.existingSecret.name` where the value of `appSecrets.googleMapsApiKey` is found. If `appSecrets.googleMapsApiKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.googleCloudStorageServiceAccountKey If GCP is used in self-hosted, the AccessKey Secret.
  googleCloudStorageServiceAccountKey:
    ## @param appSecrets.googleCloudStorageServiceAccountKey.value Value of the secret `AccessKey Secret` (Only required if GCP is used). One of `appSecrets.googleCloudStorageServiceAccountKey.value` or `appSecrets.googleCloudStorageServiceAccountKey.existingSecret` could be defined.
    value: ""
    ## @param appSecrets.googleCloudStorageServiceAccountKey.existingSecret.name Name of the pre-existent secret containing the `appSecrets.googleCloudStorageServiceAccountKey.existingSecret.key`. If `appSecrets.googleCloudStorageServiceAccountKey.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.googleCloudStorageServiceAccountKey.existingSecret.key Key to find in `appSecrets.googleCloudStorageServiceAccountKey.existingSecret.name` where the value of `appSecrets.googleCloudStorageServiceAccountKey` is found. If `appSecrets.googleCloudStorageServiceAccountKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.awsAccessKeyId If AWS is used in self-hosted, the AccessKey ID.
  awsAccessKeyId:
    ## @param appSecrets.awsAccessKeyId.value Value of the secret `AccessKey Id` (Only required if AWS is used). One of `appSecrets.awsAccessKeyId.value` or `appSecrets.awsAccessKeyId.existingSecret` could be defined.
    value: ""
    ## @param appSecrets.awsAccessKeyId.existingSecret.name Name of the pre-existent secret containing the `appSecrets.awsAccessKeyId.existingSecret.key`. If `appSecrets.awsAccessKeyId.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.awsAccessKeyId.existingSecret.key Key to find in `appSecrets.awsAccessKeyId.existingSecret.name` where the value of `appSecrets.awsAccessKeyId` is found. If `appSecrets.awsAccessKeyId.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.awsAccessKeySecret If AWS is used in self-hosted, the AccessKey Secret.
  awsAccessKeySecret:
    ## @param appSecrets.awsAccessKeySecret.value Value of the secret `AccessKey Secret` (Only required if AWS is used). One of `appSecrets.awsAccessKeySecret.value` or `appSecrets.awsAccessKeySecret.existingSecret` could be defined.
    value: ""
    ## @param appSecrets.awsAccessKeySecret.existingSecret.name Name of the pre-existent secret containing the `appSecrets.awsAccessKeySecret.existingSecret.key`. If `appSecrets.awsAccessKeySecret.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.awsAccessKeySecret.existingSecret.key Key to find in `appSecrets.awsAccessKeySecret.existingSecret.name` where the value of `appSecrets.awsAccessKeySecret` is found. If `appSecrets.awsAccessKeySecret.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.azureStorageAccessKey If Azure is used in self-hosted, the AccessKey Secret.
  azureStorageAccessKey:
    ## @param appSecrets.azureStorageAccessKey.value Value of the secret `AccessKey Secret` (Only required if Azure is used). One of `appSecrets.azureStorageAccessKey.value` or `appSecrets.azureStorageAccessKey.existingSecret` could be defined.
    value: ""
    ## @param appSecrets.azureStorageAccessKey.existingSecret.name Name of the pre-existent secret containing the `appSecrets.azureStorageAccessKey.existingSecret.key`. If `appSecrets.azureStorageAccessKey.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.azureStorageAccessKey.existingSecret.key Key to find in `appSecrets.azureStorageAccessKey.existingSecret.name` where the value of `appSecrets.azureStorageAccessKey` is found. If `appSecrets.azureStorageAccessKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.importAwsAccessKeyId The AccessKey Id to be used for import files from a bucket.
  importAwsAccessKeyId:
    ## @param appSecrets.importAwsAccessKeyId.value Value of the secret `IMPORT_AWS_ACCESS_KEY_ID`
    value: ""
    ## @param appSecrets.importAwsAccessKeyId.existingSecret.name Name of the pre-existent secret containing the `appSecrets.importAwsAccessKeyId.existingSecret.key`. If `appSecrets.importAwsAccessKeyId.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.importAwsAccessKeyId.existingSecret.key Key to find in `appSecrets.importAwsAccessKeyId.existingSecret.name` where the value of `appSecrets.importAwsAccessKeyId` is found. If `appSecrets.importAwsAccessKeyId.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.importAwsSecretAccessKey the AccessKey Secret to be used for import files from a bucket
  importAwsSecretAccessKey:
    ## @param appSecrets.importAwsSecretAccessKey.value Value of the secret `IMPORT_AWS_SECRET_ACCESS_KEY`
    value: ""
    ## @param appSecrets.importAwsSecretAccessKey.existingSecret.name Name of the pre-existent secret containing the `appSecrets.importAwsSecretAccessKey.existingSecret.key`. If `appSecrets.importAwsSecretAccessKey.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.importAwsSecretAccessKey.existingSecret.key Key to find in `appSecrets.importAwsSecretAccessKey.existingSecret.name` where the value of `appSecrets.importAwsSecretAccessKey` is found. If `appSecrets.importAwsSecretAccessKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.exportAwsSecretAccessKey the AccessKey Secret to be used for export files to a bucket
  exportAwsSecretAccessKey:
    ## @param appSecrets.exportAwsSecretAccessKey.value Value of the secret `EXPORT_AWS_SECRET_ACCESS_KEY`
    value: ""
    ## @param appSecrets.exportAwsSecretAccessKey.existingSecret.name Name of the pre-existent secret containing the `appSecrets.exportAwsSecretAccessKey.existingSecret.key`. If `appSecrets.exportAwsSecretAccessKey.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.exportAwsSecretAccessKey.existingSecret.key Key to find in `appSecrets.exportAwsSecretAccessKey.existingSecret.name` where the value of `appSecrets.exportAwsSecretAccessKey` is found. If `appSecrets.exportAwsSecretAccessKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.exportAwsAccessKeyId The AccessKey Id to be used for export files to a bucket.
  exportAwsAccessKeyId:
    ## @param appSecrets.exportAwsAccessKeyId.value Value of the secret `IMPORT_AWS_ACCESS_KEY_ID`
    value: ""
    ## @param appSecrets.exportAwsAccessKeyId.existingSecret.name Name of the pre-existent secret containing the `appSecrets.exportAwsAccessKeyId.existingSecret.key`. If `appSecrets.exportAwsAccessKeyId.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.exportAwsAccessKeyId.existingSecret.key Key to find in `appSecrets.exportAwsAccessKeyId.existingSecret.name` where the value of `appSecrets.exportAwsAccessKeyId` is found. If `appSecrets.exportAwsAccessKeyId.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.ldsHereApiKey The API Key to be used for HERE LDS provider.
  ldsHereApiKey:
    ## @param appSecrets.ldsHereApiKey.value Value of the secret `LDS_PROVIDER_HERE_API_KEY`
    value: ""
    ## @param appSecrets.ldsHereApiKey.existingSecret.name Name of the pre-existent secret containing the `appSecrets.ldsHereApiKey.existingSecret.key`. If `appSecrets.ldsHereApiKey.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.ldsHereApiKey.existingSecret.key Key to find in `appSecrets.ldsHereApiKey.existingSecret.name` where the value of `appSecrets.ldsHereApiKey` is found. If `appSecrets.ldsHereApiKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.ldsTomTomApiKey The API Key to be used for TomTom LDS provider.
  ldsTomTomApiKey:
    ## @param appSecrets.ldsTomTomApiKey.value Value of the secret `LDS_PROVIDER_TOMTOM_API_KEY`
    value: ""
    ## @param appSecrets.ldsTomTomApiKey.existingSecret.name Name of the pre-existent secret containing the `appSecrets.ldsTomTomApiKey.existingSecret.key`. If `appSecrets.ldsTomTomApiKey.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.ldsTomTomApiKey.existingSecret.key Key to find in `appSecrets.ldsTomTomApiKey.existingSecret.name` where the value of `appSecrets.ldsTomTomApiKey` is found. If `appSecrets.ldsTomTomApiKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.ldsGoogleApiKey The API Key to be used for TomTom LDS provider.
  ldsGoogleApiKey:
    ## @param appSecrets.ldsGoogleApiKey.value Value of the secret `LDS_PROVIDER_GOOGLE_API_KEY`
    value: ""
    ## @param appSecrets.ldsGoogleApiKey.existingSecret.name Name of the pre-existent secret containing the `appSecrets.ldsGoogleApiKey.existingSecret.key`. If `appSecrets.ldsGoogleApiKey.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.ldsGoogleApiKey.existingSecret.key Key to find in `appSecrets.ldsGoogleApiKey.existingSecret.name` where the value of `appSecrets.ldsGoogleApiKey` is found. If `appSecrets.ldsGoogleApiKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.ldsMapboxApiKey The API Key to be used for MapBox LDS provider.
  ldsMapboxApiKey:
    ## @param appSecrets.ldsMapboxApiKey.value Value of the secret `LDS_PROVIDER_MAPBOX_API_KEY`
    value: ""
    ## @param appSecrets.ldsMapboxApiKey.existingSecret.name Name of the pre-existent secret containing the `appSecrets.ldsMapboxApiKey.existingSecret.key`. If `appSecrets.ldsMapboxApiKey.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.ldsMapboxApiKey.existingSecret.key Key to find in `appSecrets.ldsMapboxApiKey.existingSecret.name` where the value of `appSecrets.ldsMapboxApiKey` is found. If `appSecrets.ldsMapboxApiKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.ldsTravelTimeApiKey The API Key to be used for TravelTime LDS provider.
  ldsTravelTimeApiKey:
    ## @param appSecrets.ldsTravelTimeApiKey.value Value of the secret `LDS_PROVIDER_TRAVELTIME_API_KEY`
    value: ""
    ## @param appSecrets.ldsTravelTimeApiKey.existingSecret.name Name of the pre-existent secret containing the `appSecrets.ldsTravelTimeApiKey.existingSecret.key`. If `appSecrets.ldsTravelTimeApiKey.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.ldsTravelTimeApiKey.existingSecret.key Key to find in `appSecrets.ldsTravelTimeApiKey.existingSecret.name` where the value of `appSecrets.ldsTravelTimeApiKey` is found. If `appSecrets.ldsTravelTimeApiKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.ldsTravelTimeAppId The API Key to be used for TravelTime LDS provider.
  ldsTravelTimeAppId:
    ## @param appSecrets.ldsTravelTimeAppId.value Value of the secret `LDS_PROVIDER_TRAVELTIME_APP_ID`
    value: ""
    ## @param appSecrets.ldsTravelTimeAppId.existingSecret.name Name of the pre-existent secret containing the `appSecrets.ldsTravelTimeAppId.existingSecret.key`. If `appSecrets.ldsTravelTimeAppId.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.ldsTravelTimeAppId.existingSecret.key Key to find in `appSecrets.ldsTravelTimeAppId.existingSecret.name` where the value of `appSecrets.ldsTravelTimeAppId` is found. If `appSecrets.ldsTravelTimeAppId.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""

## @section CARTO secrets
## Secrets provided by CARTO. Some of them could be customized by the client.
cartoSecrets:
  ## @extra cartoSecrets.encryptionSecretKey The secret used to encrypt the clients Carto connections stored in the database.
  encryptionSecretKey:
    ## @param cartoSecrets.encryptionSecretKey.value Value of the secret used to encrypt the clients Carto connections stored in the database. One of `cartoSecrets.encryptionSecretKey.value` or `cartoSecrets.encryptionSecretKey.existingSecret` could be defined.
    value: ""
    ## @param cartoSecrets.encryptionSecretKey.existingSecret.name Name of the pre-existent secret containing the `cartoSecrets.encryptionSecretKey.existingSecret.key`. If `cartoSecrets.encryptionSecretKey.value` is defined, this value is going to be ignored and not used.
    ## @param cartoSecrets.encryptionSecretKey.existingSecret.key Key to find in `cartoSecrets.encryptionSecretKey.existingSecret.name` where the value of `cartoSecrets.encryptionSecretKey` is found. If `cartoSecrets.encryptionSecretKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra cartoSecrets.jwtApiSecret The secret used to encrypt the jwt token for API components
  jwtApiSecret:
    ## @param cartoSecrets.jwtApiSecret.value Value of the secret used to encrypt the jwt token for API components. One of `cartoSecrets.jwtApiSecret.value` or `cartoSecrets.jwtApiSecret.existingSecret` could be defined.
    value: ""
    ## @param cartoSecrets.jwtApiSecret.existingSecret.name Name of the pre-existent secret containing the `cartoSecrets.jwtApiSecret.existingSecret.key`. If `cartoSecrets.jwtApiSecret.value` is defined, this value is going to be ignored and not used.
    ## @param cartoSecrets.jwtApiSecret.existingSecret.key Key to find in `cartoSecrets.jwtApiSecret.existingSecret.name` where the value of `cartoSecrets.jwtApiSecret` is found. If `cartoSecrets.jwtApiSecret.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra cartoSecrets.launchDarklySdkKey The secret used to enable or disable feature flags.
  launchDarklySdkKey:
    ## @param cartoSecrets.launchDarklySdkKey.value Value of the secret used to enable or disable feature flags. One of `cartoSecrets.launchDarklySdkKey.value` or `cartoSecrets.launchDarklySdkKey.existingSecret` could be defined.
    value: ""
    ## @param cartoSecrets.launchDarklySdkKey.existingSecret.name Name of the pre-existent secret containing the `cartoSecrets.launchDarklySdkKey.existingSecret.key`. If `cartoSecrets.launchDarklySdkKey.value` is defined, this value is going to be ignored and not used.
    ## @param cartoSecrets.launchDarklySdkKey.existingSecret.key Key to find in `cartoSecrets.launchDarklySdkKey.existingSecret.name` where the value of `cartoSecrets.launchDarklySdkKey` is found. If `cartoSecrets.launchDarklySdkKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra cartoSecrets.varnishPurgeSecret The secret used (by the app) to exec purge request.
  varnishPurgeSecret:
    ## @param cartoSecrets.varnishPurgeSecret.value Value of the secret used (by the app) to exec purge request. One of `cartoSecrets.varnishPurgeSecret.value` or `cartoSecrets.varnishPurgeSecret.existingSecret` could be defined.
    value: ""
    ## @param cartoSecrets.varnishPurgeSecret.existingSecret.name Name of the pre-existent secret containing the `cartoSecrets.varnishPurgeSecret.existingSecret.key`. If `cartoSecrets.varnishPurgeSecret.value` is defined, this value is going to be ignored and not used.
    ## @param cartoSecrets.varnishPurgeSecret.existingSecret.key Key to find in `cartoSecrets.varnishPurgeSecret.existingSecret.name` where the value of `cartoSecrets.varnishPurgeSecret` is found. If `cartoSecrets.varnishPurgeSecret.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra cartoSecrets.varnishDebugSecret The secret used if someone would like to debug Varnish.
  varnishDebugSecret:
    ## @param cartoSecrets.varnishDebugSecret.value Value of the secret used if someone would like to debug Varnish. One of `cartoSecrets.varnishDebugSecret.value` or `cartoSecrets.varnishDebugSecret.existingSecret` could be defined.
    value: ""
    ## @param cartoSecrets.varnishDebugSecret.existingSecret.name Name of the pre-existent secret containing the `cartoSecrets.varnishDebugSecret.existingSecret.key`. If `cartoSecrets.varnishDebugSecret.value` is defined, this value is going to be ignored and not used.
    ## @param cartoSecrets.varnishDebugSecret.existingSecret.key Key to find in `cartoSecrets.varnishDebugSecret.existingSecret.name` where the value of `cartoSecrets.varnishDebugSecret` is found. If `cartoSecrets.varnishDebugSecret.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra cartoSecrets.defaultGoogleServiceAccount The secret used by the app to connect to google services. This couldn't be changed.
  defaultGoogleServiceAccount:
    ## @param cartoSecrets.defaultGoogleServiceAccount.value Value of the secret used by the app to connect to google services. This couldn't be changed. One of `cartoSecrets.defaultGoogleServiceAccount.value` or `cartoSecrets.defaultGoogleServiceAccount.existingSecret` could be defined.
    value: ""
    ## @param cartoSecrets.defaultGoogleServiceAccount.existingSecret.name Name of the pre-existent secret containing the `cartoSecrets.defaultGoogleServiceAccount.existingSecret.key`. If `cartoSecrets.defaultGoogleServiceAccount.value` is defined, this value is going to be ignored and not used.
    ## @param cartoSecrets.defaultGoogleServiceAccount.existingSecret.key Key to find in `cartoSecrets.defaultGoogleServiceAccount.existingSecret.name` where the value of `cartoSecrets.defaultGoogleServiceAccount` is found. If `cartoSecrets.defaultGoogleServiceAccount.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra cartoSecrets.gitbookApiToken GitBook API Token provided by CARTO
  gitbookApiToken:
    ## @param cartoSecrets.gitbookApiToken.value Value of the secret used by the app to connect to Gitbook. This couldn't be changed. One of `cartoSecrets.gitbookApiToken.value` or `cartoSecrets.gitbookApiToken.existingSecret` could be defined.
    value: ""
    ## @param cartoSecrets.gitbookApiToken.existingSecret.name Name of the pre-existent secret containing the `cartoSecrets.gitbookApiToken.existingSecret.key`. If `cartoSecrets.gitbookApiToken.value` is defined, this value is going to be ignored and not used.
    ## @param cartoSecrets.gitbookApiToken.existingSecret.key Key to find in `cartoSecrets.gitbookApiToken.existingSecret.name` where the value of `cartoSecrets.gitbookApiToken` is found. If `cartoSecrets.gitbookApiToken.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra cartoSecrets.vitallyToken Vitally Token provided by CARTO
  vitallyToken:
    ## @param cartoSecrets.vitallyToken.value Value of the secret used by the app to connect to Vitally. This couldn't be changed. One of `cartoSecrets.vitallyToken.value` or `cartoSecrets.vitallyToken.existingSecret` could be defined.
    value: ""
    ## @param cartoSecrets.vitallyToken.existingSecret.name Name of the pre-existent secret containing the `cartoSecrets.vitallyToken.existingSecret.key`. If `cartoSecrets.vitallyToken.value` is defined, this value is going to be ignored and not used.
    ## @param cartoSecrets.vitallyToken.existingSecret.key Key to find in `cartoSecrets.vitallyToken.existingSecret.name` where the value of `cartoSecrets.vitallyToken` is found. If `cartoSecrets.vitallyToken.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra cartoSecrets.instanceId The secret used to define the instance ID for the active installation
  instanceId:
    ## @param cartoSecrets.instanceId.value Value of the secret used to define the instance ID for the active installation. One of `cartoSecrets.instanceId.value` or `cartoSecrets.instanceId.existingSecret` could be defined.
    value: ""
    ## @param cartoSecrets.instanceId.existingSecret.name Name of the pre-existent secret containing the `cartoSecrets.instanceId.existingSecret.key`. If `cartoSecrets.instanceId.value` is defined, this value is going to be ignored and not used.
    ## @param cartoSecrets.instanceId.existingSecret.key Key to find in `cartoSecrets.instanceId.existingSecret.name` where the value of `cartoSecrets.instanceId` is found. If `cartoSecrets.instanceId.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""

## FIXME: Deprecated in favor of router.tlsCertificates and ingress.tlsCertificates
## @section TLS parameters
## Global TLS parameters
## @param tlsCerts.httpsEnabled Enable https on the router component. CARTO only works with `HTTPS`, if you disable this protocol here you should configure it in a higher layer like a Load Balancer
## @param tlsCerts.autoGenerate Generate self-signed TLS certificates
## @param tlsCerts.existingSecret.name Name of a secret containing the certificate
## @param tlsCerts.existingSecret.certKey Key of the certificate inside the secret
## @param tlsCerts.existingSecret.keyKey Key of the certificate key inside the secret
##
tlsCerts:
  httpsEnabled: true
  autoGenerate: true
  existingSecret:
    name: ""
    keyKey: "tls.key"
    certKey: "tls.crt"

## @section common backend service account
## Service Account to be specified for the client to be used in common backend deployments
commonBackendServiceAccount:
  ## @param commonBackendServiceAccount.create Specifies whether a common ServiceAccount for backend should be created
  create: true
  ## @param commonBackendServiceAccount.enableGCPWorkloadIdentity Enable the Workload Identity feature in kubernetes
  enableGCPWorkloadIdentity: false
  ## @param commonBackendServiceAccount.automountServiceAccountToken Mount service account token in deployments
  automountServiceAccountToken: false
  ## @param commonBackendServiceAccount.annotations Annotations to add to this SA
  annotations: {}
  ## @param commonBackendServiceAccount.name If not set and create is true, a name is generated using the common.names.fullname template
  name: ""

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
## @param global.kubernetesPolicyVersion Global Default kubernetes api version for policy object
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""
  kubernetesPolicyVersion: "policy/v1"

## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - 999d

## @section accounts-www Deployment Parameters
##
accountsWww:
  ## accounts-www image
  ## @param accountsWww.image.registry accounts-www image registry
  ## @param accountsWww.image.repository accounts-www image repository
  ## @param accountsWww.image.tag accounts-www image tag (immutable tags are recommended)
  ## @param accountsWww.image.pullPolicy accounts-www image pull policy
  ## @param accountsWww.image.pullSecrets accounts-www image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: accounts-www
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param accountsWww.replicaCount Number of accounts-www replicas to deploy
  ##
  replicaCount: 1
  ## @param accountsWww.containerPorts.http accounts-www HTTP container port
  ##
  containerPorts:
    http: 8080
  ## Configure extra options for accounts-www containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param accountsWww.livenessProbe.enabled Enable livenessProbe on accounts-www containers
  ## @param accountsWww.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param accountsWww.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param accountsWww.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param accountsWww.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param accountsWww.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param accountsWww.readinessProbe.enabled Enable readinessProbe on accounts-www containers
  ## @param accountsWww.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param accountsWww.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param accountsWww.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param accountsWww.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param accountsWww.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param accountsWww.startupProbe.enabled Enable startupProbe on accounts-www containers
  ## @param accountsWww.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param accountsWww.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param accountsWww.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param accountsWww.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param accountsWww.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param accountsWww.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param accountsWww.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param accountsWww.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## accounts-www autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param accountsWww.autoscaling.enabled Enable autoscaling for the accounts-www containers
  ## @param accountsWww.autoscaling.minReplicas The minimal number of containers for the accounts-www deployment
  ## @param accountsWww.autoscaling.maxReplicas The maximum number of containers for the accounts-www deployment
  ## @param accountsWww.autoscaling.targetCPUUtilizationPercentage The CPU utilization percentage used for scale up containers in accounts-www deployment
  ##
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 75
  ## accounts-www resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param accountsWww.resources.limits.memory Container memory limits in MiB
  ## @param accountsWww.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param accountsWww.resources.requests.memory Container memory requests in MiB
  ## @param accountsWww.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "1024Mi"
      cpu: "500m"
    requests:
      memory: "768Mi"
      cpu: "200m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param accountsWww.podSecurityContext.enabled Enabled accounts-www pods' Security Context
  ## @param accountsWww.podSecurityContext.fsGroup Set accounts-www pod's Security Context fsGroup
  ## @param accountsWww.podSecurityContext.supplementalGroups[0] Set accounts-www pod's Security Context supplementalGroups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 101
    supplementalGroups: [2345]
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param accountsWww.containerSecurityContext.enabled Enabled accounts-www containers' Security Context
  ## @param accountsWww.containerSecurityContext.runAsUser Set accounts-www containers' Security Context runAsUser
  ## @param accountsWww.containerSecurityContext.runAsGroup Set accounts-www containers' Security Context runAsGroup
  ## @param accountsWww.containerSecurityContext.runAsNonRoot Set accounts-www containers' Security Context runAsNonRoot
  ## @param accountsWww.containerSecurityContext.allowPrivilegeEscalation Set accounts-www containers' Security Context allowPrivilegeEscalation
  ## @param accountsWww.containerSecurityContext.readOnlyRootFilesystem Set accounts-www containers' Security Context readOnlyRootFilesystem
  ## @param accountsWww.containerSecurityContext.capabilities.drop removes accounts-www containers' Security Context capabilities
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 101
    runAsGroup: 101
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  ## @param accountsWww.podDisruptionBudget.enabled defines disruption budget for accounts-www
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
  ## @param accountsWww.terminationGracePeriodSeconds Time to wait before force killing the container
  ##
  terminationGracePeriodSeconds: 60
  ## @param accountsWww.existingConfigMap The name of an existing ConfigMap with your custom configuration for accounts-www
  ##
  existingConfigMap: ""
  ## @param accountsWww.existingSecret The name of an existing ConfigMap with your custom configuration for accounts-www
  ##
  existingSecret: ""
  ## @param accountsWww.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param accountsWww.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param accountsWww.hostAliases accounts-www pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param accountsWww.podLabels Extra labels for accounts-www pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param accountsWww.podAnnotations Annotations for accounts-www pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param accountsWww.podAffinityPreset Pod affinity preset. Ignored if `accountsWww.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param accountsWww.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `accountsWww.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node.js accountsWww.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param accountsWww.nodeAffinityPreset.type Node.js affinity preset type. Ignored if `accountsWww.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param accountsWww.nodeAffinityPreset.key Node.js label key to match. Ignored if `accountsWww.affinity` is set
    ##
    key: ""
    ## @param accountsWww.nodeAffinityPreset.values Node.js label values to match. Ignored if `accountsWww.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param accountsWww.affinity Affinity for accounts-www pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `accountsWww.podAffinityPreset`, `accountsWww.podAntiAffinityPreset`, and `accountsWww.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param accountsWww.nodeSelector Node.js labels for accounts-www pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param accountsWww.tolerations Tolerations for accounts-www pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param accountsWww.updateStrategy.type accounts-www statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param accountsWww.priorityClassName accounts-www pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param accountsWww.schedulerName Name of the k8s scheduler (other than default) for accounts-www pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param accountsWww.lifecycleHooks for the accounts-www container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param accountsWww.extraEnvVars Array with extra environment variables to add to accounts-www nodes ([More info](#additional-environment-variables))
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param accountsWww.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for accounts-www nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsCM: ""
  ## @param accountsWww.extraEnvVarsSecret Name of existing Secret containing extra env vars for accounts-www nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsSecret: ""
  ## @param accountsWww.extraVolumes Optionally specify extra list of additional volumes for the accounts-www pod(s)
  ##
  extraVolumes: []
  ## @param accountsWww.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the accounts-www container(s)
  ##
  extraVolumeMounts: []
  ## @param accountsWww.sidecars Add additional sidecar containers to the accounts-www pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param accountsWww.initContainers Add additional init containers to the accounts-www pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section accounts-www Service Parameters
  ##
  ##
  service:
    ## @param accountsWww.service.type accounts-www service type
    ##
    type: ClusterIP
    ## @param accountsWww.service.ports.http accounts-www service HTTP port
    ##
    ports:
      http: 80
    ## Node.js ports to expose
    ## @param accountsWww.service.nodePorts.http Node.js port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param accountsWww.service.clusterIP accounts-www service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param accountsWww.service.loadBalancerIP accounts-www service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param accountsWww.service.labelSelectorsOverride Selector for accounts-www service
    ##
    labelSelectorsOverride: {}
    ## @param accountsWww.service.loadBalancerSourceRanges accounts-www service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param accountsWww.service.externalTrafficPolicy accounts-www service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param accountsWww.service.annotations Additional custom annotations for accounts-www service
    ##
    annotations: {}
    ## @param accountsWww.service.extraPorts Extra ports to expose in accounts-www service (normally used with the `sidecars` value)
    ##
    extraPorts: []
  ## @section accounts-www ServiceAccount configuration
  ##
  serviceAccount:
    ## @param accountsWww.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param accountsWww.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param accountsWww.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section import-api Deployment Parameters
##
importApi:
  ## import-api image
  ## @param importApi.image.registry import-api image registry
  ## @param importApi.image.repository import-api image repository
  ## @param importApi.image.tag import-api image tag (immutable tags are recommended)
  ## @param importApi.image.pullPolicy import-api image pull policy
  ## @param importApi.image.pullSecrets import-api image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: import-api
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param importApi.replicaCount Number of import-api replicas to deploy
  ##
  replicaCount: 1
  ## @param importApi.containerPorts.http import-api HTTP container port
  ##
  containerPorts:
    http: 8003
  ## @param importApi.nodeProcessMaxOldSpacePercentage Memory percentage for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  nodeProcessMaxOldSpacePercentage: 75
  ## @param importApi.defaultNodeProcessMaxOldSpace Default memory for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  defaultNodeProcessMaxOldSpace: 768
  ## Configure extra options for import-api containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param importApi.livenessProbe.enabled Enable livenessProbe on import-api containers
  ## @param importApi.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param importApi.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param importApi.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param importApi.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param importApi.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param importApi.readinessProbe.enabled Enable readinessProbe on import-api containers
  ## @param importApi.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param importApi.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param importApi.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param importApi.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param importApi.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param importApi.startupProbe.enabled Enable startupProbe on import-api containers
  ## @param importApi.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param importApi.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param importApi.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param importApi.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param importApi.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param importApi.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param importApi.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param importApi.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## import-api autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param importApi.autoscaling.enabled Enable autoscaling for the import-api containers
  ## @param importApi.autoscaling.minReplicas The minimal number of containers for the import-api deployment
  ## @param importApi.autoscaling.maxReplicas The maximum number of containers for the import-api deployment
  ## @param importApi.autoscaling.targetCPUUtilizationPercentage The CPU utilization percentage used for scale up containers in import-api deployment
  ##
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 2
    targetCPUUtilizationPercentage: 75
  ## import-api resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param importApi.resources.limits.memory Container memory limits in MiB
  ## @param importApi.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param importApi.resources.requests.memory Container memory requests in MiB
  ## @param importApi.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "2048Mi"
      cpu: "1000m"
    requests:
      memory: "372Mi"
      cpu: "350m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param importApi.podSecurityContext.enabled Enabled import-api pods' Security Context
  ## @param importApi.podSecurityContext.fsGroup Set import-api pod's Security Context fsGroup
  ## @param importApi.podSecurityContext.supplementalGroups[0] Set import-api pod's Security Context supplementalGroups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    supplementalGroups: [2345]
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param importApi.containerSecurityContext.enabled Enabled import-api containers' Security Context
  ## @param importApi.containerSecurityContext.runAsUser Set import-api containers' Security Context runAsUser
  ## @param importApi.containerSecurityContext.runAsGroup Set import-api containers' Security Context runAsGroup
  ## @param importApi.containerSecurityContext.runAsNonRoot Set import-api containers' Security Context runAsNonRoot
  ## @param importApi.containerSecurityContext.allowPrivilegeEscalation Set import-api containers' Security Context allowPrivilegeEscalation
  ## @param importApi.containerSecurityContext.readOnlyRootFilesystem Set import-api containers' Security Context readOnlyRootFilesystem
  ## @param importApi.containerSecurityContext.capabilities.drop removes import-api containers' Security Context capabilities
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  ## @param importApi.podDisruptionBudget.enabled defines disruption budget for import-api
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
  ## @param importApi.terminationGracePeriodSeconds Time to wait before force killing the container
  ##
  terminationGracePeriodSeconds: 300
  ## @param importApi.existingConfigMap The name of an existing ConfigMap with your custom configuration for import-api
  ##
  existingConfigMap: ""
  ## @param importApi.existingSecret The name of an existing ConfigMap with your custom configuration for import-api
  ##
  existingSecret: ""
  ## @param importApi.command Override default container command (useful when using custom images)
  ##
  command: ["/bin/bash"]
  ## @param importApi.args Override default container args (useful when using custom images)
  ##
  args: ["-c", "npm run ready-to-run:built && exec node -r /usr/src/app/tsconfig-paths-bootstrap.js /usr/src/app/dist/app/index.js"]
  ## @param importApi.hostAliases import-api pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param importApi.podLabels Extra labels for import-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param importApi.podAnnotations Annotations for import-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param importApi.podAffinityPreset Pod affinity preset. Ignored if `importApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param importApi.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `importApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node.js importApi.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param importApi.nodeAffinityPreset.type Node.js affinity preset type. Ignored if `importApi.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param importApi.nodeAffinityPreset.key Node.js label key to match. Ignored if `importApi.affinity` is set
    ##
    key: ""
    ## @param importApi.nodeAffinityPreset.values Node.js label values to match. Ignored if `importApi.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param importApi.affinity Affinity for import-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `importApi.podAffinityPreset`, `importApi.podAntiAffinityPreset`, and `importApi.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param importApi.nodeSelector Node.js labels for import-api pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param importApi.tolerations Tolerations for import-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param importApi.updateStrategy.type import-api statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param importApi.priorityClassName import-api pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param importApi.schedulerName Name of the k8s scheduler (other than default) for import-api pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param importApi.lifecycleHooks for the import-api container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param importApi.extraEnvVars Array with extra environment variables to add to import-api nodes ([More info](#additional-environment-variables))
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param importApi.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for import-api nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsCM: ""
  ## @param importApi.extraEnvVarsSecret Name of existing Secret containing extra env vars for import-api nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsSecret: ""
  ## @param importApi.extraVolumes Optionally specify extra list of additional volumes for the import-api pod(s)
  ##
  extraVolumes: []
  ## @param importApi.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the import-api container(s)
  ##
  extraVolumeMounts: []
  ## @param importApi.sidecars Add additional sidecar containers to the import-api pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param importApi.initContainers Add additional init containers to the import-api pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section import-api Service Parameters
  ##
  ##
  service:
    ## @param importApi.service.type import-api service type
    ##
    type: ClusterIP
    ## @param importApi.service.ports.http import-api service HTTP port
    ##
    ports:
      http: 80
    ## Node.js ports to expose
    ## @param importApi.service.nodePorts.http Node.js port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param importApi.service.clusterIP import-api service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param importApi.service.loadBalancerIP import-api service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param importApi.service.labelSelectorsOverride Selector for import-api service
    ##
    labelSelectorsOverride: {}
    ## @param importApi.service.loadBalancerSourceRanges import-api service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param importApi.service.externalTrafficPolicy import-api service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param importApi.service.annotations Additional custom annotations for import-api service
    ##
    annotations: {}
    ## @param importApi.service.extraPorts Extra ports to expose in import-api service (normally used with the `sidecars` value)
    ##
    extraPorts: []

## @section import-worker Deployment Parameters
##
importWorker:
  ## import-worker image
  ## @param importWorker.image.registry import-worker image registry
  ## @param importWorker.image.repository import-worker image repository
  ## @param importWorker.image.tag import-worker image tag (immutable tags are recommended)
  ## @param importWorker.image.pullPolicy import-worker image pull policy
  ## @param importWorker.image.pullSecrets import-worker image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: import-api
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param importWorker.replicaCount Number of import-worker replicas to deploy
  ##
  replicaCount: 1
  ## @param importWorker.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param importWorker.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param importWorker.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## @param importWorker.nodeProcessMaxOldSpacePercentage Memory percentage for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  nodeProcessMaxOldSpacePercentage: 50
  ## @param importWorker.defaultNodeProcessMaxOldSpace Default memory for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  defaultNodeProcessMaxOldSpace: 2048
  ## import-worker resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param importWorker.resources.limits.memory Container memory limits in MiB
  ## @param importWorker.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param importWorker.resources.requests.memory Container memory requests in MiB
  ## @param importWorker.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "8192Mi"
      cpu: "2000m"
    requests:
      memory: "3072Mi"
      cpu: "350m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param importWorker.podSecurityContext.enabled Enabled import-worker pods' Security Context
  ## @param importWorker.podSecurityContext.fsGroup Set import-worker pod's Security Context fsGroup
  ## @param importWorker.podSecurityContext.supplementalGroups[0] Set import-worker pod's Security Context supplementalGroups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    supplementalGroups: [2345]
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param importWorker.containerSecurityContext.enabled Enabled import-worker containers' Security Context
  ## @param importWorker.containerSecurityContext.runAsUser Set import-worker containers' Security Context runAsUser
  ## @param importWorker.containerSecurityContext.runAsGroup Set import-worker containers' Security Context runAsGroup
  ## @param importWorker.containerSecurityContext.runAsNonRoot Set import-worker containers' Security Context runAsNonRoot
  ## @param importWorker.containerSecurityContext.allowPrivilegeEscalation Set import-worker containers' Security Context allowPrivilegeEscalation
  ## @param importWorker.containerSecurityContext.readOnlyRootFilesystem Set import-worker containers' Security Context readOnlyRootFilesystem
  ## @param importWorker.containerSecurityContext.capabilities.drop removes import-worker containers' Security Context capabilities
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  ## @param importWorker.podDisruptionBudget.enabled defines disruption budget for import-worker
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
  ## @param importWorker.terminationGracePeriodSeconds Time to wait before force killing the container
  ##
  terminationGracePeriodSeconds: 3600
  ## @param importWorker.existingConfigMap The name of an existing ConfigMap with your custom configuration for import-worker
  ##
  existingConfigMap: ""
  ## @param importWorker.existingSecret The name of an existing ConfigMap with your custom configuration for import-worker
  ##
  existingSecret: ""
  ## @param importWorker.command Override default container command (useful when using custom images)
  ##
  command: ["/bin/bash"]
  ## @param importWorker.args Override default container args (useful when using custom images)
  ##
  args: ["-c", "node -r /usr/src/app/tsconfig-paths-bootstrap.js /usr/src/app/dist/app/subscriber/index.js"]
  ## @param importWorker.hostAliases import-worker pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param importWorker.podLabels Extra labels for import-worker pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param importWorker.podAnnotations Annotations for import-worker pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param importWorker.podAffinityPreset Pod affinity preset. Ignored if `importWorker.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param importWorker.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `importWorker.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node.js importWorker.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param importWorker.nodeAffinityPreset.type Node.js affinity preset type. Ignored if `importWorker.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param importWorker.nodeAffinityPreset.key Node.js label key to match. Ignored if `importWorker.affinity` is set
    ##
    key: ""
    ## @param importWorker.nodeAffinityPreset.values Node.js label values to match. Ignored if `importWorker.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param importWorker.affinity Affinity for import-worker pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `importWorker.podAffinityPreset`, `importWorker.podAntiAffinityPreset`, and `importWorker.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param importWorker.nodeSelector Node.js labels for import-worker pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param importWorker.tolerations Tolerations for import-worker pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param importWorker.updateStrategy.type import-worker statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param importWorker.priorityClassName import-worker pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param importWorker.schedulerName Name of the k8s scheduler (other than default) for import-worker pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param importWorker.lifecycleHooks for the import-worker container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param importWorker.extraEnvVars Array with extra environment variables to add to import-worker nodes ([More info](#additional-environment-variables))
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param importWorker.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for import-worker nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsCM: ""
  ## @param importWorker.extraEnvVarsSecret Name of existing Secret containing extra env vars for import-worker nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsSecret: ""
  ## @param importWorker.extraVolumes Optionally specify extra list of additional volumes for the import-worker pod(s)
  ##
  extraVolumes: []
  ## @param importWorker.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the import-worker container(s)
  ##
  extraVolumeMounts: []
  ## @param importWorker.sidecars Add additional sidecar containers to the import-worker pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param importWorker.initContainers Add additional init containers to the import-worker pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}

## @section lds-api Deployment Parameters
##
ldsApi:
  ## lds-api image
  ## @param ldsApi.image.registry lds-api image registry
  ## @param ldsApi.image.repository lds-api image repository
  ## @param ldsApi.image.tag lds-api image tag (immutable tags are recommended)
  ## @param ldsApi.image.pullPolicy lds-api image pull policy
  ## @param ldsApi.image.pullSecrets lds-api image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: lds-api
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param ldsApi.replicaCount Number of lds-api replicas to deploy
  ##
  replicaCount: 1
  ## @param ldsApi.containerPorts.http lds-api HTTP container port
  ##
  containerPorts:
    http: 8004
  ## @param ldsApi.nodeProcessMaxOldSpacePercentage Memory percentage for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  nodeProcessMaxOldSpacePercentage: 75
  ## @param ldsApi.defaultNodeProcessMaxOldSpace Default memory for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  defaultNodeProcessMaxOldSpace: 768
  ## Configure extra options for lds-api containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param ldsApi.livenessProbe.enabled Enable livenessProbe on lds-api containers
  ## @param ldsApi.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param ldsApi.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param ldsApi.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param ldsApi.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param ldsApi.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param ldsApi.readinessProbe.enabled Enable readinessProbe on lds-api containers
  ## @param ldsApi.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param ldsApi.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param ldsApi.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param ldsApi.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param ldsApi.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param ldsApi.startupProbe.enabled Enable startupProbe on lds-api containers
  ## @param ldsApi.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param ldsApi.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param ldsApi.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param ldsApi.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param ldsApi.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param ldsApi.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param ldsApi.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param ldsApi.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## lds-api autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param ldsApi.autoscaling.enabled Enable autoscaling for the lds-api containers
  ## @param ldsApi.autoscaling.minReplicas The minimal number of containers for the workspace-api deployment
  ## @param ldsApi.autoscaling.maxReplicas The maximum number of containers for the lds-api deployment
  ## @param ldsApi.autoscaling.targetCPUUtilizationPercentage The CPU utilization percentage used for scale up containers in lds-api deployment
  ##
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 75
  ## lds-api resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param ldsApi.resources.limits.memory Container memory limits in MiB
  ## @param ldsApi.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param ldsApi.resources.requests.memory Container memory requests in MiB
  ## @param ldsApi.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "1024Mi"
      cpu: "1000m"
    requests:
      memory: "768Mi"
      cpu: "350m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param ldsApi.podSecurityContext.enabled Enabled lds-api pods' Security Context
  ## @param ldsApi.podSecurityContext.fsGroup Set lds-api pod's Security Context fsGroup
  ## @param ldsApi.podSecurityContext.supplementalGroups[0] Set lds-api pod's Security Context supplementalGroups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    supplementalGroups: [2345]
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param ldsApi.containerSecurityContext.enabled Enabled lds-api containers' Security Context
  ## @param ldsApi.containerSecurityContext.runAsUser Set lds-api containers' Security Context runAsUser
  ## @param ldsApi.containerSecurityContext.runAsGroup Set lds-api containers' Security Context runAsGroup
  ## @param ldsApi.containerSecurityContext.runAsNonRoot Set lds-api containers' Security Context runAsNonRoot
  ## @param ldsApi.containerSecurityContext.allowPrivilegeEscalation Set lds-api containers' Security Context allowPrivilegeEscalation
  ## @param ldsApi.containerSecurityContext.readOnlyRootFilesystem Set lds-api containers' Security Context readOnlyRootFilesystem
  ## @param ldsApi.containerSecurityContext.capabilities.drop removes lds-api containers' Security Context capabilities
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  ## @param ldsApi.podDisruptionBudget.enabled defines disruption budget for lds-api
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
  ## @param ldsApi.terminationGracePeriodSeconds Time to wait before force killing the container
  ##
  terminationGracePeriodSeconds: 60
  ## @param ldsApi.existingConfigMap The name of an existing ConfigMap with your custom configuration for lds-api
  ##
  existingConfigMap: ""
  ## @param ldsApi.existingSecret The name of an existing ConfigMap with your custom configuration for lds-api
  ##
  existingSecret: ""
  ## @param ldsApi.command Override default container command (useful when using custom images)
  ##
  command: ["/bin/bash"]
  ## @param ldsApi.args Override default container args (useful when using custom images)
  ##
  args: ["-c", "npm run ready-to-run:built && exec node -r /usr/src/app/tsconfig-paths-bootstrap.js /usr/src/app/dist/app/index.js"]
  ## @param ldsApi.hostAliases lds-api pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param ldsApi.podLabels Extra labels for lds-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param ldsApi.podAnnotations Annotations for lds-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param ldsApi.podAffinityPreset Pod affinity preset. Ignored if `ldsApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param ldsApi.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `ldsApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node.js ldsApi.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param ldsApi.nodeAffinityPreset.type Node.js affinity preset type. Ignored if `ldsApi.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param ldsApi.nodeAffinityPreset.key Node.js label key to match. Ignored if `ldsApi.affinity` is set
    ##
    key: ""
    ## @param ldsApi.nodeAffinityPreset.values Node.js label values to match. Ignored if `ldsApi.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param ldsApi.affinity Affinity for lds-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `ldsApi.podAffinityPreset`, `ldsApi.podAntiAffinityPreset`, and `ldsApi.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param ldsApi.nodeSelector Node.js labels for lds-api pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param ldsApi.tolerations Tolerations for lds-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param ldsApi.updateStrategy.type lds-api statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param ldsApi.priorityClassName lds-api pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param ldsApi.schedulerName Name of the k8s scheduler (other than default) for lds-api pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param ldsApi.lifecycleHooks for the lds-api container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param ldsApi.extraEnvVars Array with extra environment variables to add to lds-api nodes ([More info](#additional-environment-variables))
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param ldsApi.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for lds-api nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsCM: ""
  ## @param ldsApi.extraEnvVarsSecret Name of existing Secret containing extra env vars for lds-api nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsSecret: ""
  ## @param ldsApi.extraVolumes Optionally specify extra list of additional volumes for the lds-api pod(s)
  ##
  extraVolumes: []
  ## @param ldsApi.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the lds-api container(s)
  ##
  extraVolumeMounts: []
  ## @param ldsApi.sidecars Add additional sidecar containers to the lds-api pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param ldsApi.initContainers Add additional init containers to the lds-api pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section lds-api Service Parameters
  ##
  ##
  service:
    ## @param ldsApi.service.type lds-api service type
    ##
    type: ClusterIP
    ## @param ldsApi.service.ports.http lds-api service HTTP port
    ##
    ports:
      http: 80
    ## Node.js ports to expose
    ## @param ldsApi.service.nodePorts.http Node.js port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param ldsApi.service.clusterIP lds-api service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param ldsApi.service.loadBalancerIP lds-api service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param ldsApi.service.labelSelectorsOverride Selector for lds-api service
    ##
    labelSelectorsOverride: {}
    ## @param ldsApi.service.loadBalancerSourceRanges lds-api service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param ldsApi.service.externalTrafficPolicy lds-api service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param ldsApi.service.annotations Additional custom annotations for lds-api service
    ##
    annotations: {}
    ## @param ldsApi.service.extraPorts Extra ports to expose in lds-api service (normally used with the `sidecars` value)
    ##
    extraPorts: []

## @section maps-api Deployment Parameters
##
mapsApi:
  ## maps-api image
  ## @param mapsApi.image.registry maps-api image registry
  ## @param mapsApi.image.repository maps-api image repository
  ## @param mapsApi.image.tag maps-api image tag (immutable tags are recommended)
  ## @param mapsApi.image.pullPolicy maps-api image pull policy
  ## @param mapsApi.image.pullSecrets maps-api image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: maps-api
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param mapsApi.replicaCount Number of maps-api replicas to deploy
  ##
  replicaCount: 2
  ## @param mapsApi.containerPorts.http maps-api HTTP container port
  ##
  containerPorts:
    http: 8002
  ## @param mapsApi.nodeProcessMaxOldSpacePercentage Memory percentage for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  nodeProcessMaxOldSpacePercentage: 75
  ## @param mapsApi.defaultNodeProcessMaxOldSpace Default memory for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  defaultNodeProcessMaxOldSpace: 1875
  ## Configure extra options for maps-api containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param mapsApi.livenessProbe.enabled Enable livenessProbe on maps-api containers
  ## @param mapsApi.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param mapsApi.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param mapsApi.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param mapsApi.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param mapsApi.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param mapsApi.readinessProbe.enabled Enable readinessProbe on maps-api containers
  ## @param mapsApi.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param mapsApi.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param mapsApi.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param mapsApi.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param mapsApi.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param mapsApi.startupProbe.enabled Enable startupProbe on maps-api containers
  ## @param mapsApi.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param mapsApi.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param mapsApi.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param mapsApi.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param mapsApi.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param mapsApi.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param mapsApi.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param mapsApi.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## maps-api autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param mapsApi.autoscaling.enabled Enable autoscaling for the maps-api containers
  ## @param mapsApi.autoscaling.minReplicas The minimal number of containers for the maps-api deployment
  ## @param mapsApi.autoscaling.maxReplicas The maximum number of containers for the maps-api deployment
  ## @param mapsApi.autoscaling.targetCPUUtilizationPercentage The CPU utilization percentage used for scale up containers in maps-api deployment
  ##
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75
  ## maps-api resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param mapsApi.resources.limits.memory Container memory limits in MiB
  ## @param mapsApi.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param mapsApi.resources.requests.memory Container memory requests in MiB
  ## @param mapsApi.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "6144Mi"
      cpu: "2000m"
    requests:
      memory: "768Mi"
      cpu: "350m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param mapsApi.podSecurityContext.enabled Enabled maps-api pods' Security Context
  ## @param mapsApi.podSecurityContext.fsGroup Set maps-api pod's Security Context fsGroup
  ## @param mapsApi.podSecurityContext.supplementalGroups[0] Set maps-api pod's Security Context supplementalGroups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    supplementalGroups: [2345]
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param mapsApi.containerSecurityContext.enabled Enabled maps-api containers' Security Context
  ## @param mapsApi.containerSecurityContext.runAsUser Set maps-api containers' Security Context runAsUser
  ## @param mapsApi.containerSecurityContext.runAsGroup Set maps-api containers' Security Context runAsGroup
  ## @param mapsApi.containerSecurityContext.runAsNonRoot Set maps-api containers' Security Context runAsNonRoot
  ## @param mapsApi.containerSecurityContext.allowPrivilegeEscalation Set maps-api containers' Security Context allowPrivilegeEscalation
  ## @param mapsApi.containerSecurityContext.readOnlyRootFilesystem Set maps-api containers' Security Context readOnlyRootFilesystem
  ## @param mapsApi.containerSecurityContext.capabilities.drop removes maps-api containers' Security Context capabilities
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  ## @param mapsApi.podDisruptionBudget.enabled defines disruption budget for maps-api
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
  ## @param mapsApi.terminationGracePeriodSeconds Time to wait before force killing the container
  ##
  terminationGracePeriodSeconds: 600
  ## @param mapsApi.existingConfigMap The name of an existing ConfigMap with your custom configuration for maps-api
  ##
  existingConfigMap: ""
  ## @param mapsApi.existingSecret The name of an existing ConfigMap with your custom configuration for maps-api
  ##
  existingSecret: ""
  ## @param mapsApi.command Override default container command (useful when using custom images)
  ##
  command: ["/bin/bash"]
  ## @param mapsApi.args Override default container args (useful when using custom images)
  ##
  args: ["-c", "npm run ready-to-run:built && exec node -r /usr/src/app/tsconfig-paths-bootstrap.js /usr/src/app/dist/app/index.js"]
  ## @param mapsApi.hostAliases maps-api pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param mapsApi.podLabels Extra labels for maps-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param mapsApi.podAnnotations Annotations for maps-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param mapsApi.podAffinityPreset Pod affinity preset. Ignored if `mapsApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param mapsApi.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `mapsApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node.js mapsApi.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param mapsApi.nodeAffinityPreset.type Node.js affinity preset type. Ignored if `mapsApi.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param mapsApi.nodeAffinityPreset.key Node.js label key to match. Ignored if `mapsApi.affinity` is set
    ##
    key: ""
    ## @param mapsApi.nodeAffinityPreset.values Node.js label values to match. Ignored if `mapsApi.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param mapsApi.affinity Affinity for maps-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `mapsApi.podAffinityPreset`, `mapsApi.podAntiAffinityPreset`, and `mapsApi.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param mapsApi.nodeSelector Node.js labels for maps-api pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param mapsApi.tolerations Tolerations for maps-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param mapsApi.updateStrategy.type maps-api statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param mapsApi.priorityClassName maps-api pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param mapsApi.schedulerName Name of the k8s scheduler (other than default) for maps-api pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param mapsApi.lifecycleHooks for the maps-api container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param mapsApi.extraEnvVars Array with extra environment variables to add to maps-api nodes ([More info](#additional-environment-variables))
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param mapsApi.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for maps-api nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsCM: ""
  ## @param mapsApi.extraEnvVarsSecret Name of existing Secret containing extra env vars for maps-api nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsSecret: ""
  ## @param mapsApi.extraVolumes Optionally specify extra list of additional volumes for the maps-api pod(s)
  ##
  extraVolumes: []
  ## @param mapsApi.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the maps-api container(s)
  ##
  extraVolumeMounts: []
  ## @param mapsApi.sidecars Add additional sidecar containers to the maps-api pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param mapsApi.initContainers Add additional init containers to the maps-api pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section maps-api Service Parameters
  ##
  ##
  service:
    ## @param mapsApi.service.type maps-api service type
    ##
    type: ClusterIP
    ## @param mapsApi.service.ports.http maps-api service HTTP port
    ##
    ports:
      http: 80
    ## Node.js ports to expose
    ## @param mapsApi.service.nodePorts.http Node.js port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param mapsApi.service.clusterIP maps-api service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param mapsApi.service.loadBalancerIP maps-api service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param mapsApi.service.labelSelectorsOverride Selector for maps-api service
    ##
    labelSelectorsOverride: {}
    ## @param mapsApi.service.loadBalancerSourceRanges maps-api service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param mapsApi.service.externalTrafficPolicy maps-api service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param mapsApi.service.annotations Additional custom annotations for maps-api service
    ##
    annotations: {}
    ## @param mapsApi.service.extraPorts Extra ports to expose in maps-api service (normally used with the `sidecars` value)
    ##
    extraPorts: []

## @section sql-worker Deployment Parameters
##
sqlWorker:
  ## sql-worker image
  ## @param sqlWorker.image.registry sql-worker image registry
  ## @param sqlWorker.image.repository sql-worker image repository
  ## @param sqlWorker.image.tag sql-worker image tag (immutable tags are recommended)
  ## @param sqlWorker.image.pullPolicy sql-worker image pull policy
  ## @param sqlWorker.image.pullSecrets sql-worker image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: maps-api
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param sqlWorker.replicaCount Number of sql-worker replicas to deploy
  ##
  replicaCount: 1
  ## @param sqlWorker.nodeProcessMaxOldSpacePercentage Memory percentage for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  nodeProcessMaxOldSpacePercentage: 75
  ## @param sqlWorker.defaultNodeProcessMaxOldSpace Default memory for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  defaultNodeProcessMaxOldSpace: 1536
  ## Configure extra options for sqlWorker containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param sqlWorker.livenessProbe.enabled Enable livenessProbe on sqlWorker containers
  ## @param sqlWorker.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param sqlWorker.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param sqlWorker.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param sqlWorker.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param sqlWorker.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param sqlWorker.readinessProbe.enabled Enable readinessProbe on sqlWorker containers
  ## @param sqlWorker.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param sqlWorker.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param sqlWorker.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param sqlWorker.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param sqlWorker.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param sqlWorker.startupProbe.enabled Enable startupProbe on sqlWorker containers
  ## @param sqlWorker.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param sqlWorker.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param sqlWorker.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param sqlWorker.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param sqlWorker.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## sql-worker resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param sqlWorker.resources.limits.memory Container memory limits in MiB
  ## @param sqlWorker.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param sqlWorker.resources.requests.memory Container memory requests in MiB
  ## @param sqlWorker.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "2048Mi"
      cpu: "1000m"
    requests:
      memory: "1024Mi"
      cpu: "350m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param sqlWorker.podSecurityContext.enabled Enabled sql-worker pods' Security Context
  ## @param sqlWorker.podSecurityContext.fsGroup Set sql-worker pod's Security Context fsGroup
  ## @param sqlWorker.podSecurityContext.supplementalGroups[0] Set sql-worker pod's Security Context supplementalGroups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    supplementalGroups: [2345]
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param sqlWorker.containerSecurityContext.enabled Enabled sql-worker containers' Security Context
  ## @param sqlWorker.containerSecurityContext.runAsUser Set sql-worker containers' Security Context runAsUser
  ## @param sqlWorker.containerSecurityContext.runAsGroup Set sql-worker containers' Security Context runAsGroup
  ## @param sqlWorker.containerSecurityContext.runAsNonRoot Set sql-worker containers' Security Context runAsNonRoot
  ## @param sqlWorker.containerSecurityContext.allowPrivilegeEscalation Set sql-worker containers' Security Context allowPrivilegeEscalation
  ## @param sqlWorker.containerSecurityContext.readOnlyRootFilesystem Set sql-worker containers' Security Context readOnlyRootFilesystem
  ## @param sqlWorker.containerSecurityContext.capabilities.drop removes sql-worker containers' Security Context capabilities
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  ## @param sqlWorker.podDisruptionBudget.enabled defines disruption budget for sql-worker
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
  ## @param sqlWorker.terminationGracePeriodSeconds Time to wait before force killing the container
  ##
  terminationGracePeriodSeconds: 300
  ## @param sqlWorker.existingConfigMap The name of an existing ConfigMap with your custom configuration for sql-worker
  ##
  existingConfigMap: ""
  ## @param sqlWorker.existingSecret The name of an existing ConfigMap with your custom configuration for sql-worker
  ##
  existingSecret: ""
  ## @param sqlWorker.command Override default container command (useful when using custom images)
  ##
  command: ["/bin/bash"]
  ## @param sqlWorker.args Override default container args (useful when using custom images)
  ##
  args: ["-c", "npm run ready-to-run:built && exec node -r /usr/src/app/tsconfig-paths-bootstrap.js /usr/src/app/dist/app/subscriber/index.js"]
  ## @param sqlWorker.hostAliases sql-worker pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param sqlWorker.podLabels Extra labels for sql-worker pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param sqlWorker.podAnnotations Annotations for sql-worker pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param sqlWorker.podAffinityPreset Pod affinity preset. Ignored if `sqlWorker.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param sqlWorker.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `sqlWorker.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node.js sqlWorker.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param sqlWorker.nodeAffinityPreset.type Node.js affinity preset type. Ignored if `sqlWorker.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param sqlWorker.nodeAffinityPreset.key Node.js label key to match. Ignored if `sqlWorker.affinity` is set
    ##
    key: ""
    ## @param sqlWorker.nodeAffinityPreset.values Node.js label values to match. Ignored if `sqlWorker.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param sqlWorker.affinity Affinity for sql-worker pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `sqlWorker.podAffinityPreset`, `sqlWorker.podAntiAffinityPreset`, and `sqlWorker.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param sqlWorker.nodeSelector Node.js labels for sql-worker pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param sqlWorker.tolerations Tolerations for sql-worker pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param sqlWorker.updateStrategy.type sql-worker statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param sqlWorker.priorityClassName sql-worker pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param sqlWorker.schedulerName Name of the k8s scheduler (other than default) for sql-worker pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param sqlWorker.lifecycleHooks for the sql-worker container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param sqlWorker.extraEnvVars Array with extra environment variables to add to sql-worker nodes ([More info](#additional-environment-variables))
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param sqlWorker.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for sql-worker nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsCM: ""
  ## @param sqlWorker.extraEnvVarsSecret Name of existing Secret containing extra env vars for sql-worker nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsSecret: ""
  ## @param sqlWorker.extraVolumes Optionally specify extra list of additional volumes for the sql-worker pod(s)
  ##
  extraVolumes: []
  ## @param sqlWorker.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the sql-worker container(s)
  ##
  extraVolumeMounts: []
  ## @param sqlWorker.sidecars Add additional sidecar containers to the sql-worker pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param sqlWorker.initContainers Add additional init containers to the sql-worker pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}

## @section router Deployment Parameters
##
router:
  ## router image
  ## @param router.image.registry router image registry
  ## @param router.image.repository router image repository
  ## @param router.image.tag router image tag (immutable tags are recommended)
  ## @param router.image.pullPolicy router image pull policy
  ## @param router.image.pullSecrets router image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: router/router-http
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param router.replicaCount Number of router replicas to deploy
  ##
  replicaCount: 1
  ## @param router.containerPorts.http router HTTP container port
  ## @param router.containerPorts.https router HTTPS container port
  ##
  containerPorts:
    http: 8080
    https: 8443
  ## Configure extra options for router containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param router.livenessProbe.enabled Enable livenessProbe on router containers
  ## @param router.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param router.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param router.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param router.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param router.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param router.readinessProbe.enabled Enable readinessProbe on router containers
  ## @param router.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param router.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param router.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param router.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param router.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param router.startupProbe.enabled Enable startupProbe on router containers
  ## @param router.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param router.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param router.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param router.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param router.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param router.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param router.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param router.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## router autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param router.autoscaling.enabled Enable autoscaling for the router containers
  ## @param router.autoscaling.minReplicas The minimal number of containers for the router deployment
  ## @param router.autoscaling.maxReplicas The maximum number of containers for the router deployment
  ## @param router.autoscaling.targetCPUUtilizationPercentage The CPU utilization percentage used for scale up containers in router deployment
  ##
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 75
  ## router resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param router.resources.limits.memory Container memory limits in MiB
  ## @param router.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param router.resources.requests.memory Container memory requests in MiB
  ## @param router.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "512Mi"
      cpu: "500m"
    requests:
      memory: "372Mi"
      cpu: "200m"
  ## router nginx config parameters
  ## ref: https://nginx.org/en/docs/
  ## @param router.nginxConfig.gzip_buffers Sets the number and size of buffers used to compress a response
  ## @param router.nginxConfig.gzip_min_length Sets the minimum length of a response that will be gzipped
  ## @param router.nginxConfig.proxy_buffers Sets the number and size of the buffers used for reading a response from the proxied server, for a single connection
  ## @param router.nginxConfig.proxy_buffer_size Sets the size of the buffer used for reading the first part of the response received from the proxied server
  ## @param router.nginxConfig.proxy_busy_buffers_size Limits the total size of buffers that can be busy sending a response to the client while the response is not yet fully read
  ## @param router.nginxConfig.client_max_body_size Sets the maximum allowed size of the client request body
  nginxConfig:
    gzip_buffers: "16 8k"
    gzip_min_length: "1100"
    proxy_buffers: "16 8k"
    proxy_buffer_size: "8k"
    proxy_busy_buffers_size: "8k"
    client_max_body_size: "10M"
  ## TLS Certificates
  ## @param router.tlsCertificates.certificateValueBase64 certificate in base64
  ## @param router.tlsCertificates.privateKeyValueBase64 private key in base64
  ##
  tlsCertificates:
    certificateValueBase64: ""
    privateKeyValueBase64: ""

  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param router.podSecurityContext.enabled Enabled router pods' Security Context
  ## @param router.podSecurityContext.fsGroup Set router pod's Security Context fsGroup
  ## @param router.podSecurityContext.supplementalGroups[0] Set router pod's Security Context supplementalGroups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 101
    supplementalGroups: [2345]
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param router.containerSecurityContext.enabled Enabled router containers' Security Context
  ## @param router.containerSecurityContext.runAsUser Set router containers' Security Context runAsUser
  ## @param router.containerSecurityContext.runAsGroup Set router containers' Security Context runAsGroup
  ## @param router.containerSecurityContext.runAsNonRoot Set router containers' Security Context runAsNonRoot
  ## @param router.containerSecurityContext.allowPrivilegeEscalation Set router containers' Security Context allowPrivilegeEscalation
  ## @param router.containerSecurityContext.readOnlyRootFilesystem Set router containers' Security Context readOnlyRootFilesystem
  ## @param router.containerSecurityContext.capabilities.drop removes router containers' Security Context capabilities
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 101
    runAsGroup: 101
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  ## @param router.podDisruptionBudget.enabled defines disruption budget for router
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
  ## @param router.terminationGracePeriodSeconds Time to wait before force killing the container
  ##
  terminationGracePeriodSeconds: 300
  ## @param router.existingConfigMap The name of an existing ConfigMap with your custom configuration for router
  ##
  existingConfigMap: ""
  ## @param router.existingSecret The name of an existing ConfigMap with your custom configuration for router
  ##
  existingSecret: ""
  ## @param router.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param router.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param router.hostAliases router pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param router.podLabels Extra labels for router pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param router.podAnnotations Annotations for router pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param router.podAffinityPreset Pod affinity preset. Ignored if `router.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param router.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `router.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node.js router.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param router.nodeAffinityPreset.type Node.js affinity preset type. Ignored if `router.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param router.nodeAffinityPreset.key Node.js label key to match. Ignored if `router.affinity` is set
    ##
    key: ""
    ## @param router.nodeAffinityPreset.values Node.js label values to match. Ignored if `router.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param router.affinity Affinity for router pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `router.podAffinityPreset`, `router.podAntiAffinityPreset`, and `router.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param router.nodeSelector Node.js labels for router pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param router.tolerations Tolerations for router pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param router.updateStrategy.type router statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param router.priorityClassName router pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param router.schedulerName Name of the k8s scheduler (other than default) for router pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @skip router.lifecycleHooks [object] for the router container(s) to automate configuration before or after startup
  ## @skip router.lifecycleHooks.preStop.exec.command
  ##
  lifecycleHooks:
    preStop:
      exec:
        command:
          - /bin/sh
          - '-c'
          - 'sleep 30 && /usr/sbin/nginx -s quit'
  ## @param router.extraEnvVars Array with extra environment variables to add to router nodes ([More info](#additional-environment-variables))
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param router.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for router nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsCM: ""
  ## @param router.extraEnvVarsSecret Name of existing Secret containing extra env vars for router nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsSecret: ""
  ## @param router.extraVolumes Optionally specify extra list of additional volumes for the router pod(s)
  ##
  extraVolumes: []
  ## @param router.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the router container(s)
  ##
  extraVolumeMounts: []
  ## @param router.sidecars Add additional sidecar containers to the router pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param router.initContainers Add additional init containers to the router pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}

  ## @section router Service Parameters
  ##
  ##
  service:
    ## @param router.service.type router service type
    ##
    type: ClusterIP
    ## @param router.service.ports.http router service HTTP port
    ## @param router.service.ports.httpTargetPort router service HTTP Target port
    ## @param router.service.ports.https router service HTTPS port
    ## @param router.service.ports.httpsTargetPort router service HTTPS Target port
    ##
    ports:
      http: 80
      httpTargetPort: "http"
      https: 443
      httpsTargetPort: "https"

    ## Node.js ports to expose
    ## @param router.service.nodePorts.http Node.js port for HTTP
    ## @param router.service.nodePorts.https Node.js port for HTTPS
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
      https: ""
    ## @param router.service.clusterIP router service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param router.service.loadBalancerIP router service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param router.service.labelSelectorsOverride Selector for router service
    ##
    labelSelectorsOverride: {}
    ## @param router.service.loadBalancerSourceRanges router service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param router.service.externalTrafficPolicy router service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param router.service.annotations Additional custom annotations for router service
    ##
    annotations: {}
    ## @param router.service.extraPorts Extra ports to expose in router service (normally used with the `sidecars` value)
    ##
    extraPorts: []
  ## FIXME: Deprecated in favor of ingress instead of router.ingress
  ## Configure the ingress resource that allows you to access the
  ## Carto installation. Set up the URL
  ## ref: https://kubernetes.io/docs/user-guide/ingress/
  ##
  ingress:
    ## @param router.ingress.enabled Enable ingress controller resource
    ##
    enabled: false

    ## @param router.ingress.pathType Ingress Path type
    ##
    pathType: ImplementationSpecific
    ## @param router.ingress.apiVersion Override API Version (automatically detected if not set)
    ##
    apiVersion: ""
    ## @param router.ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
    ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
    ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    ##
    ingressClassName: ""
    ## @param router.ingress.path The Path to CARTO. You may need to set this to '/*' in order to use this
    ## with ALB ingress controllers.
    ##
    path: /*
    ## @param router.ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ##
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations: {}
    ## @param router.ingress.tls Enable TLS configuration for the hostname defined at ingress.hostname parameter
    ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
    ## You can use the ingress.secrets parameter to create this TLS secret or relay on cert-manager to create it
    ##
    tls: false
    ## @param router.ingress.extraHosts The list of additional hostnames to be covered with this ingress record.
    ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
    ## extraHosts:
    ## - name: example.local
    ##   path: /
    extraHosts: []
    ## @param router.ingress.extraPaths Any additional arbitrary paths that may need to be added to the ingress under the main host.
    ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
    ## extraPaths:
    ## - path: /*
    ##   backend:
    ##     serviceName: ssl-redirect
    ##     servicePort: use-annotation
    extraPaths: []
    ## @param router.ingress.extraTls The tls configuration for additional hostnames to be covered with this ingress record.
    ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    ## extraTls:
    ## - hosts:
    ##     - example.local
    ##   secretName: example.local-tls
    extraTls: []
    ## @param router.ingress.extraRules Additional rules to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## e.g:
    ## extraRules:
    ## - host: example.local
    ##     http:
    ##       path: /
    ##       backend:
    ##         service:
    ##           name: example-svc
    ##           port:
    ##             name: http
    ##
    extraRules: []
  ## @section router ServiceAccount configuration
  ##
  serviceAccount:
    ## @param router.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param router.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param router.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section httpCache Deployment Parameters
##
httpCache:
  ## httpCache image
  ## @param httpCache.image.registry http-cache image registry
  ## @param httpCache.image.repository http-cache image repository
  ## @param httpCache.image.tag http-cache image tag (immutable tags are recommended)
  ## @param httpCache.image.pullPolicy http-cache image pull policy
  ## @param httpCache.image.pullSecrets http-cache image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: http-cache
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param httpCache.replicaCount Number of http-cache replicas to deploy
  ##
  replicaCount: 1
  ## @param httpCache.containerPorts.http http-cache HTTP container port
  ##
  containerPorts:
    http: 6081
  ## Configure extra options for http-cache containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param httpCache.livenessProbe.enabled Enable livenessProbe on http-cache containers
  ## @param httpCache.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param httpCache.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param httpCache.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param httpCache.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param httpCache.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param httpCache.readinessProbe.enabled Enable readinessProbe on http-cache containers
  ## @param httpCache.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param httpCache.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param httpCache.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param httpCache.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param httpCache.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param httpCache.startupProbe.enabled Enable startupProbe on http-cache containers
  ## @param httpCache.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param httpCache.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param httpCache.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param httpCache.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param httpCache.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param httpCache.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param httpCache.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param httpCache.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## http-cache resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param httpCache.resources.limits.memory Container memory limits in MiB
  ## @param httpCache.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param httpCache.resources.requests.memory Container memory requests in MiB
  ## @param httpCache.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "2048Mi"
      cpu: "500m"
    requests:
      memory: "1256Mi"
      cpu: "200m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param httpCache.podSecurityContext.enabled Enabled http-cache pods' Security Context
  ## @param httpCache.podSecurityContext.fsGroup Set http-cache pod's Security Context fsGroup
  ## @param httpCache.podSecurityContext.supplementalGroups[0] Set httpCache pod's Security Context supplementalGroups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 102
    supplementalGroups: [2345]
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param httpCache.containerSecurityContext.enabled Enabled http-cache containers' Security Context
  ## @param httpCache.containerSecurityContext.runAsUser Set http-cache containers' Security Context runAsUser
  ## @param httpCache.containerSecurityContext.runAsGroup Set http-cache containers' Security Context runAsGroup
  ## @param httpCache.containerSecurityContext.runAsNonRoot Set http-cache containers' Security Context runAsNonRoot
  ## @param httpCache.containerSecurityContext.allowPrivilegeEscalation Set http-cache containers' Security Context allowPrivilegeEscalation
  ## @param httpCache.containerSecurityContext.readOnlyRootFilesystem Set http-cache containers' Security Context readOnlyRootFilesystem
  ## @param httpCache.containerSecurityContext.capabilities.drop removes http-cache containers' Security Context capabilities
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 101
    runAsGroup: 101
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  ## @param httpCache.podDisruptionBudget.enabled defines disruption budget for http-cache
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
  ## @param httpCache.terminationGracePeriodSeconds Time to wait before force killing the container
  ##
  terminationGracePeriodSeconds: 600
  ## @param httpCache.existingConfigMap The name of an existing ConfigMap with your custom configuration for http-cache
  ##
  existingConfigMap: ""
  ## @param httpCache.existingSecret The name of an existing ConfigMap with your custom configuration for http-cache
  ##
  existingSecret: ""
  ## @param httpCache.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param httpCache.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param httpCache.hostAliases http-cache pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param httpCache.podLabels Extra labels for http-cache pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param httpCache.podAnnotations Annotations for http-cache pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param httpCache.podAffinityPreset Pod affinity preset. Ignored if `httpCache.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param httpCache.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `httpCache.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node.js httpCache.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param httpCache.nodeAffinityPreset.type Node.js affinity preset type. Ignored if `httpCache.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param httpCache.nodeAffinityPreset.key Node.js label key to match. Ignored if `httpCache.affinity` is set
    ##
    key: ""
    ## @param httpCache.nodeAffinityPreset.values Node.js label values to match. Ignored if `httpCache.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param httpCache.affinity Affinity for http-cache pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `httpCache.podAffinityPreset`, `httpCache.podAntiAffinityPreset`, and `httpCache.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param httpCache.nodeSelector Node.js labels for http-cache pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param httpCache.tolerations Tolerations for http-cache pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param httpCache.updateStrategy.type http-cache statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param httpCache.priorityClassName http-cache pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param httpCache.schedulerName Name of the k8s scheduler (other than default) for http-cache pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @skip httpCache.lifecycleHooks [object] for the http-cache container(s) to automate configuration before or after startup
  ## @skip httpCache.lifecycleHooks.preStop.exec.command
  ##
  lifecycleHooks:
    preStop:
      exec:
        command:
          - sh
          - '-c'
          - 'sleep 30 && kill -TERM $(pidof varnishd)'
  ## @param httpCache.extraEnvVars Array with extra environment variables to add to http-cache nodes ([More info](#additional-environment-variables))
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param httpCache.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for http-cache nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsCM: ""
  ## @param httpCache.extraEnvVarsSecret Name of existing Secret containing extra env vars for http-cache nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsSecret: ""
  ## @param httpCache.extraVolumes Optionally specify extra list of additional volumes for the http-cache pod(s)
  ##
  extraVolumes: []
  ## @param httpCache.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the http-cache container(s)
  ##
  extraVolumeMounts: []
  ## @param httpCache.sidecars Add additional sidecar containers to the http-cache pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param httpCache.initContainers Add additional init containers to the http-cache pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section http-cache Service Parameters
  ##
  ##
  service:
    ## @param httpCache.service.type http-cache service type
    ##
    type: ClusterIP
    ## @param httpCache.service.ports.http http-cache service HTTP port
    ##
    ports:
      http: 80
    ## Node.js ports to expose
    ## @param httpCache.service.nodePorts.http Node.js port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param httpCache.service.clusterIP http-cache service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param httpCache.service.loadBalancerIP http-cache service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param httpCache.service.labelSelectorsOverride Selector for http-cache service
    ##
    labelSelectorsOverride: {}
    ## @param httpCache.service.loadBalancerSourceRanges http-cache service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param httpCache.service.externalTrafficPolicy http-cache service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param httpCache.service.annotations Additional custom annotations for http-cache service
    ##
    annotations: {}
    ## @param httpCache.service.extraPorts Extra ports to expose in http-cache service (normally used with the `sidecars` value)
    ##
    extraPorts: []
  ## @section http-cache ServiceAccount configuration
  ##
  serviceAccount:
    ## @param httpCache.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param httpCache.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param httpCache.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section notifier Deployment Parameters
##
notifier:
  ## notifier image
  ## @param notifier.image.registry notifier image registry
  ## @param notifier.image.repository notifier image repository
  ## @param notifier.image.tag notifier image tag (immutable tags are recommended)
  ## @param notifier.image.pullPolicy notifier image pull policy
  ## @param notifier.image.pullSecrets notifier image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: notifier
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param notifier.replicaCount Number of notifier replicas to deploy
  ##
  replicaCount: 1
  ## @param notifier.containerPorts.http notifier HTTP container port
  ## @param notifier.containerPorts.internal notifier internal container port
  ##
  containerPorts:
    http: 7999
    internal: 5561
  ## Configure extra options for notifier containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param notifier.livenessProbe.enabled Enable livenessProbe on notifier containers
  ## @param notifier.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param notifier.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param notifier.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param notifier.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param notifier.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param notifier.readinessProbe.enabled Enable readinessProbe on notifier containers
  ## @param notifier.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param notifier.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param notifier.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param notifier.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param notifier.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param notifier.startupProbe.enabled Enable startupProbe on notifier containers
  ## @param notifier.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param notifier.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param notifier.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param notifier.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param notifier.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param notifier.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param notifier.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param notifier.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## notifier resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param notifier.resources.limits.memory Container memory limits in MiB
  ## @param notifier.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param notifier.resources.requests.memory Container memory requests in MiB
  ## @param notifier.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "512Mi"
      cpu: "500m"
    requests:
      memory: "256Mi"
      cpu: "200m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param notifier.podSecurityContext.enabled Enabled notifier pods' Security Context
  ## @param notifier.podSecurityContext.fsGroup Enabled notifier pods' Security Context fsGroup
  ## @param notifier.podSecurityContext.supplementalGroups[0] Set notifier pod's Security Context supplementalGroups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 102
    supplementalGroups: [2345]
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param notifier.containerSecurityContext.enabled Enabled notifier containers' Security Context
  ## @param notifier.containerSecurityContext.runAsUser Set notifier containers' Security Context runAsUser
  ## @param notifier.containerSecurityContext.runAsGroup Set notifier containers' Security Context runAsGroup
  ## @param notifier.containerSecurityContext.runAsNonRoot Set notifier containers' Security Context runAsNonRoot
  ## @param notifier.containerSecurityContext.allowPrivilegeEscalation Set notifier containers' Security Context allowPrivilegeEscalation
  ## @param notifier.containerSecurityContext.readOnlyRootFilesystem Set notifier containers' Security Context readOnlyRootFilesystem
  ## @param notifier.containerSecurityContext.capabilities.drop removes notifier containers' Security Context capabilities
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 101
    runAsGroup: 101
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  ## @param notifier.podDisruptionBudget.enabled defines disruption budget for notifier
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
  ## @param notifier.terminationGracePeriodSeconds Time to wait before force killing the container
  ##
  terminationGracePeriodSeconds: 60
  ## @param notifier.existingConfigMap The name of an existing ConfigMap with your custom configuration for notifier
  ##
  existingConfigMap: ""
  ## @param notifier.existingSecret The name of an existing ConfigMap with your custom configuration for notifier
  ##
  existingSecret: ""
  ## @param notifier.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param notifier.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param notifier.hostAliases notifier pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param notifier.podLabels Extra labels for notifier pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param notifier.podAnnotations Annotations for notifier pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param notifier.podAffinityPreset Pod affinity preset. Ignored if `notifier.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param notifier.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `notifier.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node notifier.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param notifier.nodeAffinityPreset.type Node affinity preset type. Ignored if `notifier.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param notifier.nodeAffinityPreset.key Node label key to match. Ignored if `notifier.affinity` is set
    ##
    key: ""
    ## @param notifier.nodeAffinityPreset.values Node label values to match. Ignored if `notifier.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param notifier.affinity Affinity for notifier pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `notifier.podAffinityPreset`, `notifier.podAntiAffinityPreset`, and `notifier.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param notifier.nodeSelector Node labels for notifier pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param notifier.tolerations Tolerations for notifier pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param notifier.updateStrategy.type notifier deployment strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  ##
  updateStrategy:
    ## StrategyType
    ##
    type: RollingUpdate
  ## @param notifier.priorityClassName notifier pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param notifier.schedulerName Name of the k8s scheduler (other than default) for notifier pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param notifier.lifecycleHooks for the notifier container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param notifier.extraEnvVars Array with extra environment variables to add to notifier nodes ([More info](#additional-environment-variables))
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param notifier.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for notifier nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsCM: ""
  ## @param notifier.extraEnvVarsSecret Name of existing Secret containing extra env vars for notifier nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsSecret: ""
  ## @param notifier.extraVolumes Optionally specify extra list of additional volumes for the notifier pod(s)
  ##
  extraVolumes: []
  ## @param notifier.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the notifier container(s)
  ##
  extraVolumeMounts: []
  ## @param notifier.sidecars Add additional sidecar containers to the notifier pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param notifier.initContainers Add additional init containers to the notifier pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section notifier Service Parameters
  ##
  ##
  service:
    ## @param notifier.service.type notifier service type
    ##
    type: ClusterIP
    ## @param notifier.service.ports.http notifier service HTTP port
    ## @param notifier.service.ports.internal notifier service internal port
    ##
    ports:
      http: 80
      internal: 5561
    ## Ports to expose
    ## @param notifier.service.nodePorts.http Port for HTTP
    ## @param notifier.service.nodePorts.internal Port for internal connections
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
      internal: ""
    ## @param notifier.service.clusterIP notifier service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param notifier.service.loadBalancerIP notifier service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param notifier.service.labelSelectorsOverride Selector for notifier service
    ##
    labelSelectorsOverride: {}
    ## @param notifier.service.loadBalancerSourceRanges notifier service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param notifier.service.externalTrafficPolicy notifier service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param notifier.service.annotations Additional custom annotations for notifier service
    ##
    annotations: {}
    ## @param notifier.service.extraPorts Extra ports to expose in notifier service (normally used with the `sidecars` value)
    ##
    extraPorts: []
  ## @section notifier ServiceAccount configuration
  ##
  serviceAccount:
    ## @param notifier.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param notifier.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param notifier.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section cdnInvalidatorSub Deployment Parameters
##
cdnInvalidatorSub:
  ## cdnInvalidatorSub image
  ## @param cdnInvalidatorSub.image.registry cdn-invalidator-sub image registry
  ## @param cdnInvalidatorSub.image.repository cdn-invalidator-sub image repository
  ## @param cdnInvalidatorSub.image.tag cdn-invalidator-sub image tag (immutable tags are recommended)
  ## @param cdnInvalidatorSub.image.pullPolicy cdn-invalidator-sub image pull policy
  ## @param cdnInvalidatorSub.image.pullSecrets cdn-invalidator-sub image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: consumers/cdn-invalidator-sub
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param cdnInvalidatorSub.replicaCount Number of cdnInvalidatorSub replicas to deploy
  ##
  replicaCount: 1
  ## @param cdnInvalidatorSub.containerPorts.http cdnInvalidatorSub HTTP container port
  ##
  containerPorts:
    http: 3000
  ## @param cdnInvalidatorSub.nodeProcessMaxOldSpacePercentage Memory percentage for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  nodeProcessMaxOldSpacePercentage: 75
  ## @param cdnInvalidatorSub.defaultNodeProcessMaxOldSpace Default memory for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  defaultNodeProcessMaxOldSpace: 768
  ## Configure extra options for cdnInvalidatorSub containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param cdnInvalidatorSub.livenessProbe.enabled Enable livenessProbe on cdnInvalidatorSub containers
  ## @param cdnInvalidatorSub.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param cdnInvalidatorSub.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param cdnInvalidatorSub.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param cdnInvalidatorSub.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param cdnInvalidatorSub.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param cdnInvalidatorSub.readinessProbe.enabled Enable readinessProbe on cdnInvalidatorSub containers
  ## @param cdnInvalidatorSub.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param cdnInvalidatorSub.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param cdnInvalidatorSub.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param cdnInvalidatorSub.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param cdnInvalidatorSub.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param cdnInvalidatorSub.startupProbe.enabled Enable startupProbe on cdnInvalidatorSub containers
  ## @param cdnInvalidatorSub.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param cdnInvalidatorSub.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param cdnInvalidatorSub.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param cdnInvalidatorSub.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param cdnInvalidatorSub.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param cdnInvalidatorSub.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param cdnInvalidatorSub.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param cdnInvalidatorSub.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## cdnInvalidatorSub resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param cdnInvalidatorSub.resources.limits.memory Container memory limits in MiB
  ## @param cdnInvalidatorSub.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param cdnInvalidatorSub.resources.requests.memory Container memory requests in MiB
  ## @param cdnInvalidatorSub.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "1024Mi"
      cpu: "500m"
    requests:
      memory: "372Mi"
      cpu: "200m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param cdnInvalidatorSub.podSecurityContext.enabled Enabled cdnInvalidatorSub pods' Security Context
  ## @param cdnInvalidatorSub.podSecurityContext.fsGroup Set cdnInvalidatorSub pod's Security Context fsGroup
  ## @param cdnInvalidatorSub.podSecurityContext.supplementalGroups[0] Set cdnInvalidatorSub pod's Security Context supplementalGroups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    supplementalGroups: [2345]
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param cdnInvalidatorSub.containerSecurityContext.enabled Enabled cdnInvalidatorSub containers' Security Context
  ## @param cdnInvalidatorSub.containerSecurityContext.runAsUser Set cdnInvalidatorSub containers' Security Context runAsUser
  ## @param cdnInvalidatorSub.containerSecurityContext.runAsGroup Set cdnInvalidatorSub containers' Security Context runAsGroup
  ## @param cdnInvalidatorSub.containerSecurityContext.runAsNonRoot Set cdnInvalidatorSub containers' Security Context runAsNonRoot
  ## @param cdnInvalidatorSub.containerSecurityContext.allowPrivilegeEscalation Set cdnInvalidatorSub containers' Security Context allowPrivilegeEscalation
  ## @param cdnInvalidatorSub.containerSecurityContext.readOnlyRootFilesystem Set cdnInvalidatorSub containers' Security Context readOnlyRootFilesystem
  ## @param cdnInvalidatorSub.containerSecurityContext.capabilities.drop removes cdnInvalidatorSub containers' Security Context capabilities
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  ## @param cdnInvalidatorSub.podDisruptionBudget.enabled defines disruption budget for cdn-invalidator-sub
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
  ## @param cdnInvalidatorSub.terminationGracePeriodSeconds Time to wait before force killing the container
  ##
  terminationGracePeriodSeconds: 300
  ## @param cdnInvalidatorSub.existingConfigMap The name of an existing ConfigMap with your custom configuration for cdnInvalidatorSub
  ##
  existingConfigMap: ""
  ## @param cdnInvalidatorSub.existingSecret The name of an existing ConfigMap with your custom configuration for cdnInvalidatorSub
  ##
  existingSecret: ""
  ## @param cdnInvalidatorSub.command Override default container command (useful when using custom images)
  ##
  command: ["/bin/bash"]
  ## @param cdnInvalidatorSub.args Override default container args (useful when using custom images)
  ##
  args: ["-c", "node -r /usr/src/app/cdn-invalidator-sub/tsconfig-paths-bootstrap.js /usr/src/app/cdn-invalidator-sub/dist/app/cdn-invalidator-sub/index.js"]
  ## @param cdnInvalidatorSub.hostAliases cdnInvalidatorSub pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param cdnInvalidatorSub.podLabels Extra labels for cdnInvalidatorSub pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param cdnInvalidatorSub.podAnnotations Annotations for cdnInvalidatorSub pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param cdnInvalidatorSub.podAffinityPreset Pod affinity preset. Ignored if `cdnInvalidatorSub.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param cdnInvalidatorSub.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `cdnInvalidatorSub.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node.js cdnInvalidatorSub.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param cdnInvalidatorSub.nodeAffinityPreset.type Node.js affinity preset type. Ignored if `cdnInvalidatorSub.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param cdnInvalidatorSub.nodeAffinityPreset.key Node.js label key to match. Ignored if `cdnInvalidatorSub.affinity` is set
    ##
    key: ""
    ## @param cdnInvalidatorSub.nodeAffinityPreset.values Node.js label values to match. Ignored if `cdnInvalidatorSub.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param cdnInvalidatorSub.affinity Affinity for cdnInvalidatorSub pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `cdnInvalidatorSub.podAffinityPreset`, `cdnInvalidatorSub.podAntiAffinityPreset`, and `cdnInvalidatorSub.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param cdnInvalidatorSub.nodeSelector Node.js labels for cdnInvalidatorSub pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param cdnInvalidatorSub.tolerations Tolerations for cdnInvalidatorSub pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param cdnInvalidatorSub.updateStrategy.type cdnInvalidatorSub statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param cdnInvalidatorSub.priorityClassName cdnInvalidatorSub pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param cdnInvalidatorSub.schedulerName Name of the k8s scheduler (other than default) for cdnInvalidatorSub pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param cdnInvalidatorSub.lifecycleHooks for the cdnInvalidatorSub container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param cdnInvalidatorSub.extraEnvVars Array with extra environment variables to add to cdnInvalidatorSub nodes ([More info](#additional-environment-variables))
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param cdnInvalidatorSub.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for cdnInvalidatorSub nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsCM: ""
  ## @param cdnInvalidatorSub.extraEnvVarsSecret Name of existing Secret containing extra env vars for cdnInvalidatorSub nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsSecret: ""
  ## @param cdnInvalidatorSub.extraVolumes Optionally specify extra list of additional volumes for the cdnInvalidatorSub pod(s)
  ##
  extraVolumes: []
  ## @param cdnInvalidatorSub.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the cdnInvalidatorSub container(s)
  ##
  extraVolumeMounts: []
  ## @param cdnInvalidatorSub.sidecars Add additional sidecar containers to the cdnInvalidatorSub pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param cdnInvalidatorSub.initContainers Add additional init containers to the cdnInvalidatorSub pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section cdnInvalidatorSub Service Parameters
  ##
  ##
  service:
    ## @param cdnInvalidatorSub.service.type cdnInvalidatorSub service type
    ##
    type: ClusterIP
    ## @param cdnInvalidatorSub.service.ports.http cdnInvalidatorSub service HTTP port
    ##
    ports:
      http: 80
    ## Node.js ports to expose
    ## @param cdnInvalidatorSub.service.nodePorts.http Node.js port for HTTP
    ## @param cdnInvalidatorSub.service.nodePorts.https Node.js port for HTTPS
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
      https: ""
    ## @param cdnInvalidatorSub.service.clusterIP cdnInvalidatorSub service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param cdnInvalidatorSub.service.loadBalancerIP cdnInvalidatorSub service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param cdnInvalidatorSub.service.labelSelectorsOverride Selector for cdnInvalidatorSub service
    ##
    labelSelectorsOverride: {}
    ## @param cdnInvalidatorSub.service.loadBalancerSourceRanges cdnInvalidatorSub service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param cdnInvalidatorSub.service.externalTrafficPolicy cdnInvalidatorSub service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param cdnInvalidatorSub.service.annotations Additional custom annotations for cdnInvalidatorSub service
    ##
    annotations: {}
    ## @param cdnInvalidatorSub.service.extraPorts Extra ports to expose in cdnInvalidatorSub service (normally used with the `sidecars` value)
    ##
    extraPorts: []

## @section workspace-api Deployment Parameters
##
workspaceApi:
  ## workspace-api image
  ## @param workspaceApi.image.registry workspace-api image registry
  ## @param workspaceApi.image.repository workspace-api image repository
  ## @param workspaceApi.image.tag workspace-api image tag (immutable tags are recommended)
  ## @param workspaceApi.image.pullPolicy workspace-api image pull policy
  ## @param workspaceApi.image.pullSecrets workspace-api image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: workspace-api
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param workspaceApi.replicaCount Number of workspace-api replicas to deploy
  ##
  replicaCount: 2
  ## @param workspaceApi.containerPorts.http workspace-api HTTP container port
  ##
  containerPorts:
    http: 8001
  ## @param workspaceApi.nodeProcessMaxOldSpacePercentage Memory percentage for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  nodeProcessMaxOldSpacePercentage: 75
  ## @param workspaceApi.defaultNodeProcessMaxOldSpace Default memory for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  defaultNodeProcessMaxOldSpace: 1020
  ## Configure extra options for workspace-api containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param workspaceApi.livenessProbe.enabled Enable livenessProbe on workspace-api containers
  ## @param workspaceApi.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param workspaceApi.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param workspaceApi.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param workspaceApi.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param workspaceApi.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param workspaceApi.readinessProbe.enabled Enable readinessProbe on workspace-api containers
  ## @param workspaceApi.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param workspaceApi.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param workspaceApi.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param workspaceApi.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param workspaceApi.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param workspaceApi.startupProbe.enabled Enable startupProbe on workspace-api containers
  ## @param workspaceApi.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param workspaceApi.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param workspaceApi.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param workspaceApi.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param workspaceApi.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param workspaceApi.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param workspaceApi.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param workspaceApi.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## workspace-api autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param workspaceApi.autoscaling.enabled Enable autoscaling for the workspace-api containers
  ## @param workspaceApi.autoscaling.minReplicas The minimal number of containers for the workspace-api deployment
  ## @param workspaceApi.autoscaling.maxReplicas The maximum number of containers for the workspace-api deployment
  ## @param workspaceApi.autoscaling.targetCPUUtilizationPercentage The CPU utilization percentage used for scale up containers in workspace-api deployment
  ##
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75
  ## workspace-api resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param workspaceApi.resources.limits.memory Container memory limits in MiB
  ## @param workspaceApi.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param workspaceApi.resources.requests.memory Container memory requests in MiB
  ## @param workspaceApi.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "1360Mi"
      cpu: "1000m"
    requests:
      memory: "768Mi"
      cpu: "350m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param workspaceApi.podSecurityContext.enabled Enabled workspace-api pods' Security Context
  ## @param workspaceApi.podSecurityContext.fsGroup Set workspace-api pod's Security Context fsGroup
  ## @param workspaceApi.podSecurityContext.supplementalGroups[0] Set workspace-api pod's Security Context supplementalGroups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    supplementalGroups: [2345]
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param workspaceApi.containerSecurityContext.enabled Enabled workspace-api containers' Security Context
  ## @param workspaceApi.containerSecurityContext.runAsUser Set workspace-api containers' Security Context runAsUser
  ## @param workspaceApi.containerSecurityContext.runAsGroup Set workspace-api containers' Security Context runAsGroup
  ## @param workspaceApi.containerSecurityContext.runAsNonRoot Set workspace-api containers' Security Context runAsNonRoot
  ## @param workspaceApi.containerSecurityContext.allowPrivilegeEscalation Set workspace-api containers' Security Context allowPrivilegeEscalation
  ## @param workspaceApi.containerSecurityContext.readOnlyRootFilesystem Set workspace-api containers' Security Context readOnlyRootFilesystem
  ## @param workspaceApi.containerSecurityContext.capabilities.drop removes workspace-api containers' Security Context capabilities
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  ## @param workspaceApi.podDisruptionBudget.enabled defines disruption budget for workspace-api
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
  ## @param workspaceApi.terminationGracePeriodSeconds Time to wait before force killing the container
  ##
  terminationGracePeriodSeconds: 300
  ## @param workspaceApi.existingConfigMap The name of an existing ConfigMap with your custom configuration for workspace-api
  ##
  existingConfigMap: ""
  ## @param workspaceApi.existingSecret The name of an existing ConfigMap with your custom configuration for workspace-api
  ##
  existingSecret: ""
  ## @param workspaceApi.command Override default container command (useful when using custom images)
  ##
  command: ["/bin/bash"]

  ## @param workspaceApi.args Override default container args (useful when using custom images)
  ##
  args: ["-c", "npm run ready-to-run:built && exec node -r /usr/src/app/tsconfig-paths-bootstrap.js /usr/src/app/dist/app/index.js"]
  ## @param workspaceApi.hostAliases workspace-api pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param workspaceApi.podLabels Extra labels for workspace-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param workspaceApi.podAnnotations Annotations for workspace-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param workspaceApi.podAffinityPreset Pod affinity preset. Ignored if `workspaceApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param workspaceApi.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `workspaceApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node.js workspaceApi.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param workspaceApi.nodeAffinityPreset.type Node.js affinity preset type. Ignored if `workspaceApi.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param workspaceApi.nodeAffinityPreset.key Node.js label key to match. Ignored if `workspaceApi.affinity` is set
    ##
    key: ""
    ## @param workspaceApi.nodeAffinityPreset.values Node.js label values to match. Ignored if `workspaceApi.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param workspaceApi.affinity Affinity for workspace-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `workspaceApi.podAffinityPreset`, `workspaceApi.podAntiAffinityPreset`, and `workspaceApi.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param workspaceApi.nodeSelector Node.js labels for workspace-api pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param workspaceApi.tolerations Tolerations for workspace-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param workspaceApi.updateStrategy.type workspace-api statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param workspaceApi.priorityClassName workspace-api pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param workspaceApi.schedulerName Name of the k8s scheduler (other than default) for workspace-api pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param workspaceApi.lifecycleHooks for the workspace-api container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param workspaceApi.extraEnvVars Array with extra environment variables to add to workspace-api nodes ([More info](#additional-environment-variables))
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param workspaceApi.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for workspace-api nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsCM: ""
  ## @param workspaceApi.extraEnvVarsSecret Name of existing Secret containing extra env vars for workspace-api nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsSecret: ""
  ## @param workspaceApi.extraVolumes Optionally specify extra list of additional volumes for the workspace-api pod(s)
  ##
  extraVolumes: []
  ## @param workspaceApi.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the workspace-api container(s)
  ##
  extraVolumeMounts: []
  ## @param workspaceApi.sidecars Add additional sidecar containers to the workspace-api pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param workspaceApi.initContainers Add additional init containers to the workspace-api pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section workspace-api Service Parameters
  ##
  ##
  service:
    ## @param workspaceApi.service.type workspace-api service type
    ##
    type: ClusterIP
    ## @param workspaceApi.service.ports.http workspace-api service HTTP port
    ##
    ports:
      http: 80
    ## Node.js ports to expose
    ## @param workspaceApi.service.nodePorts.http Node.js port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param workspaceApi.service.clusterIP workspace-api service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param workspaceApi.service.loadBalancerIP workspace-api service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param workspaceApi.service.labelSelectorsOverride Selector for workspace-api service
    ##
    labelSelectorsOverride: {}
    ## @param workspaceApi.service.loadBalancerSourceRanges workspace-api service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param workspaceApi.service.externalTrafficPolicy workspace-api service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param workspaceApi.service.annotations Additional custom annotations for workspace-api service
    ##
    annotations: {}
    ## @param workspaceApi.service.extraPorts Extra ports to expose in workspace-api service (normally used with the `sidecars` value)
    ##
    extraPorts: []

## @section workspace-subscriber Deployment Parameters
##
workspaceSubscriber:
  ## workspace-subscriber image
  ## @param workspaceSubscriber.image.registry workspace-subscriber image registry
  ## @param workspaceSubscriber.image.repository workspace-subscriber image repository
  ## @param workspaceSubscriber.image.tag workspace-subscriber image tag (immutable tags are recommended)
  ## @param workspaceSubscriber.image.pullPolicy workspace-subscriber image pull policy
  ## @param workspaceSubscriber.image.pullSecrets workspace-subscriber image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: workspace-api
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param workspaceSubscriber.replicaCount Number of workspace-subscriber replicas to deploy
  ##
  replicaCount: 1
  ## @param workspaceSubscriber.nodeProcessMaxOldSpacePercentage Memory percentage for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  nodeProcessMaxOldSpacePercentage: 75
  ## @param workspaceSubscriber.defaultNodeProcessMaxOldSpace Default memory for node process max-old-space-size param https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes
  ##
  defaultNodeProcessMaxOldSpace: 768
  ## @param workspaceSubscriber.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param workspaceSubscriber.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param workspaceSubscriber.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## workspace-subscriber resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param workspaceSubscriber.resources.limits.memory Container memory limits in MiB
  ## @param workspaceSubscriber.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param workspaceSubscriber.resources.requests.memory Container memory requests in MiB
  ## @param workspaceSubscriber.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "1024Mi"
      cpu: "500m"
    requests:
      memory: "372Mi"
      cpu: "200m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param workspaceSubscriber.podSecurityContext.enabled Enabled workspace-subscriber pods' Security Context
  ## @param workspaceSubscriber.podSecurityContext.fsGroup Set workspace-subscriber pod's Security Context fsGroup
  ## @param workspaceSubscriber.podSecurityContext.supplementalGroups[0] workspace-subscriber pod's Security Context supplementalGroups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    supplementalGroups: [2345]
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param workspaceSubscriber.containerSecurityContext.enabled Enabled workspace-subscriber containers' Security Context
  ## @param workspaceSubscriber.containerSecurityContext.runAsUser Set workspace-subscriber containers' Security Context runAsUser
  ## @param workspaceSubscriber.containerSecurityContext.runAsGroup Set workspace-subscriber containers' Security Context runAsGroup
  ## @param workspaceSubscriber.containerSecurityContext.runAsNonRoot Set workspace-subscriber containers' Security Context runAsNonRoot
  ## @param workspaceSubscriber.containerSecurityContext.allowPrivilegeEscalation Set workspace-subscriber containers' Security Context allowPrivilegeEscalation
  ## @param workspaceSubscriber.containerSecurityContext.readOnlyRootFilesystem Set workspace-subscriber containers' Security Context readOnlyRootFilesystem
  ## @param workspaceSubscriber.containerSecurityContext.capabilities.drop removes workspace-subscriber containers' Security Context capabilities
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  ## @param workspaceSubscriber.podDisruptionBudget.enabled defines disruption budget for workspace-subscriber
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
  ## @param workspaceSubscriber.terminationGracePeriodSeconds Time to wait before force killing the container
  ##
  terminationGracePeriodSeconds: 300
  ## @param workspaceSubscriber.existingConfigMap The name of an existing ConfigMap with your custom configuration for workspace-subscriber
  ##
  existingConfigMap: ""
  ## @param workspaceSubscriber.existingSecret The name of an existing ConfigMap with your custom configuration for workspace-subscriber
  ##
  existingSecret: ""
  ## @param workspaceSubscriber.command Override default container command (useful when using custom images)
  ##
  command: ["/bin/bash"]
  ## @param workspaceSubscriber.args Override default container args (useful when using custom images)
  ##
  args: ["-c", "npm run ready-to-run:built && exec node -r /usr/src/app/tsconfig-paths-bootstrap.js /usr/src/app/dist/app/subscriber/index.js"]
  ## @param workspaceSubscriber.hostAliases workspace-subscriber pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param workspaceSubscriber.podLabels Extra labels for workspace-subscriber pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param workspaceSubscriber.podAnnotations Annotations for workspace-subscriber pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param workspaceSubscriber.podAffinityPreset Pod affinity preset. Ignored if `workspaceSubscriber.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param workspaceSubscriber.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `workspaceSubscriber.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node.js workspaceSubscriber.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param workspaceSubscriber.nodeAffinityPreset.type Node.js affinity preset type. Ignored if `workspaceSubscriber.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param workspaceSubscriber.nodeAffinityPreset.key Node.js label key to match. Ignored if `workspaceSubscriber.affinity` is set
    ##
    key: ""
    ## @param workspaceSubscriber.nodeAffinityPreset.values Node.js label values to match. Ignored if `workspaceSubscriber.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param workspaceSubscriber.affinity Affinity for workspace-subscriber pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `workspaceSubscriber.podAffinityPreset`, `workspaceSubscriber.podAntiAffinityPreset`, and `workspaceSubscriber.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param workspaceSubscriber.nodeSelector Node.js labels for workspace-subscriber pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param workspaceSubscriber.tolerations Tolerations for workspace-subscriber pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param workspaceSubscriber.updateStrategy.type workspace-subscriber statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param workspaceSubscriber.priorityClassName workspace-subscriber pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param workspaceSubscriber.schedulerName Name of the k8s scheduler (other than default) for workspace-subscriber pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param workspaceSubscriber.lifecycleHooks for the workspace-subscriber container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param workspaceSubscriber.extraEnvVars Array with extra environment variables to add to workspace-subscriber nodes ([More info](#additional-environment-variables))
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param workspaceSubscriber.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for workspace-subscriber nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsCM: ""
  ## @param workspaceSubscriber.extraEnvVarsSecret Name of existing Secret containing extra env vars for workspace-subscriber nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsSecret: ""
  ## @param workspaceSubscriber.extraVolumes Optionally specify extra list of additional volumes for the workspace-subscriber pod(s)
  ##
  extraVolumes: []
  ## @param workspaceSubscriber.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the workspace-subscriber container(s)
  ##
  extraVolumeMounts: []
  ## @param workspaceSubscriber.sidecars Add additional sidecar containers to the workspace-subscriber pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param workspaceSubscriber.initContainers Add additional init containers to the workspace-subscriber pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}

## @section workspace-www Deployment Parameters
##
workspaceWww:
  ## workspace-www image
  ## @param workspaceWww.image.registry workspace-www image registry
  ## @param workspaceWww.image.repository workspace-www image repository
  ## @param workspaceWww.image.tag workspace-www image tag (immutable tags are recommended)
  ## @param workspaceWww.image.pullPolicy workspace-www image pull policy
  ## @param workspaceWww.image.pullSecrets workspace-www image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: workspace-www
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param workspaceWww.replicaCount Number of workspace-www replicas to deploy
  ##
  replicaCount: 1
  ## @param workspaceWww.containerPorts.http workspace-www HTTP container port
  ##
  containerPorts:
    http: 8080
  ## Configure extra options for workspace-www containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param workspaceWww.livenessProbe.enabled Enable livenessProbe on workspace-www containers
  ## @param workspaceWww.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param workspaceWww.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param workspaceWww.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param workspaceWww.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param workspaceWww.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param workspaceWww.readinessProbe.enabled Enable readinessProbe on workspace-www containers
  ## @param workspaceWww.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param workspaceWww.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param workspaceWww.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param workspaceWww.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param workspaceWww.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param workspaceWww.startupProbe.enabled Enable startupProbe on workspace-www containers
  ## @param workspaceWww.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param workspaceWww.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param workspaceWww.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param workspaceWww.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param workspaceWww.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param workspaceWww.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param workspaceWww.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param workspaceWww.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## workspace-www autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param workspaceWww.autoscaling.enabled Enable autoscaling for the workspace-www containers
  ## @param workspaceWww.autoscaling.minReplicas The minimal number of containers for the workspace-www deployment
  ## @param workspaceWww.autoscaling.maxReplicas The maximum number of containers for the workspace-www deployment
  ## @param workspaceWww.autoscaling.targetCPUUtilizationPercentage The CPU utilization percentage used for scale up containers in workspace-www deployment
  ##
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 75
  ## workspace-www resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param workspaceWww.resources.limits.memory Container memory limits in MiB
  ## @param workspaceWww.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param workspaceWww.resources.requests.memory Container memory requests in MiB
  ## @param workspaceWww.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "1024Mi"
      cpu: "500m"
    requests:
      memory: "768Mi"
      cpu: "200m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param workspaceWww.podSecurityContext.enabled Enabled workspace-www pods' Security Context
  ## @param workspaceWww.podSecurityContext.fsGroup Set workspace-www pod's Security Context fsGroup
  ## @param workspaceWww.podSecurityContext.supplementalGroups[0] Set workspace-www pod's Security Context supplementalGroups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 101
    supplementalGroups: [2345]
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param workspaceWww.containerSecurityContext.enabled Enabled workspace-www containers' Security Context
  ## @param workspaceWww.containerSecurityContext.runAsUser Set workspace-www containers' Security Context runAsUser
  ## @param workspaceWww.containerSecurityContext.runAsGroup Set workspace-www containers' Security Context runAsGroup
  ## @param workspaceWww.containerSecurityContext.runAsNonRoot Set workspace-www containers' Security Context runAsNonRoot
  ## @param workspaceWww.containerSecurityContext.allowPrivilegeEscalation Set workspace-www containers' Security Context allowPrivilegeEscalation
  ## @param workspaceWww.containerSecurityContext.readOnlyRootFilesystem Set workspace-www containers' Security Context readOnlyRootFilesystem
  ## @param workspaceWww.containerSecurityContext.capabilities.drop removes workspace-www containers' Security Context capabilities
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 101
    runAsGroup: 101
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  ## @param workspaceWww.podDisruptionBudget.enabled defines disruption budget for workspace-www
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
  ## @param workspaceWww.terminationGracePeriodSeconds Time to wait before force killing the container
  ##
  terminationGracePeriodSeconds: 60
  ## @param workspaceWww.existingConfigMap The name of an existing ConfigMap with your custom configuration for workspace-www
  ##
  existingConfigMap: ""
  ## @param workspaceWww.existingSecret The name of an existing ConfigMap with your custom configuration for workspace-www
  ##
  existingSecret: ""
  ## @param workspaceWww.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param workspaceWww.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param workspaceWww.hostAliases workspace-www pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param workspaceWww.podLabels Extra labels for workspace-www pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param workspaceWww.podAnnotations Annotations for workspace-www pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param workspaceWww.podAffinityPreset Pod affinity preset. Ignored if `workspaceWww.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param workspaceWww.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `workspaceWww.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node.js workspaceWww.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param workspaceWww.nodeAffinityPreset.type Node.js affinity preset type. Ignored if `workspaceWww.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param workspaceWww.nodeAffinityPreset.key Node.js label key to match. Ignored if `workspaceWww.affinity` is set
    ##
    key: ""
    ## @param workspaceWww.nodeAffinityPreset.values Node.js label values to match. Ignored if `workspaceWww.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param workspaceWww.affinity Affinity for workspace-www pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `workspaceWww.podAffinityPreset`, `workspaceWww.podAntiAffinityPreset`, and `workspaceWww.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param workspaceWww.nodeSelector Node.js labels for workspace-www pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param workspaceWww.tolerations Tolerations for workspace-www pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param workspaceWww.updateStrategy.type workspace-www statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param workspaceWww.priorityClassName workspace-www pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param workspaceWww.schedulerName Name of the k8s scheduler (other than default) for workspace-www pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param workspaceWww.lifecycleHooks for the workspace-www container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param workspaceWww.extraEnvVars Array with extra environment variables to add to workspace-www nodes ([More info](#additional-environment-variables))
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param workspaceWww.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for workspace-www nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsCM: ""
  ## @param workspaceWww.extraEnvVarsSecret Name of existing Secret containing extra env vars for workspace-www nodes ([More info](#additional-environment-variables))
  ##
  extraEnvVarsSecret: ""
  ## @param workspaceWww.extraVolumes Optionally specify extra list of additional volumes for the workspace-www pod(s)
  ##
  extraVolumes: []
  ## @param workspaceWww.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the workspace-www container(s)
  ##
  extraVolumeMounts: []
  ## @param workspaceWww.sidecars Add additional sidecar containers to the workspace-www pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param workspaceWww.initContainers Add additional init containers to the workspace-www pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section workspace-www Service Parameters
  ##
  ##
  service:
    ## @param workspaceWww.service.type workspace-www service type
    ##
    type: ClusterIP
    ## @param workspaceWww.service.ports.http workspace-www service HTTP port
    ##
    ports:
      http: 80
    ## Node.js ports to expose
    ## @param workspaceWww.service.nodePorts.http Node.js port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param workspaceWww.service.clusterIP workspace-www service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param workspaceWww.service.loadBalancerIP workspace-www service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param workspaceWww.service.labelSelectorsOverride Selector for workspace-www service
    ##
    labelSelectorsOverride: {}
    ## @param workspaceWww.service.loadBalancerSourceRanges workspace-www service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param workspaceWww.service.externalTrafficPolicy workspace-www service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param workspaceWww.service.annotations Additional custom annotations for workspace-www service
    ##
    annotations: {}
    ## @param workspaceWww.service.extraPorts Extra ports to expose in workspace-www service (normally used with the `sidecars` value)
    ##
    extraPorts: []
  ## @section workspace-www ServiceAccount configuration
  ##
  serviceAccount:
    ## @param workspaceWww.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param workspaceWww.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param workspaceWww.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section Init Container Parameters
##
workspaceMigrations:
  ## workspace-db image
  ## @param workspaceMigrations.image.registry workspace-db image registry
  ## @param workspaceMigrations.image.repository workspace-db image repository
  ## @param workspaceMigrations.image.tag workspace-db image tag (immutable tags are recommended)
  ## @param workspaceMigrations.image.pullPolicy workspace-db image pull policy
  ## @param workspaceMigrations.image.pullSecrets workspace-db image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: workspace-db
    ## Specify a custom image tag
    tag: ""
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param workspaceMigrations.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param workspaceMigrations.args Override default container args (useful when using custom images)
  ##
  args: []
  ## Init container's resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param workspaceMigrations.resources.limits.memory Container memory limits in MiB
  ## @param workspaceMigrations.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param workspaceMigrations.resources.requests.memory Container memory requests in MiB
  ## @param workspaceMigrations.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "2048Mi"
      cpu: "1"
    requests:
      memory: "512Mi"
      cpu: "250m"
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param workspaceMigrations.containerSecurityContext.enabled Enable container security context
  ## @param workspaceMigrations.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
  ## @param workspaceMigrations.containerSecurityContext.runAsGroup Set init container's Security Context runAsGroup
  ## @param workspaceMigrations.containerSecurityContext.runAsNonRoot Force the init container to run as non root
  ## @param workspaceMigrations.containerSecurityContext.allowPrivilegeEscalation Set init container's Security Context allowPrivilegeEscalation
  ## @param workspaceMigrations.containerSecurityContext.readOnlyRootFilesystem Set init containers' Security Context readOnlyRootFilesystem
  ## @param workspaceMigrations.containerSecurityContext.capabilities.drop removes workspace-migrations containers' Security Context capabilities
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all

## @section tenant-requirements-checker Deployment Parameters
##
tenantRequirementsChecker:
  ## tenant-requirements-checker image
  ## @param tenantRequirementsChecker.image.registry tenant-requirements-checker image registry
  ## @param tenantRequirementsChecker.image.repository tenant-requirements-checker image repository
  ## @param tenantRequirementsChecker.image.tag tenant-requirements-checker image tag (immutable tags are recommended)
  ## @param tenantRequirementsChecker.image.pullPolicy tenant-requirements-checker image pull policy
  ## @param tenantRequirementsChecker.image.pullSecrets tenant-requirements-checker image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: tenant-requirements-checker
    tag: ""
    pullPolicy: Always
    pullSecrets: []

  ## Init container's resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param tenantRequirementsChecker.resources.limits.memory Container memory limits in MiB
  ## @param tenantRequirementsChecker.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param tenantRequirementsChecker.resources.requests.memory Container memory requests in MiB
  ## @param tenantRequirementsChecker.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "512Mi"
      cpu: "500m"
    requests:
      memory: "128Mi"
      cpu: "250m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param tenantRequirementsChecker.podSecurityContext.enabled Enabled Upgrade Check pre-hook pods' Security Context
  ## @param tenantRequirementsChecker.podSecurityContext.fsGroup Set Upgrade Check pre-hook pod's Security Context fsGroup
  ## @param tenantRequirementsChecker.podSecurityContext.supplementalGroups[0] Set Upgrade Check pre-hook pod's Security Context supplementalGroups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 101
    supplementalGroups: [2345]
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param tenantRequirementsChecker.containerSecurityContext.enabled Enable tenant-requirements-checker container security context
  ## @param tenantRequirementsChecker.containerSecurityContext.runAsUser Set init tenant-requirements-checker container's Security Context runAsUser
  ## @param tenantRequirementsChecker.containerSecurityContext.runAsGroup Set init tenant-requirements-checker container's Security Context runAsGroup
  ## @param tenantRequirementsChecker.containerSecurityContext.runAsNonRoot Force the init tenant-requirements-checker container to run as non root
  ## @param tenantRequirementsChecker.containerSecurityContext.allowPrivilegeEscalation Set init tenant-requirements-checker container's Security Context allowPrivilegeEscalation
  ## @param tenantRequirementsChecker.containerSecurityContext.readOnlyRootFilesystem Set init tenant-requirements-checker containers' Security Context readOnlyRootFilesystem
  ## @param tenantRequirementsChecker.containerSecurityContext.capabilities.drop removes tenant-requirements-checker containers' Security Context capabilities
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all

## @section Internal Redis&trade; subchart parameters
## Internal Redis &trade; chart configuration
## ref: https://github.com/bitnami/charts/blob/master/bitnami/redis/values.yaml
## @param internalRedis.enabled Switch to enable or disable the Redis&trade; helm
## @param internalRedis.image.tag Image tag used by Redis&trade; helm
## @param internalRedis.tlsEnabled Whether or not connect to Redis via TLS
## @param internalRedis.auth.enabled Switch to enable or disable authentication
## @param internalRedis.auth.password Redis&trade; password
## @param internalRedis.auth.existingSecret Name of existing secret object containing the password
## @param internalRedis.architecture Cluster settings
## @param internalRedis.master.persistence.enabled Enable master persistent volumes
## @param internalRedis.replica.persistence.enabled Enable replica persistent volumes
##
internalRedis:
  enabled: true
  image:
    tag: 6.2.14-debian-12-r23
  tlsEnabled: false
  ## @param internalRedis.nameOverride String to partially override common.names.fullname template (will maintain the release name)
  ##
  nameOverride: "redis"
  auth:
    enabled: true
    ## Redis&trade; password (both master and slave). Defaults to a random 10-character alphanumeric string if not set and auth.enabled is true.
    ## It should always be set using the password value or in the existingSecret to avoid issues
    ## with CARTO.
    ## The password value is ignored if existingSecret is set
    ##
    password: ""
    existingSecret: ""
  architecture: standalone
  master:
    persistence:
      enabled: false
    ## Redis resource limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ## @param internalRedis.master.resources.requests.memory Container memory requests in MiB
    ## @param internalRedis.master.resources.requests.cpu Container cpu requests in milliCPU cores
    ## @param internalRedis.master.resources.limits.memory Container memory limits in MiB
    ## @param internalRedis.master.resources.limits.cpu Container cpu limits in milliCPU cores
    ##
    resources:
      requests:
        memory: "512Mi"
        cpu: "200m"
      limits:
        memory: "512Mi"
        cpu: "200m"
    ## Configure Pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param internalRedis.master.podSecurityContext.fsGroup Set accounts-www pod's Security Context fsGroup
    ## @param internalRedis.master.podSecurityContext.supplementalGroups[0] Set accounts-www pod's Security Context supplementalGroups
    ##
    podSecurityContext:
      fsGroup: 1000
      supplementalGroups: [2345]
    ## Configure Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param internalRedis.master.containerSecurityContext.runAsUser Set Redis containers' Security Context runAsUser
    ## @param internalRedis.master.containerSecurityContext.runAsGroup Set Redis containers' Security Context runAsGroup
    ## @param internalRedis.master.containerSecurityContext.runAsNonRoot Set Redis containers' Security Context runAsNonRoot
    ## @param internalRedis.master.containerSecurityContext.allowPrivilegeEscalation Set Redis containers' Security Context allowPrivilegeEscalation
    ## @param internalRedis.master.containerSecurityContext.readOnlyRootFilesystem Set Redis containers' Security Context readOnlyRootFilesystem
    ## @param internalRedis.master.containerSecurityContext.capabilities.drop removes Redis containers' Security Context capabilities
    ##
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - all
  replica:
    persistence:
      enabled: false
    ## Redis resource limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ## @param internalRedis.replica.resources.requests.memory Container memory requests in MiB
    ## @param internalRedis.replica.resources.requests.cpu Container cpu requests in milliCPU cores
    ## @param internalRedis.replica.resources.limits.memory Container memory limits in MiB
    ## @param internalRedis.replica.resources.limits.cpu Container cpu limits in milliCPU cores
    ##
    resources:
      requests:
        memory: "512Mi"
        cpu: "200m"
      limits:
        memory: "512Mi"
        cpu: "200m"
    ## Configure Pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param internalRedis.replica.podSecurityContext.fsGroup Set accounts-www pod's Security Context fsGroup
    ## @param internalRedis.replica.podSecurityContext.supplementalGroups[0] Set accounts-www pod's Security Context supplementalGroups
    ##
    podSecurityContext:
      fsGroup: 1000
      supplementalGroups: [2345]
    ## Configure Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param internalRedis.replica.containerSecurityContext.runAsUser Set Redis replica containers' Security Context runAsUser
    ## @param internalRedis.replica.containerSecurityContext.runAsGroup Set Redis replica containers' Security Context runAsGroup
    ## @param internalRedis.replica.containerSecurityContext.runAsNonRoot Set Redis replica containers' Security Context runAsNonRoot
    ## @param internalRedis.replica.containerSecurityContext.allowPrivilegeEscalation Set Redis replica containers' Security Context allowPrivilegeEscalation
    ## @param internalRedis.replica.containerSecurityContext.readOnlyRootFilesystem Set Redis containers' Security Context readOnlyRootFilesystem
    ## @param internalRedis.replica.containerSecurityContext.capabilities.drop removes Redis replica containers' Security Context capabilities
    ##
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      runAsNonRoot: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - all

## @section External Redis parameters
## External Redis configuration
## All of these values are only used when redis.enabled is set to false
## @param externalRedis.host Redis host
## @param externalRedis.port Redis port number
## @param externalRedis.password Redis password
## @param externalRedis.tlsEnabled Whether or not connect to Redis via TLS
## @param externalRedis.tlsCA CA certificate in case Redis TLS cert it's selfsigned
## @param externalRedis.existingSecret Name of an existing secret resource containing the Redis password in a 'redis-password' key
## @param externalRedis.existingSecretPasswordKey Key of the existing secret
##
externalRedis:
  host: localhost
  port: 6379
  password: ""
  tlsEnabled: false
  tlsCA: ""
  existingSecret: ""
  existingSecretPasswordKey: ""

## @section Internal PostgreSQL subchart parameters
## Internal PostgreSQL chart configuration
## ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
## @param internalPostgresql.enabled Switch to enable or disable the PostgreSQL helm chart
## @param internalPostgresql.auth.username CARTO Postgresql username
## @param internalPostgresql.auth.password CARTO Postgresql password
## @param internalPostgresql.auth.postgresPassword CARTO Postgresql password for the postgres user
## @param internalPostgresql.auth.database CARTO Postgresql database
## @param internalPostgresql.sslEnabled Whether or not connect to CARTO Postgresql via TLS
## @param internalPostgresql.auth.existingSecret Name of an existing secret containing the CARTO Postgresql password ('postgresql-password' key)
##
internalPostgresql:
  enabled: true
  sslEnabled: false
  ## @param internalPostgresql.image.tag Tag of the PostgreSQL image
  ##
  image:
    tag: "13.5.0-debian-10-r84"
  ## @param internalPostgresql.nameOverride String to partially override common.names.fullname template (will maintain the release name)
  ##
  nameOverride: "postgresql"
  auth:
    username: workspace_admin
    password: ""
    database: workspace
    postgresPassword: ""
    ## This secret is used in case of postgresql.enabled=true and we would like to specify password for newly created postgresql instance
    ##
    existingSecret: ""
  ## @param internalPostgresql.primary.initdb.scripts [array] Scripts for initializing the database
  ##
  primary:
    initdb:
      scripts:
        # HACK: Temporary workaround until we propose the CARTO team to change the workspace-migrations logic so it accepts an already existing database
        delete_db_and_user.sh: |
          # Using bash because we need the postgres user and the initDbUser and initDbPassword values don't work
          # correctly with the postgres user
          PGPASSWORD=$POSTGRES_POSTGRES_PASSWORD psql -U postgres <<EOF
          DROP DATABASE "{{ .Values.auth.database }}";
          DROP USER "{{ .Values.auth.username }}";
          EOF
## @section External PostgreSQL parameters
## External PostgreSQL configuration
## All of these values are only used when postgresql.enabled is set to false
## @param externalPostgresql.host Database host
## @param externalPostgresql.user non-root Username for CARTO Database (seen from outside the database)
## @param externalPostgresql.internalUser non-root Username for CARTO Database (seen from inside the database). If this value is not defined, `externalPostgresql.user` is used.
## @param externalPostgresql.password Database password
## @param externalPostgresql.adminUser Database admin user (seen from outside the database)
## @param externalPostgresql.internalAdminUser Database admin user (seen from inside the database). If this value is not defined, `externalPostgresql.adminUser` is used.
## @param externalPostgresql.adminPassword Database admin password
## @param externalPostgresql.adminDatabase Admin database to connect to create the CARTO database (usually postgres)
## @param externalPostgresql.existingSecret Name of an existing secret resource containing the DB password
## @param externalPostgresql.existingSecretPasswordKey Name of the key inside the secret containing the DB password
## @param externalPostgresql.existingSecretAdminPasswordKey Name of the key inside the secret containing the DB admin password
## @param externalPostgresql.database Database name
## @param externalPostgresql.port Database port number
## @param externalPostgresql.sslEnabled Whether or not connect to CARTO Postgresql via TLS
## @param externalPostgresql.sslCA CA certificate in case CARTO Postgresql TLS cert it's selfsigned
##
externalPostgresql:
  host: localhost
  user: workspace_admin
  internalUser: ""
  password: ""
  adminUser: ""
  internalAdminUser: ""
  adminPassword: ""
  adminDatabase: ""
  existingSecret: ""
  existingSecretPasswordKey: ""
  existingSecretAdminPasswordKey: ""
  database: workspace
  port: 5432
  sslEnabled: false
  sslCA: ""

## @section External proxy configuration
## Configuration for an external proxy provided by the client. Only HTTP and HTTPS proxies are supported
externalProxy:
  ## @param externalProxy.enabled Whether the APIs will use an external proxy or not
  enabled: false
  ## @param externalProxy.host Proxy host
  host: ""
  ## @param externalProxy.port Proxy port
  port: ""
  ## @param externalProxy.type Proxy type. Only HTTP and HTTPS proxies are supported
  type: ""
  ## @param externalProxy.excludedDomains List of domains that should not be proxied
  excludedDomains: []
  ## @param externalProxy.sslRejectUnauthorized Whether or not verify the HTTPS proxy SSL certificate
  sslRejectUnauthorized: true
  ## @param externalProxy.sslCA CA for the proxy SSL certificate in case is self-signed or signed by a not well-known CA
  sslCA: ""
  ## @param externalProxy.sslCAConfigmapName Configmap Name in which the CA for the proxy SSL certificate is stored, in case is self-signed or signed by a not well-known CA
  sslCAConfigmapName: ""
  ## @param externalProxy.connectionString Connection string to the proxy
  connectionString: ""

## @section Upgrade Check pre hook parameters
## @param upgradeCheck.enabled upgradeCheck will run or not
upgradeCheck:
  enabled: true
  ## upgradeCheck image
  ## @param upgradeCheck.image.registry upgradeCheck image registry
  ## @param upgradeCheck.image.repository upgradeCheck image repository
  ## @param upgradeCheck.image.tag upgradeCheck image tag (immutable tags are recommended)
  ## @param upgradeCheck.image.pullPolicy upgradeCheck image pull policy
  ## @param upgradeCheck.image.pullSecrets upgradeCheck image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: router/router-http
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## Upgrade Check pre-hook resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param upgradeCheck.resources.limits.memory Container memory limits in MiB
  ## @param upgradeCheck.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param upgradeCheck.resources.requests.memory Container memory requests in MiB
  ## @param upgradeCheck.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "256Mi"
      cpu: "500m"
    requests:
      memory: "128Mi"
      cpu: "250m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param upgradeCheck.podSecurityContext.enabled Enabled Upgrade Check pre-hook pods' Security Context
  ## @param upgradeCheck.podSecurityContext.fsGroup Set Upgrade Check pre-hook pod's Security Context fsGroup
  ## @param upgradeCheck.podSecurityContext.supplementalGroups[0] Set Upgrade Check pre-hook pod's Security Context supplementalGroups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    supplementalGroups: [2345]
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param upgradeCheck.containerSecurityContext.enabled Enabled Upgrade Check pre-hook containers' Security Context
  ## @param upgradeCheck.containerSecurityContext.runAsUser Set Upgrade Check pre-hook containers' Security Context runAsUser
  ## @param upgradeCheck.containerSecurityContext.runAsGroup Set Upgrade Check pre-hook containers' Security Context runAsGroup
  ## @param upgradeCheck.containerSecurityContext.runAsNonRoot Set Upgrade Check pre-hook containers' Security Context runAsNonRoot
  ## @param upgradeCheck.containerSecurityContext.allowPrivilegeEscalation Set Upgrade Check pre-hook containers' Security Context allowPrivilegeEscalation
  ## @param upgradeCheck.containerSecurityContext.readOnlyRootFilesystem Set Upgrade Check pre-hook containers' Security Context readOnlyRootFilesystem
  ## @param upgradeCheck.containerSecurityContext.capabilities.drop removes Upgrade Check pre-hook containers' Security Context capabilities
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all

## @section router-metrics parameters
routerMetrics:
  ## @param routerMetrics.enabled Enable routerMetrics container
  enabled: true
  ## @section routerMetrics container parameters
  ## routerMetrics image
  ## @param routerMetrics.image.registry routerMetrics image registry
  ## @param routerMetrics.image.repository routerMetrics image repository
  ## @param routerMetrics.image.tag routerMetrics image tag (immutable tags are recommended)
  ## @param routerMetrics.image.pullPolicy routerMetrics image pull policy
  ## @param routerMetrics.image.pullSecrets routerMetrics image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: router/router-metrics
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param routerMetrics.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param routerMetrics.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param routerMetrics.jvmProcessMaxMemoryAllocationPercentage Percentage for JVM max memory allocation inside the container memory limit
  ##
  jvmProcessMaxMemoryAllocationPercentage: 70
  ## @param routerMetrics.defaultJvmProcessMaxMemoryAllocation Default value for JVM max memory allocation
  ##
  defaultJvmProcessMaxMemoryAllocation: 1024
  ## routerMetrics resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param routerMetrics.resources.limits.memory Container memory limits in MiB
  ## @param routerMetrics.resources.limits.cpu Container cpu limits in milliCPU cores
  ## @param routerMetrics.resources.requests.memory Container memory requests in MiB
  ## @param routerMetrics.resources.requests.cpu Container cpu requests in milliCPU cores
  ##
  resources:
    limits:
      memory: "1464Mi"
      cpu: "500m"
    requests:
      memory: "512Mi"
      cpu: "250m"
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param routerMetrics.containerSecurityContext.enabled Enabled router-metrics containers' Security Context
  ## @param routerMetrics.containerSecurityContext.runAsUser Set router-metrics containers' Security Context runAsUser
  ## @param routerMetrics.containerSecurityContext.runAsGroup Set router-metrics containers' Security Context runAsGroup
  ## @param routerMetrics.containerSecurityContext.runAsNonRoot Set router-metrics containers' Security Context runAsNonRoot
  ## @param routerMetrics.containerSecurityContext.allowPrivilegeEscalation Set router-metrics containers' Security Context allowPrivilegeEscalation
  ## @param routerMetrics.containerSecurityContext.readOnlyRootFilesystem Set router-metrics containers' Security Context readOnlyRootFilesystem
  ## @param routerMetrics.containerSecurityContext.capabilities.drop removes router-metrics containers' Security Context capabilities
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  ## @param routerMetrics.podDisruptionBudget.enabled defines disruption budget for router-metrics
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
  ## @param routerMetrics.containerPorts.http routerMetrics HTTP container port
  ##
  containerPorts:
    http: 5447
  ## Configure extra options for routerMetrics containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param routerMetrics.livenessProbe.enabled Enable livenessProbe on router containers
  ## @param routerMetrics.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param routerMetrics.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param routerMetrics.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param routerMetrics.livenessProbe.successThreshold Success threshold for livenessProbe
  ## @param routerMetrics.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ##
  livenessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param routerMetrics.readinessProbe.enabled Enable readinessProbe on router containers
  ## @param routerMetrics.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param routerMetrics.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param routerMetrics.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param routerMetrics.readinessProbe.successThreshold Success threshold for readinessProbe
  ## @param routerMetrics.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ##
  readinessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param routerMetrics.startupProbe.enabled Enable startupProbe on router containers
  ## @param routerMetrics.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param routerMetrics.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param routerMetrics.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param routerMetrics.startupProbe.successThreshold Success threshold for startupProbe
  ## @param routerMetrics.startupProbe.failureThreshold Failure threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param routerMetrics.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param routerMetrics.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param routerMetrics.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}

gateway:
  ## @param gateway.enabled Enable gateway api.
  ## https://gateway-api.sigs.k8s.io/reference/spec/
  ##
  enabled: false
  ## TLS Certificates
  ## @param gateway.tlsCertificates.customSSLCerts.enabled enable if customer provides their own certificates.
  ## @param gateway.tlsCertificates.customSSLCerts.certificateValueBase64 custom certificate in base64.
  ## @param gateway.tlsCertificates.customSSLCerts.privateKeyValueBase64 custom private key in base64.
  ##
  tlsCertificates:
    customSSLCerts:
      enabled: false
      certificateValueBase64: ""
      privateKeyValueBase64: ""
    ## @param gateway.tlsCertificates.managedCerts.enabled enable if managed certs creation is required.
    ##
    managedCerts:
      enabled: false
  ## @param gateway.apiVersion Kubernetes Gateway API Version.
  ##
  apiVersion: ""
  ## @param gateway.gatewayClassName GatewayClass that will be be used to implement the gateway api.
  ##
  gatewayClassName: ""
  ## @param gateway.path The Path to CARTO
  path: /
  ## TLS
  ## @param gateway.tls.mode defines the TLS behavior for the TLS session initiated by the client.
  ## There are two possible modes: Terminate and Passthrough
  tls:
    mode: Terminate
  ## Listeners
  ## @param gateway.listeners.https.name HTTPS listener name
  ## @param gateway.listeners.https.port HTTPS listener port
  ## @param gateway.listeners.http.name HTTP listener name
  ## @param gateway.listeners.http.port HTTP listener port
  listeners:
    https:
      name: https
      port: 443
    http:
      name: http
      port: 80
  # Addresses
  ## @param gateway.address.type AddressType defines how a network address is represented as a text string.
  ## There are three possible types: Hostname, IPAddress and NamedAddress
  ## Use NamedAddress to pass the Static IP name value
  address:
    type: NamedAddress
  ## @param gateway.annotations Additional annotations for the gateway resource.
  annotations: {}
