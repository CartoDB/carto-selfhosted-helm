## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## e.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters

## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)
##
kubeVersion: ""
## @param nameOverride String to partially override airflow.fullname template with a string (will prepend the release name)
##
nameOverride: ""
## @param fullnameOverride String to fully override airflow.fullname template with a string
##
fullnameOverride: ""
## @param affinity Affinity for pod assignment (evaluated as a template)
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
##
affinity: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## Configure Container Security Context (only main container)
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enable container security context
## @param containerSecurityContext.runAsUser User ID for the container
##
containerSecurityContext:
  enabled: true
  runAsUser: 1001
## @param extraDeploy A list of extra kubernetes resources to be deployed
##
extraDeploy: []
## @param extraEnvVars Extra environment variables to add to all pods
## The parameters from the configuration file can be overwritten by using environment variables with this format:
##
## - name: ENV_VAR_NAME_1
##   value: "env_var_value_2"
## - name: ENV_VAR_NAME_2
##   value: "env_var_value_2
## - name: ENV_VAR_NAME_3
##   value: "env_var_value_3
##
extraEnvVars: []
## @param extraEnvVarsCM ConfigMap containing extra env vars to add to web, worker and scheduler pods
##
extraEnvVarsCM: ""
## @param extraEnvVarsSecret Secret containing extra env vars to add to web, worker and scheduler pods
##
extraEnvVarsSecret: ""
## @param initContainers List of init containers to be added to all pods
## Example:
## initContainers:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
initContainers: []
## Network policies
## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
## @param networkPolicies.enabled Switch to enable network policies
##
networkPolicies:
  enabled: false
## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set.
## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
##
nodeAffinityPreset:
  ## Example:
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  type: ""
  ## Example:
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param nodeSelector Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`.
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`.
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enable pod security context
## @param podSecurityContext.fsGroup fsGroup ID for the pod
##
podSecurityContext:
  enabled: true
  fsGroup: 1001
## Role Based Access
## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
## @param rbac.create If true, create & use RBAC resources
##
rbac:
  create: false
## Pods Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
## @param serviceAccount.annotations Annotations for service account. Evaluated as a template. Only used if `create` is `true`.
## @param serviceAccount.create Specifies whether a ServiceAccount should be created
## @param serviceAccount.name Name of the service account to use. If not set and create is true, a name is generated using the fullname template.
##
serviceAccount:
  annotations: {}
  create: false
  name: ""
## @param sidecars List of sidecar containers to be added to web, worker and scheduler pods
## Example:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []
## @param tolerations Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @section Carto ldsApi parameters

ldsApi:
  ## Carto ldsApi image version
  ## @param web.image.registry Carto image registry
  ## @param web.image.repository Carto image repository
  ## @param web.image.tag Carto image tag (immutable tags are recommended)
  ## @param web.image.pullPolicy Carto image pull policy
  ## @param web.image.pullSecrets Carto image pull secrets
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: ldsApi
    tag: latest
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param web.replicaCount Number of web replicas
  ##
  replicaCount: 1
  ## @param web.hostAliases Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param web.baseUrl URL used to access to airflow web ui
  ##
  baseUrl: ""
  ## @param web.configMap Name of an existing config map containing the Airflow webserver config file
  ##
  configMap: ""
  ## @param web.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param web.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param web.podLabels Add extra labels to the web's pods
  ##
  podLabels: {}
  ## @param web.podAnnotations Add extra annotations to the web's pods
  ##
  podAnnotations: {}
  ## @param web.containerPort Container port to be used for exposing http server
  ##
  containerPort: 3000
  ## @param web.extraVolumeMounts Add extra volume mounts
  ##
  extraVolumeMounts: []
  ## @param web.extraVolumes Add extra volumes
  ##
  extraVolumes: []
  ## @param web.extraEnvVars Array containing extra environment variables
  ##
  extraEnvVars: []
  ## @param web.extraEnvVarsCM ConfigMap containing extra environment variables
  ##
  extraEnvVarsCM: ""
  ## @param web.extraEnvVarsSecret Secret containing extra environment variables (in case of sensitive data)
  ##
  extraEnvVarsSecret: ""
  ## Web container' resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param web.resources.limits The resources limits for the Web container
  ## @param web.resources.requests The requested resources for the Web container
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    limits: {}
    ## Examples:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    requests: {}
  ## Configure extra options for Web containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ## @param web.livenessProbe.enabled Enable livenessProbe
  ## @param web.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param web.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param web.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param web.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param web.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 180
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param web.readinessProbe.enabled Enable readinessProbe
  ## @param web.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param web.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param web.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param web.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param web.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param web.customLivenessProbe Custom liveness probe for the Web component
  customLivenessProbe: {}
  ## @param web.customReadinessProbe Custom rediness probe for the Web component
  ##
  customReadinessProbe: {}
  ## Enable PodDisruptionBudget for Web pods
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ## @param web.podDisruptionBudget.enabled Enable PodDisruptionBudget for web pods
  ## @param web.podDisruptionBudget.minAvailable Minimum available instances; ignored if there is no PodDisruptionBudget
  ## @param web.podDisruptionBudget.maxUnavailable Maximum available instances; ignored if there is no PodDisruptionBudget
  ##
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
    maxUnavailable: ""
  ## @param ldsApi.sidecars Add sidecars to the Web pods
  ## Example:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param ldsApi.initContainers Add initContainers to the Web pods
  ## Example:
  ## initContainers:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  initContainers: []
  ## @param web.priorityClassName Priority Class Name
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
  ##
  priorityClassName: ""
  ## @param ldsApi.nodeSelector Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

## @section Carto database parameters

## PostgreSQL chart configuration
## ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
## @param postgresql.enabled Switch to enable or disable the PostgreSQL helm chart
## @param postgresql.existingSecret Name of an existing secret containing the PostgreSQL password ('postgresql-password' key)
##
postgresql:
  enabled: true
  ## Bitnami Postgresql image version
  ## ref: https://hub.docker.com/r/bitnami/postgresql/tags
  ## @param scheduler.image.registry Postgrrsql image registry
  ## @param scheduler.image.repository Postgresql image repository
  ## @param scheduler.image.tag Postgresql image tag (immutable tags are recommended)
  ## @param scheduler.image.pullPolicy Postgresql image pull policy
  ## @param scheduler.image.pullSecrets Postgresql image pull secrets
  ## @param scheduler.image.debug Enable image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 13.2.0-debian-10-r88
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Set to true if you would like to see extra information on logs
    ## It turns BASH and/or NAMI debugging in the image
    ##
    debug: false
  postgresqlUsername: postgres
  postgresqlPassword: ""
  ## This secret is used in case of postgresql.enabled=true and we would like to specify password for newly created postgresql instance
  ##
  existingSecret: ""
  fullnameOverride: workspace-postgres
  primary:
    sidecars:
    - name: workspace-migrations
      image: gcr.io/carto-onprem-artifacts/workspace-db:2021.12.14.02
      imagePullPolicy: Always
      command: [ "/bin/sh", "-c", "/usr/src/app/onprem-init-db.sh && while true; do echo $(date -u);sleep 3600;done" ]
      env:
      - name: POSTGRES_ADMIN_USER
        value: postgres
      - name: POSTGRES_PASSWORD
        value: ""
      - name: WORKSPACE_POSTGRES_USER
        value: workspace_admin
      - name: WORKSPACE_POSTGRES_PASSWORD
        value: ""
      - name: WORKSPACE_POSTGRES_HOST
        value: localhost
      - name: WORKSPACE_POSTGRES_DB
        value: workspace
      - name: WORKSPACE_POSTGRES_PORT
        value: "5432"

## Redis chart configuration
## ref: https://github.com/bitnami/charts/blob/master/bitnami/redis/values.yaml
## @param redis.enabled Switch to enable or disable the Redis&trade; helm
## @param redis.auth.enabled Switch to enable or disable authentication
## @param redis.auth.password Redis&trade; password
## @param redis.auth.existingSecret Name of existing secret object containing the password
## @param redis.architecture Cluster settings
##
redis:
  enabled: true
  auth:
    enabled: false
    ## Redis password (both master and slave). Defaults to a random 10-character alphanumeric string if not set and auth.enabled is true.
    ## The password value is ignored if existingSecret is set
    password: ""
    existingSecret: ""
  architecture: standalone

## @section Carto self hosted configuration

configuration:
  onpremDomain: ec2-54-165-90-152.compute-1.amazonaws.com
  reactAppGoogleMapsAPIKey: ""
  externalDatabase:
    enabled: false
    workspacePostgresHost: ""
    workspacePostgresPort: ""
    postgresPassword: ""
    existingSecret: ""
  postgresql:
    workspacePostgresHost: ""
    workspacePostgresPort: ""
    workspacePostgresPassword: ""
    postgresPassword: ""
  onpremTenantId: onp-bitnami-stag-1
  onpremGCPProjectID: carto-tnt-onp-bitnami-stag-1
  buckets:
    workspaceGCSThumbnailsBucket: carto-tnt-onp-bitnami-stag-1-thumbnails-storage
    workspaceGCSDatasetsBucket: carto-tnt-onp-bitnami-stag-1-client-storage
    importGCSDataImportsBucket: carto-tnt-onp-bitnami-stag-1-import-storage
  ssl:
    enable: false
    routerSSLCertificatePath: /etc/nginx/ssl/<cert>.crt
    routerSSLCertificateKeyPath: /etc/nginx/ssl/<cert>.key
  auth0:
    cartoAuth0ClientID: ASCv194MEEl68A3scIp39N2QXShGpOxW
    cartoAuth0CustomDomain: auth.stag.carto.com
  acc:
    accDomain: accounts.stag.app.carto.com
    accGCPProjectID: carto-acc-us-east1-1-stag
    accGCPProjectRegion: us-east1-1-stag
  encryptionSecretKey: WnduIWnPpaiF6WEJ3jItbaVxkdVisjpm
  cartoOnpremiseCartoDWLocation: us
  cartoOnpremiseCustomerPackageVersion: "2021.12.13"
  cartoOnpremiseVersion: "2021.12.13"
