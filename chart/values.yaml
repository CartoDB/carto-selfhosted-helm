## @section Custom config parameters
## Global configuration to be edited by the client
appConfigValues:
  ## @param appConfigValues.selfHostedDomain Domain that is going to be used to access to the CARTO self-hosted.
  selfHostedDomain: "carto-selfhosted.lan"
  ## @param appConfigValues.storageProvider Indicate the storage provider for the bucket. Valid values are: `gcp`, `s3` & `azure-blob`
  storageProvider: "gcp"
  ## @param appConfigValues.httpCacheEnabled Enable the internal httpCache
  httpCacheEnabled: "true"
  ## @param appConfigValues.importBucket Bucket to be used to store the import files
  importBucket: ""
  ## @param appConfigValues.workspaceImportsBucket Bucket to be used to store metadata of the workspace
  workspaceImportsBucket: ""
  ## @param appConfigValues.workspaceThumbnailsBucket Bucket to be used to store the thumbnails generated in the app
  workspaceThumbnailsBucket: ""
  ## @param appConfigValues.workspaceThumbnailsPublic Indicate if the thumbnails could be accessed publicly
  workspaceThumbnailsPublic: "true"
  ## @param appConfigValues.gcpBucketsProjectId If the bucket is GCP, the ProjectId to be used
  gcpBucketsProjectId: ""
  ## @param appConfigValues.awsS3Region If the bucket is S3, the region to be used
  awsS3Region: ""

## @section CARTO config parameters
## Global configuration provided by CARTO. If you changed something from this section probably your self-hosted is going to stop working.
cartoConfigValues:
  ## @param cartoConfigValues.cartoAccApiDomain Domain of the Account API of Carto.
  cartoAccApiDomain: ""
  ## @param cartoConfigValues.cartoAccGcpProjectId GCP project ID of the Carto Accounts.
  cartoAccGcpProjectId: ""
  ## @param cartoConfigValues.cartoAccGcpProjectRegion GCP project region of the Carto Accounts.
  cartoAccGcpProjectRegion: ""
  ## @param cartoConfigValues.cartoAuth0ClientId Client ID of Auth0.
  cartoAuth0ClientId: ""
  ## @param cartoConfigValues.cartoAuth0CustomDomain Custom Domain of Auth0.
  cartoAuth0CustomDomain: ""
  ## @param cartoConfigValues.cartoSelfhostedDwLocation Location of the Carto Data Warehouse.
  cartoSelfhostedDwLocation: ""
  ## @param cartoConfigValues.selfHostedGcpProjectId GCP project id used in the installation.
  selfHostedGcpProjectId: ""
  ## @param cartoConfigValues.selfHostedTenantId Carto internal tenantId used in the installation.
  selfHostedTenantId: ""
  ## @param cartoConfigValues.launchDarklyClientSideId LaunchDarkly ClientSideId (by www) used to enable/disable features.
  launchDarklyClientSideId: ""

## @section App secret
## Global secrets to be edited by the client
appSecrets:
  ## @extra appSecrets.googleMapsApiKey Google maps api-key value.
  googleMapsApiKey:
    ## @param appSecrets.googleMapsApiKey.value Value of the secret `Google maps api-key`. One of `appSecrets.googleMapsApiKey.value` or `appSecrets.googleMapsApiKey.existingSecret` could be defined.
    value: ""
    ## @param appSecrets.googleMapsApiKey.existingSecret.name Name of the pre-existent secret containing the `appSecrets.googleMapsApiKey.existingSecret.key`. If `appSecrets.googleMapsApiKey.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.googleMapsApiKey.existingSecret.key Key to find in `appSecrets.googleMapsApiKey.existingSecret.name` where the value of `appSecrets.googleMapsApiKey` is found. If `appSecrets.googleMapsApiKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.gcpBucketsServiceAccountKey If GCP is used in self-hosted, the AccessKey Secret.
  gcpBucketsServiceAccountKey:
    ## @param appSecrets.gcpBucketsServiceAccountKey.value Value of the secret `AccessKey Secret` (Only required if GCP is used). One of `appSecrets.gcpBucketsServiceAccountKey.value` or `appSecrets.gcpBucketsServiceAccountKey.existingSecret` could be defined.
    value: ""
    ## @param appSecrets.gcpBucketsServiceAccountKey.existingSecret.name Name of the pre-existent secret containing the `appSecrets.gcpBucketsServiceAccountKey.existingSecret.key`. If `appSecrets.gcpBucketsServiceAccountKey.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.gcpBucketsServiceAccountKey.existingSecret.key Key to find in `appSecrets.gcpBucketsServiceAccountKey.existingSecret.name` where the value of `appSecrets.gcpBucketsServiceAccountKey` is found. If `appSecrets.gcpBucketsServiceAccountKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.awsAccessKeyId If AWS is used in self-hosted, the AccessKey Id.
  awsAccessKeyId:
    ## @param appSecrets.awsAccessKeyId.value Value of the secret `AccessKey Id` (Only required if AWS is used). One of `appSecrets.awsAccessKeyId.value` or `appSecrets.awsAccessKeyId.existingSecret` could be defined.
    value: ""
    ## @param appSecrets.awsAccessKeyId.existingSecret.name Name of the pre-existent secret containing the `appSecrets.awsAccessKeyId.existingSecret.key`. If `appSecrets.awsAccessKeyId.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.awsAccessKeyId.existingSecret.key Key to find in `appSecrets.awsAccessKeyId.existingSecret.name` where the value of `appSecrets.awsAccessKeyId` is found. If `appSecrets.awsAccessKeyId.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.awsAccessKeySecret If AWS is used in self-hosted, the AccessKey Secret.
  awsAccessKeySecret:
    ## @param appSecrets.awsAccessKeySecret.value Value of the secret `AccessKey Secret` (Only required if AWS is used). One of `appSecrets.awsAccessKeySecret.value` or `appSecrets.awsAccessKeySecret.existingSecret` could be defined.
    value: ""
    ## @param appSecrets.awsAccessKeySecret.existingSecret.name Name of the pre-existent secret containing the `appSecrets.awsAccessKeySecret.existingSecret.key`. If `appSecrets.awsAccessKeySecret.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.awsAccessKeySecret.existingSecret.key Key to find in `appSecrets.awsAccessKeySecret.existingSecret.name` where the value of `appSecrets.awsAccessKeySecret` is found. If `appSecrets.awsAccessKeySecret.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra appSecrets.azureStorageAccessKey If Azure is used in self-hosted, the AccessKey Secret.
  azureStorageAccessKey:
    ## @param appSecrets.azureStorageAccessKey.value Value of the secret `AccessKey Secret` (Only required if Azure is used). One of `appSecrets.azureStorageAccessKey.value` or `appSecrets.azureStorageAccessKey.existingSecret` could be defined.
    value: ""
    ## @param appSecrets.azureStorageAccessKey.existingSecret.name Name of the pre-existent secret containing the `appSecrets.azureStorageAccessKey.existingSecret.key`. If `appSecrets.azureStorageAccessKey.value` is defined, this value is going to be ignored and not used.
    ## @param appSecrets.azureStorageAccessKey.existingSecret.key Key to find in `appSecrets.azureStorageAccessKey.existingSecret.name` where the value of `appSecrets.azureStorageAccessKey` is found. If `appSecrets.azureStorageAccessKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""

## @section CARTO secrets
## Secrets provided by CARTO. Some of them could be customized by the client.
cartoSecrets:
  ## @extra cartoSecrets.encryptionSecretKey The secret used to encrypt the clients Carto connections stored in the database.
  encryptionSecretKey:
    ## @param cartoSecrets.encryptionSecretKey.value Value of the secret used to encrypt the clients Carto connections stored in the database. One of `cartoSecrets.encryptionSecretKey.value` or `cartoSecrets.encryptionSecretKey.existingSecret` could be defined.
    value: ""
    ## @param cartoSecrets.encryptionSecretKey.existingSecret.name Name of the pre-existent secret containing the `cartoSecrets.encryptionSecretKey.existingSecret.key`. If `cartoSecrets.encryptionSecretKey.value` is defined, this value is going to be ignored and not used.
    ## @param cartoSecrets.encryptionSecretKey.existingSecret.key Key to find in `cartoSecrets.encryptionSecretKey.existingSecret.name` where the value of `cartoSecrets.encryptionSecretKey` is found. If `cartoSecrets.encryptionSecretKey.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra cartoSecrets.varnishPurgeSecret The secret used (by the app) to exec purge request.
  varnishPurgeSecret:
    ## @param cartoSecrets.varnishPurgeSecret.value Value of the secret used (by the app) to exec purge request. One of `cartoSecrets.varnishPurgeSecret.value` or `cartoSecrets.varnishPurgeSecret.existingSecret` could be defined.
    value: ""
    ## @param cartoSecrets.varnishPurgeSecret.existingSecret.name Name of the pre-existent secret containing the `cartoSecrets.varnishPurgeSecret.existingSecret.key`. If `cartoSecrets.varnishPurgeSecret.value` is defined, this value is going to be ignored and not used.
    ## @param cartoSecrets.varnishPurgeSecret.existingSecret.key Key to find in `cartoSecrets.varnishPurgeSecret.existingSecret.name` where the value of `cartoSecrets.varnishPurgeSecret` is found. If `cartoSecrets.varnishPurgeSecret.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
  ## @extra cartoSecrets.varnishDebugSecret The secret used if someone would like to debug Varnish.
  varnishDebugSecret:
    ## @param cartoSecrets.varnishDebugSecret.value Value of the secret used if someone would like to debug Varnish. One of `cartoSecrets.varnishDebugSecret.value` or `cartoSecrets.varnishDebugSecret.existingSecret` could be defined.
    value: ""
    ## @param cartoSecrets.varnishDebugSecret.existingSecret.name Name of the pre-existent secret containing the `cartoSecrets.varnishDebugSecret.existingSecret.key`. If `cartoSecrets.varnishDebugSecret.value` is defined, this value is going to be ignored and not used.
    ## @param cartoSecrets.varnishDebugSecret.existingSecret.key Key to find in `cartoSecrets.varnishDebugSecret.existingSecret.name` where the value of `cartoSecrets.varnishDebugSecret` is found. If `cartoSecrets.varnishDebugSecret.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""
      # name: "lolo"
      # key: "lolo"
  ## @extra cartoSecrets.defaultGoogleServiceAccount The secret used by the app to connect to google services. This couldn't be changed.
  defaultGoogleServiceAccount:
    ## @param cartoSecrets.defaultGoogleServiceAccount.value Value of the secret used by the app to connect to google services. This couldn't be changed. One of `cartoSecrets.defaultGoogleServiceAccount.value` or `cartoSecrets.defaultGoogleServiceAccount.existingSecret` could be defined.
    value: ""
    ## @param cartoSecrets.defaultGoogleServiceAccount.existingSecret.name Name of the pre-existent secret containing the `cartoSecrets.defaultGoogleServiceAccount.existingSecret.key`. If `cartoSecrets.defaultGoogleServiceAccount.value` is defined, this value is going to be ignored and not used.
    ## @param cartoSecrets.defaultGoogleServiceAccount.existingSecret.key Key to find in `cartoSecrets.defaultGoogleServiceAccount.existingSecret.name` where the value of `cartoSecrets.defaultGoogleServiceAccount` is found. If `cartoSecrets.defaultGoogleServiceAccount.value` is defined, this value is going to be ignored and not used.
    ##
    existingSecret:
      name: ""
      key: ""

## @param tlsCerts.autoGenerate Generate self-signed TLS certificates
## @param tlsCerts.existingSecret.name Name of a secret containing the certificate
## @param tlsCerts.existingSecret.certKey Key of the certificate inside the secret
## @param tlsCerts.existingSecret.keyKey Key of the certificate key inside the secret
##
tlsCerts:
  autoGenerate: true
  existingSecret:
    name: ""
    keyKey: "tls.key"
    certKey: "tls.crt"

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - 999d

## @param commonConfiguration [object] Configuration script that will be run in all Carto instances
##
commonConfiguration: |

## @param commonSecretConfiguration [object] Sensitive configuration script that will be run in all CARTO deployments
##
commonSecretConfiguration: |

## @section accounts-www Deployment Parameters
##
accountsWww:
  ## accounts-www image
  ## @param accountsWww.image.registry accounts-www image registry
  ## @param accountsWww.image.repository accounts-www image repository
  ## @param accountsWww.image.tag accounts-www image tag (immutable tags are recommended)
  ## @param accountsWww.image.pullPolicy accounts-www image pull policy
  ## @param accountsWww.image.pullSecrets accounts-www image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: accounts-www
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param accountsWww.replicaCount Number of accounts-www replicas to deploy
  ##
  replicaCount: 1
  ## @param accountsWww.containerPorts.http accounts-www HTTP container port
  ##
  containerPorts:
    http: 8080
  ## Configure extra options for accounts-www containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param accountsWww.livenessProbe.enabled Enable livenessProbe on accounts-www containers
  ## @param accountsWww.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param accountsWww.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param accountsWww.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param accountsWww.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param accountsWww.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param accountsWww.readinessProbe.enabled Enable readinessProbe on accounts-www containers
  ## @param accountsWww.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param accountsWww.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param accountsWww.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param accountsWww.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param accountsWww.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param accountsWww.startupProbe.enabled Enable startupProbe on accounts-www containers
  ## @param accountsWww.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param accountsWww.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param accountsWww.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param accountsWww.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param accountsWww.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param accountsWww.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param accountsWww.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param accountsWww.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## accounts-www autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param accountsWww.autoscaling.enabled Enable autoscaling for the accounts-www containers
  ## @param accountsWww.autoscaling.minReplicas The minimal number of containters for the accounts-www deployment
  ## @param accountsWww.autoscaling.maxReplicas The maximum number of containers for the accounts-www deployment
  ## @param accountsWww.autoscaling.targetCPUUtilizationPercentage The CPU utilization percentage used for scale up containers in accounts-www deployment
  ##
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 75
  ## accounts-www resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param accountsWww.resources.limits [object] The resources limits for the accounts-www containers
  ## @skip accountsWww.resources.limits
  ## @param accountsWww.resources.requests [object] The requested resources for the accounts-www containers
  ## @skip accountsWww.resources.requests
  ##
  resources:
    limits:
      memory: "1024Mi"
      cpu: "500m"
    requests:
      memory: "768Mi"
      cpu: "375m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param accountsWww.podSecurityContext.enabled Enabled accounts-www pods' Security Context
  ## @param accountsWww.podSecurityContext.fsGroup Set accounts-www pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 0
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param accountsWww.containerSecurityContext.enabled Enabled accounts-www containers' Security Context
  ## @param accountsWww.containerSecurityContext.runAsUser Set accounts-www containers' Security Context runAsUser
  ## @param accountsWww.containerSecurityContext.runAsNonRoot Set accounts-www containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsNonRoot: false

  ## @param accountsWww.configuration [object] Configuration settings (env vars) for accounts-www
  ##
  configuration: |

  ## @param accountsWww.secretConfiguration Configuration settings (env vars) for accounts-www
  ##
  secretConfiguration: ""
  ## @param accountsWww.existingConfigMap The name of an existing ConfigMap with your custom configuration for accounts-www
  ##
  existingConfigMap: ""
  ## @param accountsWww.existingSecret The name of an existing ConfigMap with your custom configuration for accounts-www
  ##
  existingSecret: ""
  ## @param accountsWww.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param accountsWww.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param accountsWww.hostAliases accounts-www pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param accountsWww.podLabels Extra labels for accounts-www pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param accountsWww.podAnnotations Annotations for accounts-www pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param accountsWww.podAffinityPreset Pod affinity preset. Ignored if `accountsWww.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param accountsWww.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `accountsWww.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node accountsWww.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param accountsWww.nodeAffinityPreset.type Node affinity preset type. Ignored if `accountsWww.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param accountsWww.nodeAffinityPreset.key Node label key to match. Ignored if `accountsWww.affinity` is set
    ##
    key: ""
    ## @param accountsWww.nodeAffinityPreset.values Node label values to match. Ignored if `accountsWww.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param accountsWww.affinity Affinity for accounts-www pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `accountsWww.podAffinityPreset`, `accountsWww.podAntiAffinityPreset`, and `accountsWww.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param accountsWww.nodeSelector Node labels for accounts-www pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param accountsWww.tolerations Tolerations for accounts-www pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param accountsWww.updateStrategy.type accounts-www statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param accountsWww.priorityClassName accounts-www pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param accountsWww.schedulerName Name of the k8s scheduler (other than default) for accounts-www pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param accountsWww.lifecycleHooks for the accounts-www container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param accountsWww.extraEnvVars Array with extra environment variables to add to accounts-www nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param accountsWww.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for accounts-www nodes
  ##
  extraEnvVarsCM: ""
  ## @param accountsWww.extraEnvVarsSecret Name of existing Secret containing extra env vars for accounts-www nodes
  ##
  extraEnvVarsSecret: ""
  ## @param accountsWww.extraVolumes Optionally specify extra list of additional volumes for the accounts-www pod(s)
  ##
  extraVolumes: []
  ## @param accountsWww.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the accounts-www container(s)
  ##
  extraVolumeMounts: []
  ## @param accountsWww.sidecars Add additional sidecar containers to the accounts-www pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param accountsWww.initContainers Add additional init containers to the accounts-www pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section accounts-www Service Parameters
  ##
  ##
  service:
    ## @param accountsWww.service.type accounts-www service type
    ##
    type: ClusterIP
    ## @param accountsWww.service.ports.http accounts-www service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param accountsWww.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param accountsWww.service.clusterIP accounts-www service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param accountsWww.service.loadBalancerIP accounts-www service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param accountsWww.service.labelSelectorsOverride Selector for accounts-www service
    ##
    labelSelectorsOverride: {}
    ## @param accountsWww.service.loadBalancerSourceRanges accounts-www service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param accountsWww.service.externalTrafficPolicy accounts-www service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param accountsWww.service.annotations Additional custom annotations for accounts-www service
    ##
    annotations: {}
    ## @param accountsWww.service.extraPorts Extra ports to expose in accounts-www service (normally used with the `sidecars` value)
    ##
    extraPorts: []
  ## @section accounts-www ServiceAccount configuration
  ##
  serviceAccount:
    ## @param accountsWww.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param accountsWww.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param accountsWww.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section import-api Deployment Parameters
##
importApi:
  ## import-api image
  ## @param importApi.image.registry import-api image registry
  ## @param importApi.image.repository import-api image repository
  ## @param importApi.image.tag import-api image tag (immutable tags are recommended)
  ## @param importApi.image.pullPolicy import-api image pull policy
  ## @param importApi.image.pullSecrets import-api image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: import-api
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param importApi.replicaCount Number of import-api replicas to deploy
  ##
  replicaCount: 1
  ## @param importApi.containerPorts.http import-api HTTP container port
  ##
  containerPorts:
    http: 8003
  ## Configure extra options for import-api containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param importApi.livenessProbe.enabled Enable livenessProbe on import-api containers
  ## @param importApi.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param importApi.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param importApi.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param importApi.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param importApi.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param importApi.readinessProbe.enabled Enable readinessProbe on import-api containers
  ## @param importApi.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param importApi.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param importApi.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param importApi.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param importApi.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param importApi.startupProbe.enabled Enable startupProbe on import-api containers
  ## @param importApi.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param importApi.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param importApi.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param importApi.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param importApi.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param importApi.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param importApi.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param importApi.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## import-api autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param importApi.autoscaling.enabled Enable autoscaling for the import-api containers
  ## @param importApi.autoscaling.minReplicas The minimal number of containters for the import-api deployment
  ## @param importApi.autoscaling.maxReplicas The maximum number of containers for the import-api deployment
  ## @param importApi.autoscaling.targetCPUUtilizationPercentage The CPU utilization percentage used for scale up containers in import-api deployment
  ##
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 75
  ## import-api resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param importApi.resources.limits [object] The resources limits for the import-api containers
  ## @skip importApi.resources.limits
  ## @param importApi.resources.requests [object] The requested resources for the import-api containers
  ## @skip importApi.resources.requests
  ##
  resources:
    limits:
      memory: "512Mi"
      cpu: "1000m"
    requests:
      memory: "372Mi"
      cpu: "750m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param importApi.podSecurityContext.enabled Enabled import-api pods' Security Context
  ## @param importApi.podSecurityContext.fsGroup Set import-api pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 0
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param importApi.containerSecurityContext.enabled Enabled import-api containers' Security Context
  ## @param importApi.containerSecurityContext.runAsUser Set import-api containers' Security Context runAsUser
  ## @param importApi.containerSecurityContext.runAsNonRoot Set import-api containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsNonRoot: false

  ## @param importApi.configuration [object] Configuration settings (env vars) for import-api
  ##
  configuration: |
  ## @param importApi.secretConfiguration Configuration settings (env vars) for import-api
  ##
  secretConfiguration: ""
  ## @param importApi.existingConfigMap The name of an existing ConfigMap with your custom configuration for import-api
  ##
  existingConfigMap: ""
  ## @param importApi.existingSecret The name of an existing ConfigMap with your custom configuration for import-api
  ##
  existingSecret: ""
  ## @param importApi.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param importApi.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param importApi.hostAliases import-api pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param importApi.podLabels Extra labels for import-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param importApi.podAnnotations Annotations for import-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param importApi.podAffinityPreset Pod affinity preset. Ignored if `importApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param importApi.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `importApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node importApi.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param importApi.nodeAffinityPreset.type Node affinity preset type. Ignored if `importApi.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param importApi.nodeAffinityPreset.key Node label key to match. Ignored if `importApi.affinity` is set
    ##
    key: ""
    ## @param importApi.nodeAffinityPreset.values Node label values to match. Ignored if `importApi.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param importApi.affinity Affinity for import-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `importApi.podAffinityPreset`, `importApi.podAntiAffinityPreset`, and `importApi.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param importApi.nodeSelector Node labels for import-api pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param importApi.tolerations Tolerations for import-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param importApi.updateStrategy.type import-api statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param importApi.priorityClassName import-api pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param importApi.schedulerName Name of the k8s scheduler (other than default) for import-api pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param importApi.lifecycleHooks for the import-api container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param importApi.extraEnvVars Array with extra environment variables to add to import-api nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param importApi.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for import-api nodes
  ##
  extraEnvVarsCM: ""
  ## @param importApi.extraEnvVarsSecret Name of existing Secret containing extra env vars for import-api nodes
  ##
  extraEnvVarsSecret: ""
  ## @param importApi.extraVolumes Optionally specify extra list of additional volumes for the import-api pod(s)
  ##
  extraVolumes: []
  ## @param importApi.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the import-api container(s)
  ##
  extraVolumeMounts: []
  ## @param importApi.sidecars Add additional sidecar containers to the import-api pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param importApi.initContainers Add additional init containers to the import-api pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section import-api Service Parameters
  ##
  ##
  service:
    ## @param importApi.service.type import-api service type
    ##
    type: ClusterIP
    ## @param importApi.service.ports.http import-api service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param importApi.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param importApi.service.clusterIP import-api service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param importApi.service.loadBalancerIP import-api service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param importApi.service.labelSelectorsOverride Selector for import-api service
    ##
    labelSelectorsOverride: {}
    ## @param importApi.service.loadBalancerSourceRanges import-api service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param importApi.service.externalTrafficPolicy import-api service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param importApi.service.annotations Additional custom annotations for import-api service
    ##
    annotations: {}
    ## @param importApi.service.extraPorts Extra ports to expose in import-api service (normally used with the `sidecars` value)
    ##
    extraPorts: []
  ## @section import-api ServiceAccount configuration
  ##
  serviceAccount:
    ## @param importApi.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param importApi.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param importApi.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section import-worker Deployment Parameters
##
importWorker:
  ## import-worker image
  ## @param importWorker.image.registry import-worker image registry
  ## @param importWorker.image.repository import-worker image repository
  ## @param importWorker.image.tag import-worker image tag (immutable tags are recommended)
  ## @param importWorker.image.pullPolicy import-worker image pull policy
  ## @param importWorker.image.pullSecrets import-worker image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: import-api
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param importWorker.replicaCount Number of import-worker replicas to deploy
  ##
  replicaCount: 1
  ## @param importWorker.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param importWorker.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param importWorker.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## import-worker resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param importWorker.resources.limits [object] The resources limits for the import-worker containers
  ## @skip importWorker.resources.limits
  ## @param importWorker.resources.requests [object] The requested resources for the import-worker containers
  ## @skip importWorker.resources.requests
  ##
  resources:
    limits:
      memory: "4096Mi"
      cpu: "1000m"
    requests:
      memory: "3072Mi"
      cpu: "750m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param importWorker.podSecurityContext.enabled Enabled import-worker pods' Security Context
  ## @param importWorker.podSecurityContext.fsGroup Set import-worker pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 0
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param importWorker.containerSecurityContext.enabled Enabled import-worker containers' Security Context
  ## @param importWorker.containerSecurityContext.runAsUser Set import-worker containers' Security Context runAsUser
  ## @param importWorker.containerSecurityContext.runAsNonRoot Set import-worker containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsNonRoot: false

  ## @param importWorker.configuration [object] Configuration settings (env vars) for import-worker
  ##
  configuration: ""
  ## @param importWorker.secretConfiguration Configuration settings (env vars) for import-worker
  ##
  secretConfiguration: ""
  ## @param importWorker.existingConfigMap The name of an existing ConfigMap with your custom configuration for import-worker
  ##
  existingConfigMap: ""
  ## @param importWorker.existingSecret The name of an existing ConfigMap with your custom configuration for import-worker
  ##
  existingSecret: ""
  ## @param importWorker.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param importWorker.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param importWorker.hostAliases import-worker pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param importWorker.podLabels Extra labels for import-worker pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param importWorker.podAnnotations Annotations for import-worker pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param importWorker.podAffinityPreset Pod affinity preset. Ignored if `importWorker.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param importWorker.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `importWorker.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node importWorker.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param importWorker.nodeAffinityPreset.type Node affinity preset type. Ignored if `importWorker.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param importWorker.nodeAffinityPreset.key Node label key to match. Ignored if `importWorker.affinity` is set
    ##
    key: ""
    ## @param importWorker.nodeAffinityPreset.values Node label values to match. Ignored if `importWorker.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param importWorker.affinity Affinity for import-worker pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `importWorker.podAffinityPreset`, `importWorker.podAntiAffinityPreset`, and `importWorker.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param importWorker.nodeSelector Node labels for import-worker pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param importWorker.tolerations Tolerations for import-worker pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param importWorker.updateStrategy.type import-worker statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param importWorker.priorityClassName import-worker pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param importWorker.schedulerName Name of the k8s scheduler (other than default) for import-worker pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param importWorker.lifecycleHooks for the import-worker container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param importWorker.extraEnvVars Array with extra environment variables to add to import-worker nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param importWorker.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for import-worker nodes
  ##
  extraEnvVarsCM: ""
  ## @param importWorker.extraEnvVarsSecret Name of existing Secret containing extra env vars for import-worker nodes
  ##
  extraEnvVarsSecret: ""
  ## @param importWorker.extraVolumes Optionally specify extra list of additional volumes for the import-worker pod(s)
  ##
  extraVolumes: []
  ## @param importWorker.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the import-worker container(s)
  ##
  extraVolumeMounts: []
  ## @param importWorker.sidecars Add additional sidecar containers to the import-worker pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param importWorker.initContainers Add additional init containers to the import-worker pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section import-worker ServiceAccount configuration
  ##
  serviceAccount:
    ## @param importWorker.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param importWorker.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param importWorker.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section lds-api Deployment Parameters
##
ldsApi:
  ## lds-api image
  ## @param ldsApi.image.registry lds-api image registry
  ## @param ldsApi.image.repository lds-api image repository
  ## @param ldsApi.image.tag lds-api image tag (immutable tags are recommended)
  ## @param ldsApi.image.pullPolicy lds-api image pull policy
  ## @param ldsApi.image.pullSecrets lds-api image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: lds-api
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param ldsApi.replicaCount Number of lds-api replicas to deploy
  ##
  replicaCount: 1
  ## @param ldsApi.containerPorts.http lds-api HTTP container port
  ##
  containerPorts:
    http: 8004
  ## Configure extra options for lds-api containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param ldsApi.livenessProbe.enabled Enable livenessProbe on lds-api containers
  ## @param ldsApi.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param ldsApi.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param ldsApi.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param ldsApi.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param ldsApi.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param ldsApi.readinessProbe.enabled Enable readinessProbe on lds-api containers
  ## @param ldsApi.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param ldsApi.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param ldsApi.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param ldsApi.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param ldsApi.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param ldsApi.startupProbe.enabled Enable startupProbe on lds-api containers
  ## @param ldsApi.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param ldsApi.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param ldsApi.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param ldsApi.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param ldsApi.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param ldsApi.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param ldsApi.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param ldsApi.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## lds-api autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param ldsApi.autoscaling.enabled Enable autoscaling for the lds-api containers
  ## @param ldsApi.autoscaling.minReplicas The minimal number of containters for the workspldsace-api deployment
  ## @param ldsApi.autoscaling.maxReplicas The maximum number of containers for the lds-api deployment
  ## @param ldsApi.autoscaling.targetCPUUtilizationPercentage The CPU utilization percentage used for scale up containers in lds-api deployment
  ##
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 75
  ## lds-api resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param ldsApi.resources.limits [object] The resources limits for the lds-api containers
  ## @skip ldsApi.resources.limits
  ## @param ldsApi.resources.requests [object] The requested resources for the lds-api containers
  ## @skip ldsApi.resources.requests
  ##
  resources:
    limits:
      memory: "1024Mi"
      cpu: "1000m"
    requests:
      memory: "768Mi"
      cpu: "750m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param ldsApi.podSecurityContext.enabled Enabled lds-api pods' Security Context
  ## @param ldsApi.podSecurityContext.fsGroup Set lds-api pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 0
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param ldsApi.containerSecurityContext.enabled Enabled lds-api containers' Security Context
  ## @param ldsApi.containerSecurityContext.runAsUser Set lds-api containers' Security Context runAsUser
  ## @param ldsApi.containerSecurityContext.runAsNonRoot Set lds-api containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsNonRoot: false

  ## @param ldsApi.configuration [object] Configuration settings (env vars) for lds-api
  ##
  configuration: |
  ## @param ldsApi.secretConfiguration Configuration settings (env vars) for lds-api
  ##
  secretConfiguration: ""
  ## @param ldsApi.existingConfigMap The name of an existing ConfigMap with your custom configuration for lds-api
  ##
  existingConfigMap: ""
  ## @param ldsApi.existingSecret The name of an existing ConfigMap with your custom configuration for lds-api
  ##
  existingSecret: ""
  ## @param ldsApi.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param ldsApi.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param ldsApi.hostAliases lds-api pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param ldsApi.podLabels Extra labels for lds-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param ldsApi.podAnnotations Annotations for lds-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param ldsApi.podAffinityPreset Pod affinity preset. Ignored if `ldsApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param ldsApi.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `ldsApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node ldsApi.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param ldsApi.nodeAffinityPreset.type Node affinity preset type. Ignored if `ldsApi.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param ldsApi.nodeAffinityPreset.key Node label key to match. Ignored if `ldsApi.affinity` is set
    ##
    key: ""
    ## @param ldsApi.nodeAffinityPreset.values Node label values to match. Ignored if `ldsApi.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param ldsApi.affinity Affinity for lds-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `ldsApi.podAffinityPreset`, `ldsApi.podAntiAffinityPreset`, and `ldsApi.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param ldsApi.nodeSelector Node labels for lds-api pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param ldsApi.tolerations Tolerations for lds-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param ldsApi.updateStrategy.type lds-api statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param ldsApi.priorityClassName lds-api pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param ldsApi.schedulerName Name of the k8s scheduler (other than default) for lds-api pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param ldsApi.lifecycleHooks for the lds-api container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param ldsApi.extraEnvVars Array with extra environment variables to add to lds-api nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param ldsApi.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for lds-api nodes
  ##
  extraEnvVarsCM: ""
  ## @param ldsApi.extraEnvVarsSecret Name of existing Secret containing extra env vars for lds-api nodes
  ##
  extraEnvVarsSecret: ""
  ## @param ldsApi.extraVolumes Optionally specify extra list of additional volumes for the lds-api pod(s)
  ##
  extraVolumes: []
  ## @param ldsApi.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the lds-api container(s)
  ##
  extraVolumeMounts: []
  ## @param ldsApi.sidecars Add additional sidecar containers to the lds-api pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param ldsApi.initContainers Add additional init containers to the lds-api pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section lds-api Service Parameters
  ##
  ##
  service:
    ## @param ldsApi.service.type lds-api service type
    ##
    type: ClusterIP
    ## @param ldsApi.service.ports.http lds-api service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param ldsApi.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param ldsApi.service.clusterIP lds-api service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param ldsApi.service.loadBalancerIP lds-api service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param ldsApi.service.labelSelectorsOverride Selector for lds-api service
    ##
    labelSelectorsOverride: {}
    ## @param ldsApi.service.loadBalancerSourceRanges lds-api service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param ldsApi.service.externalTrafficPolicy lds-api service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param ldsApi.service.annotations Additional custom annotations for lds-api service
    ##
    annotations: {}
    ## @param ldsApi.service.extraPorts Extra ports to expose in lds-api service (normally used with the `sidecars` value)
    ##
    extraPorts: []
  ## @section lds-api ServiceAccount configuration
  ##
  serviceAccount:
    ## @param ldsApi.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param ldsApi.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param ldsApi.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section maps-api Deployment Parameters
##
mapsApi:
  ## maps-api image
  ## @param mapsApi.image.registry maps-api image registry
  ## @param mapsApi.image.repository maps-api image repository
  ## @param mapsApi.image.tag maps-api image tag (immutable tags are recommended)
  ## @param mapsApi.image.pullPolicy maps-api image pull policy
  ## @param mapsApi.image.pullSecrets maps-api image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: maps-api
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param mapsApi.replicaCount Number of maps-api replicas to deploy
  ##
  replicaCount: 1
  ## @param mapsApi.containerPorts.http maps-api HTTP container port
  ##
  containerPorts:
    http: 8002
  ## Configure extra options for maps-api containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param mapsApi.livenessProbe.enabled Enable livenessProbe on maps-api containers
  ## @param mapsApi.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param mapsApi.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param mapsApi.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param mapsApi.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param mapsApi.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param mapsApi.readinessProbe.enabled Enable readinessProbe on maps-api containers
  ## @param mapsApi.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param mapsApi.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param mapsApi.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param mapsApi.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param mapsApi.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param mapsApi.startupProbe.enabled Enable startupProbe on maps-api containers
  ## @param mapsApi.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param mapsApi.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param mapsApi.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param mapsApi.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param mapsApi.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param mapsApi.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param mapsApi.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param mapsApi.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## maps-api autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param mapsApi.autoscaling.enabled Enable autoscaling for the maps-api containers
  ## @param mapsApi.autoscaling.minReplicas The minimal number of containters for the maps-api deployment
  ## @param mapsApi.autoscaling.maxReplicas The maximum number of containers for the maps-api deployment
  ## @param mapsApi.autoscaling.targetCPUUtilizationPercentage The CPU utilization percentage used for scale up containers in maps-api deployment
  ##
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75
  ## maps-api resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param mapsApi.resources.limits [object] The resources limits for the maps-api containers
  ## @skip mapsApi.resources.limits
  ## @param mapsApi.resources.requests [object] The requested resources for the maps-api containers
  ## @skip mapsApi.resources.requests
  ##
  resources:
    limits:
      memory: "1024Mi"
      cpu: "1000m"
    requests:
      memory: "768Mi"
      cpu: "750m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param mapsApi.podSecurityContext.enabled Enabled maps-api pods' Security Context
  ## @param mapsApi.podSecurityContext.fsGroup Set maps-api pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 0
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param mapsApi.containerSecurityContext.enabled Enabled maps-api containers' Security Context
  ## @param mapsApi.containerSecurityContext.runAsUser Set maps-api containers' Security Context runAsUser
  ## @param mapsApi.containerSecurityContext.runAsNonRoot Set maps-api containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsNonRoot: false

  ## @param mapsApi.configuration [object] Configuration settings (env vars) for maps-api
  ##
  configuration: |

  ## @param mapsApi.secretConfiguration Configuration settings (env vars) for maps-api
  ##
  secretConfiguration: ""
  ## @param mapsApi.existingConfigMap The name of an existing ConfigMap with your custom configuration for maps-api
  ##
  existingConfigMap: ""
  ## @param mapsApi.existingSecret The name of an existing ConfigMap with your custom configuration for maps-api
  ##
  existingSecret: ""
  ## @param mapsApi.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param mapsApi.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param mapsApi.hostAliases maps-api pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param mapsApi.podLabels Extra labels for maps-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param mapsApi.podAnnotations Annotations for maps-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param mapsApi.podAffinityPreset Pod affinity preset. Ignored if `mapsApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param mapsApi.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `mapsApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node mapsApi.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param mapsApi.nodeAffinityPreset.type Node affinity preset type. Ignored if `mapsApi.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param mapsApi.nodeAffinityPreset.key Node label key to match. Ignored if `mapsApi.affinity` is set
    ##
    key: ""
    ## @param mapsApi.nodeAffinityPreset.values Node label values to match. Ignored if `mapsApi.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param mapsApi.affinity Affinity for maps-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `mapsApi.podAffinityPreset`, `mapsApi.podAntiAffinityPreset`, and `mapsApi.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param mapsApi.nodeSelector Node labels for maps-api pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param mapsApi.tolerations Tolerations for maps-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param mapsApi.updateStrategy.type maps-api statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param mapsApi.priorityClassName maps-api pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param mapsApi.schedulerName Name of the k8s scheduler (other than default) for maps-api pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param mapsApi.lifecycleHooks for the maps-api container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param mapsApi.extraEnvVars Array with extra environment variables to add to maps-api nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param mapsApi.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for maps-api nodes
  ##
  extraEnvVarsCM: ""
  ## @param mapsApi.extraEnvVarsSecret Name of existing Secret containing extra env vars for maps-api nodes
  ##
  extraEnvVarsSecret: ""
  ## @param mapsApi.extraVolumes Optionally specify extra list of additional volumes for the maps-api pod(s)
  ##
  extraVolumes: []
  ## @param mapsApi.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the maps-api container(s)
  ##
  extraVolumeMounts: []
  ## @param mapsApi.sidecars Add additional sidecar containers to the maps-api pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param mapsApi.initContainers Add additional init containers to the maps-api pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section maps-api Service Parameters
  ##
  ##
  service:
    ## @param mapsApi.service.type maps-api service type
    ##
    type: ClusterIP
    ## @param mapsApi.service.ports.http maps-api service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param mapsApi.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param mapsApi.service.clusterIP maps-api service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param mapsApi.service.loadBalancerIP maps-api service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param mapsApi.service.labelSelectorsOverride Selector for maps-api service
    ##
    labelSelectorsOverride: {}
    ## @param mapsApi.service.loadBalancerSourceRanges maps-api service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param mapsApi.service.externalTrafficPolicy maps-api service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param mapsApi.service.annotations Additional custom annotations for maps-api service
    ##
    annotations: {}
    ## @param mapsApi.service.extraPorts Extra ports to expose in maps-api service (normally used with the `sidecars` value)
    ##
    extraPorts: []
  ## @section maps-api ServiceAccount configuration
  ##
  serviceAccount:
    ## @param mapsApi.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param mapsApi.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param mapsApi.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section router Deployment Parameters
##
router:
  ## router image
  ## @param router.image.registry router image registry
  ## @param router.image.repository router image repository
  ## @param router.image.tag router image tag (immutable tags are recommended)
  ## @param router.image.pullPolicy router image pull policy
  ## @param router.image.pullSecrets router image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: router
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param router.replicaCount Number of router replicas to deploy
  ##
  replicaCount: 1
  ## @param router.containerPorts.http router HTTP container port
  ## @param router.containerPorts.https router HTTPS container port
  ##
  containerPorts:
    http: 8080
    https: 8443
  ## Configure extra options for router containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param router.livenessProbe.enabled Enable livenessProbe on router containers
  ## @param router.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param router.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param router.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param router.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param router.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param router.readinessProbe.enabled Enable readinessProbe on router containers
  ## @param router.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param router.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param router.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param router.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param router.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param router.startupProbe.enabled Enable startupProbe on router containers
  ## @param router.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param router.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param router.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param router.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param router.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param router.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param router.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param router.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## router autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param router.autoscaling.enabled Enable autoscaling for the router containers
  ## @param router.autoscaling.minReplicas The minimal number of containters for the router deployment
  ## @param router.autoscaling.maxReplicas The maximum number of containers for the router deployment
  ## @param router.autoscaling.targetCPUUtilizationPercentage The CPU utilization percentage used for scale up containers in router deployment
  ##
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 75
  ## router resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param router.resources.limits [object] The resources limits for the router containers
  ## @skip router.resources.limits
  ## @param router.resources.requests [object] The requested resources for the router containers
  ## @skip router.resources.requests
  ##
  resources:
    limits:
      memory: "512Mi"
      cpu: "500m"
    requests:
      memory: "372Mi"
      cpu: "350m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param router.podSecurityContext.enabled Enabled router pods' Security Context
  ## @param router.podSecurityContext.fsGroup Set router pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 0
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param router.containerSecurityContext.enabled Enabled router containers' Security Context
  ## @param router.containerSecurityContext.runAsUser Set router containers' Security Context runAsUser
  ## @param router.containerSecurityContext.runAsNonRoot Set router containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsNonRoot: false

  ## @param router.configuration [object] Configuration settings (env vars) for router
  ##
  configuration: |

  ## @param router.secretConfiguration Configuration settings (env vars) for router
  ##
  secretConfiguration: ""
  ## @param router.existingConfigMap The name of an existing ConfigMap with your custom configuration for router
  ##
  existingConfigMap: ""
  ## @param router.existingSecret The name of an existing ConfigMap with your custom configuration for router
  ##
  existingSecret: ""
  ## @param router.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param router.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param router.hostAliases router pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param router.podLabels Extra labels for router pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param router.podAnnotations Annotations for router pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param router.podAffinityPreset Pod affinity preset. Ignored if `router.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param router.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `router.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node router.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param router.nodeAffinityPreset.type Node affinity preset type. Ignored if `router.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param router.nodeAffinityPreset.key Node label key to match. Ignored if `router.affinity` is set
    ##
    key: ""
    ## @param router.nodeAffinityPreset.values Node label values to match. Ignored if `router.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param router.affinity Affinity for router pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `router.podAffinityPreset`, `router.podAntiAffinityPreset`, and `router.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param router.nodeSelector Node labels for router pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param router.tolerations Tolerations for router pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param router.updateStrategy.type router statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param router.priorityClassName router pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param router.schedulerName Name of the k8s scheduler (other than default) for router pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param router.lifecycleHooks for the router container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param router.extraEnvVars Array with extra environment variables to add to router nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param router.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for router nodes
  ##
  extraEnvVarsCM: ""
  ## @param router.extraEnvVarsSecret Name of existing Secret containing extra env vars for router nodes
  ##
  extraEnvVarsSecret: ""
  ## @param router.extraVolumes Optionally specify extra list of additional volumes for the router pod(s)
  ##
  extraVolumes: []
  ## @param router.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the router container(s)
  ##
  extraVolumeMounts: []
  ## @param router.sidecars Add additional sidecar containers to the router pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param router.initContainers Add additional init containers to the router pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section router Service Parameters
  ##
  ##
  service:
    ## @param router.service.type router service type
    ##
    type: ClusterIP
    ## @param router.service.ports.http router service HTTP port
    ## @param router.service.ports.https router service HTTPS port
    ##
    ports:
      http: 80
      https: 443
    ## Node ports to expose
    ## @param router.service.nodePorts.http Node port for HTTP
    ## @param router.service.nodePorts.https Node port for HTTPS
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
      https: ""
    ## @param router.service.clusterIP router service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param router.service.loadBalancerIP router service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param router.service.labelSelectorsOverride Selector for router service
    ##
    labelSelectorsOverride: {}
    ## @param router.service.loadBalancerSourceRanges router service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param router.service.externalTrafficPolicy router service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param router.service.annotations Additional custom annotations for router service
    ##
    annotations: {}
    ## @param router.service.extraPorts Extra ports to expose in router service (normally used with the `sidecars` value)
    ##
    extraPorts: []
  ## @section router ServiceAccount configuration
  ##
  serviceAccount:
    ## @param router.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param router.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param router.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section httpCache Deployment Parameters
##
httpCache:
  ## httpCache image
  ## @param httpCache.image.registry http-cache image registry
  ## @param httpCache.image.repository http-cache image repository
  ## @param httpCache.image.tag http-cache image tag (immutable tags are recommended)
  ## @param httpCache.image.pullPolicy http-cache image pull policy
  ## @param httpCache.image.pullSecrets http-cache image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: http-cache
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param httpCache.replicaCount Number of http-cache replicas to deploy
  ##
  replicaCount: 1
  ## @param httpCache.containerPorts.http http-cache HTTP container port
  ##
  containerPorts:
    http: 6081
  ## Configure extra options for http-cache containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param httpCache.livenessProbe.enabled Enable livenessProbe on http-cache containers
  ## @param httpCache.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param httpCache.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param httpCache.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param httpCache.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param httpCache.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param httpCache.readinessProbe.enabled Enable readinessProbe on http-cache containers
  ## @param httpCache.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param httpCache.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param httpCache.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param httpCache.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param httpCache.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param httpCache.startupProbe.enabled Enable startupProbe on http-cache containers
  ## @param httpCache.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param httpCache.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param httpCache.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param httpCache.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param httpCache.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param httpCache.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param httpCache.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param httpCache.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## http-cache resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param httpCache.resources.limits [object] The resources limits for the http-cache containers
  ## @skip httpCache.resources.limits
  ## @param httpCache.resources.requests [object] The requested resources for the http-cache containers
  ## @skip httpCache.resources.requests
  ##
  resources:
    limits:
      memory: "1024Mi"
      cpu: "500m"
    requests:
      memory: "768Mi"
      cpu: "375m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param httpCache.podSecurityContext.enabled Enabled http-cache pods' Security Context
  ## @param httpCache.podSecurityContext.fsGroup Set http-cache pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 0
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param httpCache.containerSecurityContext.enabled Enabled http-cache containers' Security Context
  ## @param httpCache.containerSecurityContext.runAsUser Set http-cache containers' Security Context runAsUser
  ## @param httpCache.containerSecurityContext.runAsNonRoot Set http-cache containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsNonRoot: false

  ## @param httpCache.configuration [object] Configuration settings (env vars) for http-cache
  ##
  configuration: |

  ## @param httpCache.secretConfiguration Configuration settings (env vars) for http-cache
  ##
  secretConfiguration: ""
  ## @param httpCache.existingConfigMap The name of an existing ConfigMap with your custom configuration for http-cache
  ##
  existingConfigMap: ""
  ## @param httpCache.existingSecret The name of an existing ConfigMap with your custom configuration for http-cache
  ##
  existingSecret: ""
  ## @param httpCache.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param httpCache.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param httpCache.hostAliases http-cache pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param httpCache.podLabels Extra labels for http-cache pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param httpCache.podAnnotations Annotations for http-cache pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param httpCache.podAffinityPreset Pod affinity preset. Ignored if `httpCache.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param httpCache.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `httpCache.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node httpCache.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param httpCache.nodeAffinityPreset.type Node affinity preset type. Ignored if `httpCache.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param httpCache.nodeAffinityPreset.key Node label key to match. Ignored if `httpCache.affinity` is set
    ##
    key: ""
    ## @param httpCache.nodeAffinityPreset.values Node label values to match. Ignored if `httpCache.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param httpCache.affinity Affinity for http-cache pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `httpCache.podAffinityPreset`, `httpCache.podAntiAffinityPreset`, and `httpCache.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param httpCache.nodeSelector Node labels for http-cache pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param httpCache.tolerations Tolerations for http-cache pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param httpCache.updateStrategy.type http-cache statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param httpCache.priorityClassName http-cache pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param httpCache.schedulerName Name of the k8s scheduler (other than default) for http-cache pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param httpCache.lifecycleHooks for the http-cache container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param httpCache.extraEnvVars Array with extra environment variables to add to http-cache nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param httpCache.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for http-cache nodes
  ##
  extraEnvVarsCM: ""
  ## @param httpCache.extraEnvVarsSecret Name of existing Secret containing extra env vars for http-cache nodes
  ##
  extraEnvVarsSecret: ""
  ## @param httpCache.extraVolumes Optionally specify extra list of additional volumes for the http-cache pod(s)
  ##
  extraVolumes: []
  ## @param httpCache.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the http-cache container(s)
  ##
  extraVolumeMounts: []
  ## @param httpCache.sidecars Add additional sidecar containers to the http-cache pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param httpCache.initContainers Add additional init containers to the http-cache pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section http-cache Service Parameters
  ##
  ##
  service:
    ## @param httpCache.service.type http-cache service type
    ##
    type: ClusterIP
    ## @param httpCache.service.ports.http http-cache service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param httpCache.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param httpCache.service.clusterIP http-cache service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param httpCache.service.loadBalancerIP http-cache service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param httpCache.service.labelSelectorsOverride Selector for http-cache service
    ##
    labelSelectorsOverride: {}
    ## @param httpCache.service.loadBalancerSourceRanges http-cache service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param httpCache.service.externalTrafficPolicy http-cache service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param httpCache.service.annotations Additional custom annotations for http-cache service
    ##
    annotations: {}
    ## @param httpCache.service.extraPorts Extra ports to expose in http-cache service (normally used with the `sidecars` value)
    ##
    extraPorts: []
  ## @section http-cache ServiceAccount configuration
  ##
  serviceAccount:
    ## @param httpCache.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param httpCache.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param httpCache.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section cdnInvalidatorSub Deployment Parameters
##
cdnInvalidatorSub:
  ## cdnInvalidatorSub image
  ## @param cdnInvalidatorSub.image.registry cdn-invalidator-sub image registry
  ## @param cdnInvalidatorSub.image.repository cdn-invalidator-sub image repository
  ## @param cdnInvalidatorSub.image.tag cdn-invalidator-sub image tag (immutable tags are recommended)
  ## @param cdnInvalidatorSub.image.pullPolicy cdn-invalidator-sub image pull policy
  ## @param cdnInvalidatorSub.image.pullSecrets cdn-invalidator-sub image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: consumers/cdn-invalidator-sub
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param cdnInvalidatorSub.replicaCount Number of cdnInvalidatorSub replicas to deploy
  ##
  replicaCount: 1
  ## @param cdnInvalidatorSub.containerPorts.http cdnInvalidatorSub HTTP container port
  ##
  containerPorts:
    http: 3000
  ## Configure extra options for cdnInvalidatorSub containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param cdnInvalidatorSub.livenessProbe.enabled Enable livenessProbe on cdnInvalidatorSub containers
  ## @param cdnInvalidatorSub.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param cdnInvalidatorSub.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param cdnInvalidatorSub.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param cdnInvalidatorSub.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param cdnInvalidatorSub.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param cdnInvalidatorSub.readinessProbe.enabled Enable readinessProbe on cdnInvalidatorSub containers
  ## @param cdnInvalidatorSub.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param cdnInvalidatorSub.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param cdnInvalidatorSub.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param cdnInvalidatorSub.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param cdnInvalidatorSub.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param cdnInvalidatorSub.startupProbe.enabled Enable startupProbe on cdnInvalidatorSub containers
  ## @param cdnInvalidatorSub.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param cdnInvalidatorSub.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param cdnInvalidatorSub.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param cdnInvalidatorSub.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param cdnInvalidatorSub.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param cdnInvalidatorSub.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param cdnInvalidatorSub.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param cdnInvalidatorSub.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## cdnInvalidatorSub resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param cdnInvalidatorSub.resources.limits [object] The resources limits for the cdnInvalidatorSub containers
  ## @skip cdnInvalidatorSub.resources.limits
  ## @param cdnInvalidatorSub.resources.requests [object] The requested resources for the cdnInvalidatorSub containers
  ## @skip cdnInvalidatorSub.resources.requests
  ##
  resources:
    limits:
      memory: "512Mi"
      cpu: "500m"
    requests:
      memory: "372Mi"
      cpu: "350m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param cdnInvalidatorSub.podSecurityContext.enabled Enabled cdnInvalidatorSub pods' Security Context
  ## @param cdnInvalidatorSub.podSecurityContext.fsGroup Set cdnInvalidatorSub pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 0
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param cdnInvalidatorSub.containerSecurityContext.enabled Enabled cdnInvalidatorSub containers' Security Context
  ## @param cdnInvalidatorSub.containerSecurityContext.runAsUser Set cdnInvalidatorSub containers' Security Context runAsUser
  ## @param cdnInvalidatorSub.containerSecurityContext.runAsNonRoot Set cdnInvalidatorSub containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsNonRoot: false

  ## @param cdnInvalidatorSub.configuration [object] Configuration settings (env vars) for cdnInvalidatorSub
  ##
  configuration: |

  ## @param cdnInvalidatorSub.secretConfiguration Configuration settings (env vars) for cdnInvalidatorSub
  ##
  secretConfiguration: ""
  ## @param cdnInvalidatorSub.existingConfigMap The name of an existing ConfigMap with your custom configuration for cdnInvalidatorSub
  ##
  existingConfigMap: ""
  ## @param cdnInvalidatorSub.existingSecret The name of an existing ConfigMap with your custom configuration for cdnInvalidatorSub
  ##
  existingSecret: ""
  ## @param cdnInvalidatorSub.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param cdnInvalidatorSub.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param cdnInvalidatorSub.hostAliases cdnInvalidatorSub pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param cdnInvalidatorSub.podLabels Extra labels for cdnInvalidatorSub pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param cdnInvalidatorSub.podAnnotations Annotations for cdnInvalidatorSub pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param cdnInvalidatorSub.podAffinityPreset Pod affinity preset. Ignored if `cdnInvalidatorSub.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param cdnInvalidatorSub.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `cdnInvalidatorSub.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node cdnInvalidatorSub.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param cdnInvalidatorSub.nodeAffinityPreset.type Node affinity preset type. Ignored if `cdnInvalidatorSub.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param cdnInvalidatorSub.nodeAffinityPreset.key Node label key to match. Ignored if `cdnInvalidatorSub.affinity` is set
    ##
    key: ""
    ## @param cdnInvalidatorSub.nodeAffinityPreset.values Node label values to match. Ignored if `cdnInvalidatorSub.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param cdnInvalidatorSub.affinity Affinity for cdnInvalidatorSub pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `cdnInvalidatorSub.podAffinityPreset`, `cdnInvalidatorSub.podAntiAffinityPreset`, and `cdnInvalidatorSub.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param cdnInvalidatorSub.nodeSelector Node labels for cdnInvalidatorSub pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param cdnInvalidatorSub.tolerations Tolerations for cdnInvalidatorSub pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param cdnInvalidatorSub.updateStrategy.type cdnInvalidatorSub statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param cdnInvalidatorSub.priorityClassName cdnInvalidatorSub pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param cdnInvalidatorSub.schedulerName Name of the k8s scheduler (other than default) for cdnInvalidatorSub pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param cdnInvalidatorSub.lifecycleHooks for the cdnInvalidatorSub container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param cdnInvalidatorSub.extraEnvVars Array with extra environment variables to add to cdnInvalidatorSub nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param cdnInvalidatorSub.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for cdnInvalidatorSub nodes
  ##
  extraEnvVarsCM: ""
  ## @param cdnInvalidatorSub.extraEnvVarsSecret Name of existing Secret containing extra env vars for cdnInvalidatorSub nodes
  ##
  extraEnvVarsSecret: ""
  ## @param cdnInvalidatorSub.extraVolumes Optionally specify extra list of additional volumes for the cdnInvalidatorSub pod(s)
  ##
  extraVolumes: []
  ## @param cdnInvalidatorSub.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the cdnInvalidatorSub container(s)
  ##
  extraVolumeMounts: []
  ## @param cdnInvalidatorSub.sidecars Add additional sidecar containers to the cdnInvalidatorSub pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param cdnInvalidatorSub.initContainers Add additional init containers to the cdnInvalidatorSub pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section cdnInvalidatorSub Service Parameters
  ##
  ##
  service:
    ## @param cdnInvalidatorSub.service.type cdnInvalidatorSub service type
    ##
    type: ClusterIP
    ## @param cdnInvalidatorSub.service.ports.http cdnInvalidatorSub service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param cdnInvalidatorSub.service.nodePorts.http Node port for HTTP
    ## @param cdnInvalidatorSub.service.nodePorts.https Node port for HTTPS
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
      https: ""
    ## @param cdnInvalidatorSub.service.clusterIP cdnInvalidatorSub service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param cdnInvalidatorSub.service.loadBalancerIP cdnInvalidatorSub service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param cdnInvalidatorSub.service.labelSelectorsOverride Selector for cdnInvalidatorSub service
    ##
    labelSelectorsOverride: {}
    ## @param cdnInvalidatorSub.service.loadBalancerSourceRanges cdnInvalidatorSub service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param cdnInvalidatorSub.service.externalTrafficPolicy cdnInvalidatorSub service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param cdnInvalidatorSub.service.annotations Additional custom annotations for cdnInvalidatorSub service
    ##
    annotations: {}
    ## @param cdnInvalidatorSub.service.extraPorts Extra ports to expose in cdnInvalidatorSub service (normally used with the `sidecars` value)
    ##
    extraPorts: []
  ## @section cdnInvalidatorSub ServiceAccount configuration
  ##
  serviceAccount:
    ## @param cdnInvalidatorSub.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param cdnInvalidatorSub.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param cdnInvalidatorSub.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section workspace-api Deployment Parameters
##
workspaceApi:
  ## workspace-api image
  ## @param workspaceApi.image.registry workspace-api image registry
  ## @param workspaceApi.image.repository workspace-api image repository
  ## @param workspaceApi.image.tag workspace-api image tag (immutable tags are recommended)
  ## @param workspaceApi.image.pullPolicy workspace-api image pull policy
  ## @param workspaceApi.image.pullSecrets workspace-api image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: workspace-api
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param workspaceApi.replicaCount Number of workspace-api replicas to deploy
  ##
  replicaCount: 1
  ## @param workspaceApi.containerPorts.http workspace-api HTTP container port
  ##
  containerPorts:
    http: 8001
  ## Configure extra options for workspace-api containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param workspaceApi.livenessProbe.enabled Enable livenessProbe on workspace-api containers
  ## @param workspaceApi.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param workspaceApi.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param workspaceApi.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param workspaceApi.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param workspaceApi.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param workspaceApi.readinessProbe.enabled Enable readinessProbe on workspace-api containers
  ## @param workspaceApi.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param workspaceApi.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param workspaceApi.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param workspaceApi.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param workspaceApi.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param workspaceApi.startupProbe.enabled Enable startupProbe on workspace-api containers
  ## @param workspaceApi.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param workspaceApi.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param workspaceApi.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param workspaceApi.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param workspaceApi.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param workspaceApi.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param workspaceApi.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param workspaceApi.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## workspace-api autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param workspaceApi.autoscaling.enabled Enable autoscaling for the workspace-api containers
  ## @param workspaceApi.autoscaling.minReplicas The minimal number of containters for the workspace-api deployment
  ## @param workspaceApi.autoscaling.maxReplicas The maximum number of containers for the workspace-api deployment
  ## @param workspaceApi.autoscaling.targetCPUUtilizationPercentage The CPU utilization percentage used for scale up containers in workspace-api deployment
  ##
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75
  ## workspace-api resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param workspaceApi.resources.limits [object] The resources limits for the workspace-api containers
  ## @skip workspaceApi.resources.limits
  ## @param workspaceApi.resources.requests [object] The requested resources for the workspace-api containers
  ## @skip workspaceApi.resources.requests
  ##
  resources:
    limits:
      memory: "1024Mi"
      cpu: "1000m"
    requests:
      memory: "768Mi"
      cpu: "750m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param workspaceApi.podSecurityContext.enabled Enabled workspace-api pods' Security Context
  ## @param workspaceApi.podSecurityContext.fsGroup Set workspace-api pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 0
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param workspaceApi.containerSecurityContext.enabled Enabled workspace-api containers' Security Context
  ## @param workspaceApi.containerSecurityContext.runAsUser Set workspace-api containers' Security Context runAsUser
  ## @param workspaceApi.containerSecurityContext.runAsNonRoot Set workspace-api containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsNonRoot: false

  ## @param workspaceApi.configuration [object] Configuration settings (env vars) for workspace-api
  ##
  configuration: |

  ## @param workspaceApi.secretConfiguration Configuration settings (env vars) for workspace-api
  ##
  secretConfiguration: ""
  ## @param workspaceApi.existingConfigMap The name of an existing ConfigMap with your custom configuration for workspace-api
  ##
  existingConfigMap: ""
  ## @param workspaceApi.existingSecret The name of an existing ConfigMap with your custom configuration for workspace-api
  ##
  existingSecret: ""
  ## @param workspaceApi.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param workspaceApi.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param workspaceApi.hostAliases workspace-api pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param workspaceApi.podLabels Extra labels for workspace-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param workspaceApi.podAnnotations Annotations for workspace-api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param workspaceApi.podAffinityPreset Pod affinity preset. Ignored if `workspaceApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param workspaceApi.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `workspaceApi.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node workspaceApi.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param workspaceApi.nodeAffinityPreset.type Node affinity preset type. Ignored if `workspaceApi.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param workspaceApi.nodeAffinityPreset.key Node label key to match. Ignored if `workspaceApi.affinity` is set
    ##
    key: ""
    ## @param workspaceApi.nodeAffinityPreset.values Node label values to match. Ignored if `workspaceApi.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param workspaceApi.affinity Affinity for workspace-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `workspaceApi.podAffinityPreset`, `workspaceApi.podAntiAffinityPreset`, and `workspaceApi.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param workspaceApi.nodeSelector Node labels for workspace-api pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param workspaceApi.tolerations Tolerations for workspace-api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param workspaceApi.updateStrategy.type workspace-api statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param workspaceApi.priorityClassName workspace-api pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param workspaceApi.schedulerName Name of the k8s scheduler (other than default) for workspace-api pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param workspaceApi.lifecycleHooks for the workspace-api container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param workspaceApi.extraEnvVars Array with extra environment variables to add to workspace-api nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param workspaceApi.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for workspace-api nodes
  ##
  extraEnvVarsCM: ""
  ## @param workspaceApi.extraEnvVarsSecret Name of existing Secret containing extra env vars for workspace-api nodes
  ##
  extraEnvVarsSecret: ""
  ## @param workspaceApi.extraVolumes Optionally specify extra list of additional volumes for the workspace-api pod(s)
  ##
  extraVolumes: []
  ## @param workspaceApi.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the workspace-api container(s)
  ##
  extraVolumeMounts: []
  ## @param workspaceApi.sidecars Add additional sidecar containers to the workspace-api pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param workspaceApi.initContainers Add additional init containers to the workspace-api pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section workspace-api Service Parameters
  ##
  ##
  service:
    ## @param workspaceApi.service.type workspace-api service type
    ##
    type: ClusterIP
    ## @param workspaceApi.service.ports.http workspace-api service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param workspaceApi.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param workspaceApi.service.clusterIP workspace-api service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param workspaceApi.service.loadBalancerIP workspace-api service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param workspaceApi.service.labelSelectorsOverride Selector for workspace-api service
    ##
    labelSelectorsOverride: {}
    ## @param workspaceApi.service.loadBalancerSourceRanges workspace-api service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param workspaceApi.service.externalTrafficPolicy workspace-api service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param workspaceApi.service.annotations Additional custom annotations for workspace-api service
    ##
    annotations: {}
    ## @param workspaceApi.service.extraPorts Extra ports to expose in workspace-api service (normally used with the `sidecars` value)
    ##
    extraPorts: []
  ## @section workspace-api ServiceAccount configuration
  ##
  serviceAccount:
    ## @param workspaceApi.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param workspaceApi.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param workspaceApi.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section workspace-subscriber Deployment Parameters
##
workspaceSubscriber:
  ## workspace-subscriber image
  ## @param workspaceSubscriber.image.registry workspace-subscriber image registry
  ## @param workspaceSubscriber.image.repository workspace-subscriber image repository
  ## @param workspaceSubscriber.image.tag workspace-subscriber image tag (immutable tags are recommended)
  ## @param workspaceSubscriber.image.pullPolicy workspace-subscriber image pull policy
  ## @param workspaceSubscriber.image.pullSecrets workspace-subscriber image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: workspace-api
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param workspaceSubscriber.replicaCount Number of workspace-subscriber replicas to deploy
  ##
  replicaCount: 1
  ## @param workspaceSubscriber.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param workspaceSubscriber.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param workspaceSubscriber.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## workspace-subscriber resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param workspaceSubscriber.resources.limits [object] The resources limits for the workspace-subscriber containers
  ## @skip workspaceSubscriber.resources.limits
  ## @param workspaceSubscriber.resources.requests [object] The requested resources for the workspace-subscriber containers
  ## @skip workspaceSubscriber.resources.requests
  ##
  resources:
    limits:
      memory: "512Mi"
      cpu: "500m"
    requests:
      memory: "372Mi"
      cpu: "350m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param workspaceSubscriber.podSecurityContext.enabled Enabled workspace-subscriber pods' Security Context
  ## @param workspaceSubscriber.podSecurityContext.fsGroup Set workspace-subscriber pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 0
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param workspaceSubscriber.containerSecurityContext.enabled Enabled workspace-subscriber containers' Security Context
  ## @param workspaceSubscriber.containerSecurityContext.runAsUser Set workspace-subscriber containers' Security Context runAsUser
  ## @param workspaceSubscriber.containerSecurityContext.runAsNonRoot Set workspace-subscriber containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsNonRoot: false

  ## @param workspaceSubscriber.configuration [object] Configuration settings (env vars) for workspace-subscriber
  ##
  configuration: ""
  ## @param workspaceSubscriber.secretConfiguration Configuration settings (env vars) for workspace-subscriber
  ##
  secretConfiguration: ""
  ## @param workspaceSubscriber.existingConfigMap The name of an existing ConfigMap with your custom configuration for workspace-subscriber
  ##
  existingConfigMap: ""
  ## @param workspaceSubscriber.existingSecret The name of an existing ConfigMap with your custom configuration for workspace-subscriber
  ##
  existingSecret: ""
  ## @param workspaceSubscriber.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param workspaceSubscriber.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param workspaceSubscriber.hostAliases workspace-subscriber pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param workspaceSubscriber.podLabels Extra labels for workspace-subscriber pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param workspaceSubscriber.podAnnotations Annotations for workspace-subscriber pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param workspaceSubscriber.podAffinityPreset Pod affinity preset. Ignored if `workspaceSubscriber.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param workspaceSubscriber.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `workspaceSubscriber.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node workspaceSubscriber.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param workspaceSubscriber.nodeAffinityPreset.type Node affinity preset type. Ignored if `workspaceSubscriber.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param workspaceSubscriber.nodeAffinityPreset.key Node label key to match. Ignored if `workspaceSubscriber.affinity` is set
    ##
    key: ""
    ## @param workspaceSubscriber.nodeAffinityPreset.values Node label values to match. Ignored if `workspaceSubscriber.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param workspaceSubscriber.affinity Affinity for workspace-subscriber pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `workspaceSubscriber.podAffinityPreset`, `workspaceSubscriber.podAntiAffinityPreset`, and `workspaceSubscriber.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param workspaceSubscriber.nodeSelector Node labels for workspace-subscriber pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param workspaceSubscriber.tolerations Tolerations for workspace-subscriber pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param workspaceSubscriber.updateStrategy.type workspace-subscriber statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param workspaceSubscriber.priorityClassName workspace-subscriber pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param workspaceSubscriber.schedulerName Name of the k8s scheduler (other than default) for workspace-subscriber pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param workspaceSubscriber.lifecycleHooks for the workspace-subscriber container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param workspaceSubscriber.extraEnvVars Array with extra environment variables to add to workspace-subscriber nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param workspaceSubscriber.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for workspace-subscriber nodes
  ##
  extraEnvVarsCM: ""
  ## @param workspaceSubscriber.extraEnvVarsSecret Name of existing Secret containing extra env vars for workspace-subscriber nodes
  ##
  extraEnvVarsSecret: ""
  ## @param workspaceSubscriber.extraVolumes Optionally specify extra list of additional volumes for the workspace-subscriber pod(s)
  ##
  extraVolumes: []
  ## @param workspaceSubscriber.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the workspace-subscriber container(s)
  ##
  extraVolumeMounts: []
  ## @param workspaceSubscriber.sidecars Add additional sidecar containers to the workspace-subscriber pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param workspaceSubscriber.initContainers Add additional init containers to the workspace-subscriber pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section workspace-subscriber ServiceAccount configuration
  ##
  serviceAccount:
    ## @param workspaceSubscriber.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param workspaceSubscriber.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param workspaceSubscriber.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section workspace-www Deployment Parameters
##
workspaceWww:
  ## workspace-www image
  ## @param workspaceWww.image.registry workspace-www image registry
  ## @param workspaceWww.image.repository workspace-www image repository
  ## @param workspaceWww.image.tag workspace-www image tag (immutable tags are recommended)
  ## @param workspaceWww.image.pullPolicy workspace-www image pull policy
  ## @param workspaceWww.image.pullSecrets workspace-www image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: workspace-www
    ## Specify a custom image tag
    tag: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param workspaceWww.replicaCount Number of workspace-www replicas to deploy
  ##
  replicaCount: 1
  ## @param workspaceWww.containerPorts.http workspace-www HTTP container port
  ##
  containerPorts:
    http: 8080
  ## Configure extra options for workspace-www containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param workspaceWww.livenessProbe.enabled Enable livenessProbe on workspace-www containers
  ## @param workspaceWww.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param workspaceWww.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param workspaceWww.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param workspaceWww.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param workspaceWww.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param workspaceWww.readinessProbe.enabled Enable readinessProbe on workspace-www containers
  ## @param workspaceWww.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param workspaceWww.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param workspaceWww.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param workspaceWww.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param workspaceWww.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param workspaceWww.startupProbe.enabled Enable startupProbe on workspace-www containers
  ## @param workspaceWww.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param workspaceWww.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param workspaceWww.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param workspaceWww.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param workspaceWww.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param workspaceWww.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param workspaceWww.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param workspaceWww.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## workspace-www autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param workspaceWww.autoscaling.enabled Enable autoscaling for the workspace-www containers
  ## @param workspaceWww.autoscaling.minReplicas The minimal number of containters for the workspace-www deployment
  ## @param workspaceWww.autoscaling.maxReplicas The maximum number of containers for the workspace-www deployment
  ## @param workspaceWww.autoscaling.targetCPUUtilizationPercentage The CPU utilization percentage used for scale up containers in workspace-www deployment
  ##
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 75
  ## workspace-www resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param workspaceWww.resources.limits [object] The resources limits for the workspace-www containers
  ## @skip workspaceWww.resources.limits
  ## @param workspaceWww.resources.requests [object] The requested resources for the workspace-www containers
  ## @skip workspaceWww.resources.requests
  ##
  resources:
    limits:
      memory: "1024Mi"
      cpu: "500m"
    requests:
      memory: "768Mi"
      cpu: "350m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param workspaceWww.podSecurityContext.enabled Enabled workspace-www pods' Security Context
  ## @param workspaceWww.podSecurityContext.fsGroup Set workspace-www pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 0
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param workspaceWww.containerSecurityContext.enabled Enabled workspace-www containers' Security Context
  ## @param workspaceWww.containerSecurityContext.runAsUser Set workspace-www containers' Security Context runAsUser
  ## @param workspaceWww.containerSecurityContext.runAsNonRoot Set workspace-www containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsNonRoot: false

  ## @param workspaceWww.configuration [object] Configuration settings (env vars) for workspace-www
  ##
  configuration: ""
  ## @param workspaceWww.secretConfiguration Configuration settings (env vars) for workspace-www
  ##
  secretConfiguration: ""
  ## @param workspaceWww.existingConfigMap The name of an existing ConfigMap with your custom configuration for workspace-www
  ##
  existingConfigMap: ""
  ## @param workspaceWww.existingSecret The name of an existing ConfigMap with your custom configuration for workspace-www
  ##
  existingSecret: ""
  ## @param workspaceWww.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param workspaceWww.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param workspaceWww.hostAliases workspace-www pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param workspaceWww.podLabels Extra labels for workspace-www pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param workspaceWww.podAnnotations Annotations for workspace-www pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param workspaceWww.podAffinityPreset Pod affinity preset. Ignored if `workspaceWww.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param workspaceWww.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `workspaceWww.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node workspaceWww.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param workspaceWww.nodeAffinityPreset.type Node affinity preset type. Ignored if `workspaceWww.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param workspaceWww.nodeAffinityPreset.key Node label key to match. Ignored if `workspaceWww.affinity` is set
    ##
    key: ""
    ## @param workspaceWww.nodeAffinityPreset.values Node label values to match. Ignored if `workspaceWww.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param workspaceWww.affinity Affinity for workspace-www pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `workspaceWww.podAffinityPreset`, `workspaceWww.podAntiAffinityPreset`, and `workspaceWww.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param workspaceWww.nodeSelector Node labels for workspace-www pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param workspaceWww.tolerations Tolerations for workspace-www pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param workspaceWww.updateStrategy.type workspace-www statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param workspaceWww.priorityClassName workspace-www pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param workspaceWww.schedulerName Name of the k8s scheduler (other than default) for workspace-www pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param workspaceWww.lifecycleHooks for the workspace-www container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param workspaceWww.extraEnvVars Array with extra environment variables to add to workspace-www nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param workspaceWww.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for workspace-www nodes
  ##
  extraEnvVarsCM: ""
  ## @param workspaceWww.extraEnvVarsSecret Name of existing Secret containing extra env vars for workspace-www nodes
  ##
  extraEnvVarsSecret: ""
  ## @param workspaceWww.extraVolumes Optionally specify extra list of additional volumes for the workspace-www pod(s)
  ##
  extraVolumes: []
  ## @param workspaceWww.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the workspace-www container(s)
  ##
  extraVolumeMounts: []
  ## @param workspaceWww.sidecars Add additional sidecar containers to the workspace-www pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}
  ## @param workspaceWww.initContainers Add additional init containers to the workspace-www pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: {}
  ## @section workspace-www Service Parameters
  ##
  ##
  service:
    ## @param workspaceWww.service.type workspace-www service type
    ##
    type: ClusterIP
    ## @param workspaceWww.service.ports.http workspace-www service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param workspaceWww.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param workspaceWww.service.clusterIP workspace-www service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param workspaceWww.service.loadBalancerIP workspace-www service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param workspaceWww.service.labelSelectorsOverride Selector for workspace-www service
    ##
    labelSelectorsOverride: {}
    ## @param workspaceWww.service.loadBalancerSourceRanges workspace-www service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param workspaceWww.service.externalTrafficPolicy workspace-www service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param workspaceWww.service.annotations Additional custom annotations for workspace-www service
    ##
    annotations: {}
    ## @param workspaceWww.service.extraPorts Extra ports to expose in workspace-www service (normally used with the `sidecars` value)
    ##
    extraPorts: []
  ## @section workspace-www ServiceAccount configuration
  ##
  serviceAccount:
    ## @param workspaceWww.serviceAccount.create Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## @param workspaceWww.serviceAccount.name The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the common.names.fullname template
    ##
    name: ""
    ## @param workspaceWww.serviceAccount.automountServiceAccountToken Mount service account token in the deployment
    ##
    automountServiceAccountToken: false

## @section Init Container Parameters
##
workspaceMigrations:
  ## workspace-db image
  ## @param workspaceMigrations.image.registry workspace-db image registry
  ## @param workspaceMigrations.image.repository workspace-db image repository
  ## @param workspaceMigrations.image.tag workspace-db image tag (immutable tags are recommended)
  ## @param workspaceMigrations.image.pullPolicy workspace-db image pull policy
  ## @param workspaceMigrations.image.pullSecrets workspace-db image pull secrets
  ##
  image:
    registry: gcr.io/carto-onprem-artifacts
    repository: workspace-db
    ## Specify a custom image tag
    tag: ""
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param workspaceMigrations.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param workspaceMigrations.args Override default container args (useful when using custom images)
  ##
  args: []
  ## Init container's resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param workspaceMigrations.resources.limits [object] The resources limits for the init container
  ## @skip workspaceMigrations.resources.limits
  ## @param workspaceMigrations.resources.requests [object] The requested resources for the init container
  ## @skip workspaceMigrations.resources.requests
  ##
  resources:
    limits: {}
    requests: {}
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param workspaceMigrations.containerSecurityContext.enabled Enable container security context
  ## @param workspaceMigrations.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
  ## @param workspaceMigrations.containerSecurityContext.runAsNonRoot Force the init container to run as non root
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 0
    runAsNonRoot: false

## @section Internal Redis&trade; subchart parameters
## Internal Redis &trade; chart configuration
## ref: https://github.com/bitnami/charts/blob/master/bitnami/redis/values.yaml
## @param internalRedis.enabled Switch to enable or disable the Redis&trade; helm
## @param internalRedis.tlsEnabled Whether or not connect to Redis via TLS
## @param internalRedis.auth.enabled Switch to enable or disable authentication
## @param internalRedis.auth.password Redis&trade; password
## @param internalRedis.auth.existingSecret Name of existing secret object containing the password
## @param internalRedis.architecture Cluster settings
## @param internalRedis.master.persistence.enabled Enable master persistent volumes
## @param internalRedis.replica.persistence.enabled Enable replica persistent volumes
##
internalRedis:
  enabled: true
  tlsEnabled: false
  ## @param internalRedis.nameOverride String to partially override common.names.fullname template (will maintain the release name)
  ##
  nameOverride: "redis"
  auth:
    enabled: true
    ## Redis&trade; password (both master and slave). Defaults to a random 10-character alphanumeric string if not set and auth.enabled is true.
    ## It should always be set using the password value or in the existingSecret to avoid issues
    ## with CARTO.
    ## The password value is ignored if existingSecret is set
    ##
    password: ""
    existingSecret: ""
  architecture: standalone
  master:
    persistence:
      enabled: false
  replica:
    persistence:
      enabled: false

## @section External Redis parameters
## External Redis configuration
## All of these values are only used when redis.enabled is set to false
## @param externalRedis.host Redis host
## @param externalRedis.port Redis port number
## @param externalRedis.password Redis password
## @param externalRedis.tlsEnabled Whether or not connect to Redis via TLS
## @param externalRedis.tlsCA CA certificate in case Redis TLS cert it's selfsigned
## @param externalRedis.existingSecret Name of an existing secret resource containing the Redis password in a 'redis-password' key
## @param externalRedis.existingSecretPasswordKey Key of the existing secret
##
externalRedis:
  host: localhost
  port: 6379
  password: ""
  tlsEnabled: false
  tlsCA: ""
  existingSecret: ""
  existingSecretPasswordKey: ""

## @section Internal PostgreSQL subchart parameters
## Internal PostgreSQL chart configuration
## ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
## @param internalPostgresql.enabled Switch to enable or disable the PostgreSQL helm chart
## @param internalPostgresql.auth.username CARTO Postgresql username
## @param internalPostgresql.auth.password CARTO Postgresql password
## @param internalPostgresql.auth.postgresPassword CARTO Postgresql password for the postgres user
## @param internalPostgresql.auth.database CARTO Postgresql database
## @param internalPostgresql.sslEnabled Whether or not connect to CARTO Postgresql via TLS
## @param internalPostgresql.auth.existingSecret Name of an existing secret containing the CARTO Postgresql password ('postgresql-password' key)
##
internalPostgresql:
  enabled: true
  sslEnabled: false
  ## @param internalPostgresql.image.tag Tag of the PostgreSQL image
  ##
  image:
    tag: "13.5.0-debian-10-r84"
  ## @param internalPostgresql.nameOverride String to partially override common.names.fullname template (will maintain the release name)
  ##
  nameOverride: "postgresql"
  auth:
    username: workspace_admin
    password: ""
    database: workspace
    postgresPassword: ""
    ## This secret is used in case of postgresql.enabled=true and we would like to specify password for newly created postgresql instance
    ##
    existingSecret: ""
  ## @param internalPostgresql.primary.initdb.scripts [array] Scripts for initializing the database
  ##
  primary:
    initdb:
      scripts:
        # HACK: Temporary workaround until we propose the CARTO team to change the workspace-migrations logic so it accepts an already existing database
        delete_db_and_user.sh: |
          # Using bash because we need the postgres user and the initDbUser and initDbPassword values don't work
          # correctly with the postgres user
          PGPASSWORD=$POSTGRES_POSTGRES_PASSWORD psql -U postgres <<EOF
          DROP DATABASE "{{ .Values.auth.database }}";
          DROP USER "{{ .Values.auth.username }}";
          EOF
## @section External PostgreSQL parameters
## External PostgreSQL configuration
## All of these values are only used when postgresql.enabled is set to false
## @param externalPostgresql.host Database host
## @param externalPostgresql.user non-root Username for CARTO Database (seen from outside the database)
## @param externalPostgresql.internalUser non-root Username for CARTO Database (seen from inside the database). If this value is not defined, `externalPostgresql.user` is used.
## @param externalPostgresql.password Database password
## @param externalPostgresql.adminUser Database admin user (seen from outside the database)
## @param externalPostgresql.internalAdminUser Database admin user (seen from inside the database). If this value is not defined, `externalPostgresql.adminUser` is used.
## @param externalPostgresql.adminPassword Database admin password
## @param externalPostgresql.existingSecret Name of an existing secret resource containing the DB password
## @param externalPostgresql.existingSecretPasswordKey Name of the key inside the secret containing the DB password
## @param externalPostgresql.existingSecretAdminPasswordKey Name of the key inside the secret containing the DB admin password
## @param externalPostgresql.database Database name
## @param externalPostgresql.port Database port number
## @param externalPostgresql.sslEnabled Whether or not connect to CARTO Postgresql via TLS
## @param externalPostgresql.sslCA CA certificate in case CARTO Postgresql TLS cert it's selfsigned
##
externalPostgresql:
  host: localhost
  user: workspace_admin
  internalUser: ""
  password: ""
  adminUser: postgres
  internalAdminUser: ""
  adminPassword: ""
  existingSecret: ""
  existingSecretPasswordKey: ""
  existingSecretAdminPasswordKey: ""
  database: workspace
  port: 5432
  sslEnabled: false
  sslCA: ""
