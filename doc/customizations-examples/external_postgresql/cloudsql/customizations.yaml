
#####
# Configure External Postgresql with CloudSQL Auth Proxy
#
# In this example we create:
#  * A deployment with configured CloudSQL Auth Proxy
#  * A ClusterIP service to serve CloudSQL Auth Proxy
#  * External Postgresql configuration for tha chart 
#      - https://github.com/CartoDB/carto-selfhosted-helm/tree/main/customizations#setup-postgres-creating-secrets
#

internalPostgresql:
  # Disable the internal Postgres
  enabled: false
externalPostgresql:
  # this is the service name configured below
  host: carto-cloudsql-proxy
  # database user Will be created by Workspace Migrations
  user: "workspace_admin"
  #Admin user, postgres as default in cloud SQL
  adminUser: "postgres"
  #Secret Name that storage database credentials
  existingSecret: "cloudsql-secret"
    #Secret key with user password 
  existingSecretPasswordKey: "carto-password"
  #Secret key with admin password
  existingSecretAdminPasswordKey: "admin-password"
  # Database name, will be created by Workspace Migrations
  database: "workspace"
  port: "5432"
  sslEnabled: false #not needed because traffic is internal and the connection is encripted from the Cloud sql proxy

# Run configured cloud sql proxy as deployment and expose intenrally on 5432 port
# REMEMBER to create the secret for your service account with Cloud SQL Client role
#    i.e kubectl create secret generic carto-cloudsql-proxy-sa-key --from-file=service_account.json=mykey.json
#  and change <CONNECTION_NAME> in the pod commands (below)

extraDeploy:
  - |
    apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
    kind: Deployment
    metadata:
      name: carto-cloudsql-proxy
      labels: {{- include "common.labels.standard" . | nindent 4 }}
        app.kubernetes.io/component: cloudsql-proxy
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
        {{- end }}
      annotations:
        {{- if .Values.commonAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
        {{- end }}
      namespace: {{ .Release.Namespace | quote }}
    spec:
      replicas: 1
      strategy:
        type: RollingUpdate
      selector:
        matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
          app.kubernetes.io/component: carto-cloudsql-proxy
      template:
        metadata:
          annotations:
          labels: {{- include "common.labels.standard" . | nindent 8 }}
            app.kubernetes.io/component: carto-cloudsql-proxy
        spec:
          {{- include "carto.imagePullSecrets" . | nindent 6 }}
          securityContext:
            fsGroup: 65532
            supplementalGroups: [2345]
          containers:
            - name: carto-cloudsql-proxy
              image: gcr.io/cloudsql-docker/gce-proxy:1.27.1-alpine
              imagePullPolicy: IfNotPresent
              securityContext:
                runAsUser: 65532
                runAsGroup: 65532
                runAsNonRoot: false
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
              resources:
                limits:
                  memory: "512Mi"
                  cpu: "350m"
                requests:
                  memory: "124Mi"
                  cpu: "100m"
              ports:
                - name: postgresql
                  containerPort: 5432
              readinessProbe:
                tcpSocket:
                  port: 5432
                initialDelaySeconds: 5
                periodSeconds: 10
              livenessProbe:
                tcpSocket:
                  port: 5432
                initialDelaySeconds: 15
                periodSeconds: 20
              volumeMounts:
                # GCP Service Account with Cloud SQL Client role 
                - name: carto-cloudsql-proxy-sa-key
                  mountPath: "/secrets"
                  readOnly: true
              command:
                - "/cloud_sql_proxy"

                # If connecting from a VPC-native GKE cluster, you can use the
                # following flag to have the proxy connect over private IP
                - "-ip_address_types=PRIVATE"

                # By default, the proxy will write all logs to stderr. In some
                # environments, anything printed to stderr is consider an error. To
                # disable this behavior and write all logs to stdout (except errors
                # which will still go to stderr), use:
                - "-log_debug_stdout"

                # Replace <CONNECTION_NAME> with your CloudSQL connection name
                - "-instances=<CONNECTION_NAME>=tcp:0.0.0.0:5432"

                # This flag specifies where the service account key can be found
                # This volume ions mounted below with an existing secret
                - "-credential_file=/secrets/service_account.json"
          volumes:
          - name: carto-cloudsql-proxy-sa-key
            # This secret should be created
            # i.e kubectl create secret generic carto-cloudsql-proxy-sa-key --from-file=service_account.json=mykey.json
            secret:
              secretName: carto-cloudsql-proxy-sa-key
              optional: false
    ---
    apiVersion: v1
    kind: Service
    metadata:
      name: carto-cloudsql-proxy
      namespace: {{ .Release.Namespace | quote }}
      labels: {{- include "common.labels.standard" . | nindent 4 }}
        app.kubernetes.io/component: carto-cloudsql-proxy
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
        {{- end }}
      annotations:
        {{- if .Values.commonAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
        {{- end }}
    spec:
      type: ClusterIP
      ports:
      - port: 5432
        targetPort: postgresql
        protocol: TCP
        name: postgresql
      selector:
        {{- include "common.labels.matchLabels" . | nindent 4 }}
        app.kubernetes.io/component: carto-cloudsql-proxy
    

