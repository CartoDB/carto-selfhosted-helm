#################### TLS Offloading ####################
## The ingress will use your tls certificates to terminate
## TLS flow. https://github.com/CartoDB/carto-selfhosted-helm/tree/main/customizations#configure-tls-termination-in-the-service
## Remember to configure your certificates 
## https://github.com/CartoDB/carto-selfhosted-helm/tree/main/customizations#use-your-own-tls-certificate
############################
tlsCerts:
  httpsEnabled: false

router:
  ingress: 
    enabled: true
    tls: true
#################### External Static IP ####################
## If you want a permanent IP address that stays the same across deleting 
## your Ingress and creating a new one, you must reserve a global static external IP address.  
## https://cloud.google.com/kubernetes-engine/docs/concepts/ingress-xlb#static_ip_addresses_for_https_load_balancers
## run the command below and uncomment the annotations:
## 
##  $ gcloud compute addresses create my_carto_ip --global
##
############################################################

  ## Uncomment lines below if you have created your static ip in GCP
  # annotations:
  #  kubernetes.io/ingress.global-static-ip-name: "my_carto_ip"
  service:
    annotations:
      cloud.google.com/backend-config: "ingress-backend-config"

## BackendConfig object is used to configure ingress features related to the backends
## CARTO needs to extend the timeout of the connections to 600 seconds
extraDeploy:
  - |
    apiVersion: cloud.google.com/v1
    kind: BackendConfig
    metadata:
      name: ingress-backend-config
      labels: {{- include "common.labels.standard" . | nindent 4 }}
        app.kubernetes.io/component: carto
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
        {{- end }}
      annotations:
        {{- if .Values.commonAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
        {{- end }}
      namespace: {{ .Release.Namespace | quote }}  
    spec:
      timeoutSec: 600
