name: 'VIB'
on: # rebuild any PRs and main branch changes
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize
      - labeled
    branches:
      - main
    paths-ignore:
      - '**.md'
  push:
env:
  CSP_API_URL: https://console.cloud.vmware.com
  CSP_API_TOKEN: ${{ secrets.CSP_API_TOKEN }}
  VIB_PUBLIC_URL: https://cp.bromelia.vmware.com
  CARTO_CLONE_PATH: carto-sources
  # SIGNED_URL_DURATION: 1h
  SIGNED_URL_DURATION: 5m
  WORKSPACE_URL: https://carto.vmw
jobs:
  vib-verify: # verify in multiple target platforms
    runs-on: ubuntu-latest
    #if: ${{ contains(github.event.pull_request.labels.*.name, 'verify') }}
    strategy:
      matrix:
       include:
         - target-platform: gke
           target-platform-id: 91d398a2-25c4-4cda-8732-75a3cfc179a1
      fail-fast: false
    name: Verify ${{ matrix.target-platform}}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Google Cloud Auth
        uses: google-github-actions/auth@v0
        with:
          # credentials_json: ${{ secrets.CARTO_ARTIFACTS_SERVICE_ACCOUNT_BASE64 }}
          credentials_json: ${{ secrets.CARTO_ARTIFACTS_SERVICE_ACCOUNT }}
      - name: Install Google command line
        uses: google-github-actions/setup-gcloud@v0
        # with:
        #   project_id: ${{ env.ARTIFACTS_PROJECT_ID }}
        #   version: ${{ env.GCLOUD_VERSION }}
      # - name: Retrieve secrets
      #   id: secrets
      #   uses: google-github-actions/get-secretmanager-secrets@v0
      #   with:
      #     ## Role required: roles/secretmanager.secretAccessor
      #     # yamllint disable rule:line-length
      #     secrets: |-
      #       GITHUB_PAT:projects/carto-terraform-ci-cd/secrets/xyz
      #     # yamllint enable
      - name: Set up yq
        uses: frenck/action-setup-yq@v1
      - name: Retrieve chart info
        id: info
        shell: bash
        run: |
          set -ex
          echo "::set-output name=carto_version::$(yq .appVersion chart/Chart.yaml)"
      - name: Clone cloud-native
        uses: actions/checkout@v3
        with:
          # ref: '${{ steps.info.outputs.carto_version }}'
          ref: 'vib-cypress'
          # repository: 'CartoDB/cloud-native'
          repository: 'beltran-rubo/cloud-native'
          # token: '${{ steps.secrets.outputs.GITHUB_PAT }}'
          token: '${{ secrets.X_GITHUB_CARTOFANTE }}'
          path: '${{ env.CARTO_CLONE_PATH }}'
          persist-credentials: 'false'
      - name: Testing if works
        id: sign
        shell: bash
        run: |
          set -ex
          du -sh "${CARTO_CLONE_PATH}/workspace-www"
          cd "${CARTO_CLONE_PATH}/workspace-www"
          git status

          ### Edit workspace-www folder
            ## HotFix until we go against main
          cat .env | head -n 8 > .env
            # End HotFix

          cat environments/staging.env >> .env

          echo "CYPRESS_WORKSPACE_URL=${WORKSPACE_URL}" >> .env
          echo "CYPRESS_BASE_URL=${WORKSPACE_URL}" >> .env
          echo "CYPRESS_CI=true" >> .env

            # Replace me
          echo "CYPRESS_TENANT_ID=onp-bitnami-stag-1" >> .env
          echo "CYPRESS_RUN_ID=vmware-mlr" >> .env
            # End Replace me

          cat .env


          tar -czf ../cloud-native-workspace-www.tar.gz .
          cd ..
          ls -alh cloud-native-workspace-www.tar.gz
          gsutil -m cp cloud-native-workspace-www.tar.gz gs://mlr-testing-private/
          set +x
          SIGNED_URL="$(gsutil signurl --use-service-account -d ${SIGNED_URL_DURATION} gs://mlr-testing-private/cloud-native-workspace-www.tar.gz | awk -F '\t' '{print $4}' | tail -n 1)"
          echo "::add-mask::${SIGNED_URL}"
          set -x
          sleep 1s
          echo "::set-output name=workspace-www-source-url::${SIGNED_URL}"

      - name: Testing if works 2
        shell: bash
        run: |
          set -ex
          echo "${{ steps.sign.outputs.workspace-www-source-url }}"
          ### cat .vib/vib-platform-verify.json | jq -c '.phases.verify.actions| .[] | select((."action_id" == "cypress") and (.params.resources.path == "workspace-www")) '
          # set +x
          # WORKSPACE_WWW_SOURCE_URL_SCAPED="$(printf '%s' '${{ steps.sign.outputs.workspace-www-source-url }}' | sed -e 's|\&|\\\&|g')"
          # sed -i "s|REPLACE_ME_WORKSPACE_WWW_SOURCE_URL|${WORKSPACE_WWW_SOURCE_URL_SCAPED}|g" .vib/vib-platform-verify.json
          # set -x
          # cat .vib/vib-platform-verify.json
      - name: Upload secrets to be able to debug
        shell: bash
        run: |
          set -ex

          set +x
          echo "${{ secrets.CARTO_RUNTIME_PARAMETERS }}" > CARTO_RUNTIME_PARAMETERS.env
          echo "${{ secrets.CARTO_RUNTIME_PARAMETERS_STG }}" > CARTO_RUNTIME_PARAMETERS_STG.env
          echo "${{ secrets.VIB_ENV_PAT_CYPRESS_REPOSITORY }}" > VIB_ENV_PAT_CYPRESS_REPOSITORY.env

          gsutil -m cp *.env gs://mlr-testing-private/secrets-env/

      - uses: vmware-labs/vmware-image-builder-action@0.2.0
        with:
          pipeline: vib-platform-verify.json
        env:
          VIB_ENV_TARGET_PLATFORM: ${{ matrix.target-platform-id }}
          VIB_ENV_CARTO_RUNTIME_PARAMETERS: ${{ secrets.CARTO_RUNTIME_PARAMETERS }}
          VIB_ENV_CARTO_RUNTIME_PARAMETERS_STG: ${{ secrets.CARTO_RUNTIME_PARAMETERS_STG }}
          VIB_ENV_PAT_CYPRESS_REPOSITORY: ${{ secrets.VIB_ENV_PAT_CYPRESS_REPOSITORY }}
          VIB_ENV_CYPRESS_RECORD_KEY: ${{ secrets.VIB_ENV_CYPRESS_RECORD_KEY }}
          VIB_ENV_CYPRESS_MANAGEMENT_API_CLIENT_SECRET: ${{ secrets.VIB_ENV_CYPRESS_MANAGEMENT_API_CLIENT_SECRET }}
          VIB_ENV_CYPRESS_FIREBASE_API_KEY: ${{ secrets.VIB_ENV_CYPRESS_FIREBASE_API_KEY }}
          VIB_ENV_CYPRESS_CONNECTION_CREDENTIALS: ${{ secrets.VIB_ENV_CYPRESS_CONNECTION_CREDENTIALS }}
          VIB_ENV_CYPRESS_CLIENT_SECRET: ${{ secrets.VIB_ENV_CYPRESS_CLIENT_SECRET }}
          VIB_ENV_WORKSPACE_WWW_SOURCE_URL: ${{ steps.sign.outputs.workspace-www-source-url }}
