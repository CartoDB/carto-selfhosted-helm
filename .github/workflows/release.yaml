name: "Create SelfHosted Release"
on:
  push:
    branches:
      - main
    paths:
      - 'chart/Chart.yaml'
jobs:
  create-tag:
    timeout-minutes: 3
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up yq
        uses: frenck/action-setup-yq@v1
      - name: Retrieve Release Name
        id: info
        shell: bash
        run: |
          set -ex
          echo "::set-output name=carto_version::$(yq .appVersion chart/Chart.yaml)"
          echo "::set-output name=release_name::$(yq .version chart/Chart.yaml)"
      - uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.X_GITHUB_CARTOFANTE }}
          commit: ${{ github.sha }}
          name: ${{ steps.info.outputs.release_name }}
          tag: ${{ steps.info.outputs.release_name }}
          prerelease: true
          body: |
            Released the `${{ steps.info.outputs.release_name }}` version with `${{ steps.info.outputs.carto_version }}` Carto version
      - name: Slack notification (#carto-selfhosted-helm)
        if: always()
        env:
          SLACK_CHANNEL: C02PADFM0E4 #  #carto-selfhosted
          JOB_STATUS: ${{ job.status }}
        run: |
           if [ 'success' == "${JOB_STATUS}" ];then
             status_emoji=:white_check_mark:
           else
             status_emoji=:x:
           fi
           curl -F "text=Self Hosted Helm Chart Pre-Release \`${{ steps.info.outputs.release_name }}\` created:
            - *Status:* ${status_emoji}
            - *<https://github.com/CartoDB/carto-selfhosted-helm/releases|Releases>*" \
            -F "channel=${SLACK_CHANNEL}" \
            -H "Authorization: Bearer ${{ secrets.SLACK_KEY }}" \
            -X POST https://slack.com/api/chat.postMessage
